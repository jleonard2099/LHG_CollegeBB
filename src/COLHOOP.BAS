'$INCLUDE: 'KeyInput.BI'
'$INCLUDE: 'QPProEqu.BI'

DEFINT A-Z
DECLARE SUB AICOMCOACH
DECLARE SUB ALPHANUM (I$,J)
DECLARE SUB AUTOSETUP ()
DECLARE SUB BADFT ()
DECLARE SUB BALLDISTRIBUTE ()
DECLARE SUB BLANKLINE ()
DECLARE SUB BOX2SPC (NM$)
DECLARE SUB BOXSCREEN ()
DECLARE SUB BOXTOP ()
DECLARE SUB CLEARPBP ()
DECLARE SUB CLEARPBPBOX ()
DECLARE SUB CLOCKOVER ()
DECLARE SUB COLCNG ()
DECLARE SUB COMCOACH
DECLARE SUB COMPUTERSUB ()
DECLARE SUB DEADBALLOPTIONS ()
DECLARE SUB DEFENSEMENU ()
DECLARE SUB DEFREBOUND ()
DECLARE SUB DELAY ()
DECLARE SUB DISABLEPLAYER ()
DECLARE SUB DRAWBOX ()
DECLARE SUB EDITCX()
DECLARE SUB EVENTS (COUNT, SPECIAL)
DECLARE SUB FATIGUE ()
DECLARE SUB FILEBOX
DECLARE SUB FOULHARD ()
DECLARE SUB FOULSAFE ()
DECLARE SUB FRAME ()
DECLARE SUB GETATEAM (I1, YN$)
DECLARE SUB HORN ()
DECLARE SUB INITIALIZE ()
DECLARE SUB LASTFIVEMENU ()
DECLARE SUB LASTSHOT ()
DECLARE SUB LINEUPS ()
DECLARE SUB LOADSTATS
DECLARE SUB MADEFT ()
DECLARE SUB MAINSCREEN ()
DECLARE SUB MAKEPBP ()
DECLARE SUB MISSFT ()
DECLARE SUB OFFENSE ()
DECLARE SUB OFFREBOUND ()
DECLARE SUB PBP ()
DECLARE SUB PLAYINGTIME ()
DECLARE SUB PRDFAT ()
DECLARE SUB PRELOAD ()
DECLARE SUB PRESSGUARD ()
DECLARE SUB PRINTBOX
DECLARE SUB PRPFAT ()
DECLARE SUB QUARTERTOTAL ()
DECLARE SUB REBOUNDSORT
DECLARE SUB RECORDSCHECK ()
DECLARE SUB RESETFATIGUE ()
DECLARE SUB SAVESTATS
DECLARE SUB SCOREBOARD ()
DECLARE SUB SELECTID ()
DECLARE SUB SELECTPBP ()
DECLARE SUB SETSTAMINA ()
DECLARE SUB SHOTPERCENT ()
DECLARE SUB SHOTSTRING ()
DECLARE SUB STAMINASORT
DECLARE SUB STATCONVERT (Q,QQ)
DECLARE SUB STEALADJ ()
DECLARE SUB STOPPAGE ()
DECLARE SUB TEAMSELECT ()
DECLARE SUB TEAMSETUP ()
DECLARE SUB THREEFT ()
DECLARE SUB TICKER ()
DECLARE SUB TICKERCHECK ()
DECLARE SUB TOURNEY
DECLARE SUB WHOGETSBALL ()
DECLARE SUB WINDEX ()
DECLARE SUB ZEROCHECK ()
DECLARE SUB ZONECHANGE ()

DIM A(1, 13, 24) AS SINGLE, AA$(1, 13), B$(1), P7(1), R3(1), T0(1), T1(1), SX$(32, 2), W2(1, 13), W3(1, 13)
DIM APT%(100, 1), CRD(100) AS LONG, SITE$(100)
DIM B1(1, 4), S(1, 9), V9(14), C(1, 13, 6), ZZ(1, 13), B%(1, 13, 18), Z(15) AS SINGLE, Z1(15) AS SINGLE
DIM C$(1),S$(1),A1$(1),ATT(1) AS LONG,DF(1,13),PO$(1,13),RS(1,13,13),T2%(1,20)
DIM D8(4, 3), PR%(1, 1), PC%(1), CZ%(1), OB$(9), DB$(14)
DIM E%(13), QQ(1, 8, 13, 14), QR(1, 7, 14)
DIM F1(13), S3(13), G4(13), G5(13), D$(15), D1(1), W0(1, 13), W1(1, 13)
DIM G9%(1), F5%(1, 8), W%(1, 13, 1), IY(1), O0%(1), V$(500), Z2(13, 13) AS SINGLE
DIM NG%(18), NG1%(18), AP%(2), HF%(1, 6), DP(2, 4), FA%(1, 13), FY%(2), OF%(1), DT%(1), TM%(1, 13)
DIM O%(100), HT%(100), HO$(100), H$(100), SX%(32, 1, 14), ST%(32)
DIM R$(14), p$(1), X$(3), C7$(2), TS$(1), CM$(1), U5$(3), LC$(2), TB$(1)
DIM TR%(1, 9), Y$(1), Z5(1), Z6(1), PS$(4), D2(1), S1(1), RB(9), P5(14), P4(14)
DIM YN1$(3), TP%(1), TF%(1),Q$(250),O$(9),V%(500)
DIM vg%(8), vh%(8), V1%(1), V2%(1), L%(1, 4), P2(1), YN$(5), PB$(1), N%(16, 16, 3), N$(16, 16, 3)

COMMON SHARED A1$, B1$, C1$, D1$, E1$, F1$, G1$, H1$, J$, vg%(), vh%()
COMMON SHARED AP%(),N,S(),ZZ(),W%(),V9(),T0(),R3()
COMMON SHARED AP,U5,HT%,G9,EG%,TMT,H,T AS SINGLE,TE AS SINGLE,SX$(),SX%(),R$(),TS%,ST%,ST%()
COMMON SHARED APT%(), CRD() AS LONG, SITE$(), QQ(), QR()
COMMON SHARED BU%,YN$,y2 as long,R0 AS SINGLE,CT
COMMON SHARED C$(),S$(),A1$(),ATT() AS LONG,DF(),PO$(),RS(),T2%()
COMMON SHARED DB$(),DT%(),D2(),OB$(),OF%(),S3(),F1(),G5(),G4(),NF%
COMMON SHARED DK%, PZ%, FT%, X3%, XX%, FB%, F AS SINGLE, PB%, NL%
COMMON SHARED DP(),D8(),X$(),C7$(),O$(),TS$(),CM$(),U5$(),LC$()
COMMON SHARED E%(), Y3 AS LONG
COMMON SHARED F3S%,J8%,F3,BO%,V$(),V%(),NT,X0%,X1%,TP%(),LC%,FO,PB$
COMMON SHARED FF$,NG1%(),YN1$(),YN$(),NG%(),VT$,W$,W1$,VT1$
COMMON SHARED I, TR%(), F5%(), P9, L%(), A() AS SINGLE, C(), V1%(), V2%()
COMMON SHARED TB$(),PB$(),J,MJ,P5(),P4(),PS$(),TM%(),CZ%(),PR%(),IN,M5
COMMON SHARED TB%,TF%,N7%,TOU,TF$,N$(),N%(),PA%,HF%(),S2
COMMON SHARED W1(),Y$(),Q$(),FA%(),X,P2(),T1(),D,CTO%,XM,C1
COMMON SHARED Z2() AS SINGLE,W2(),W0(),Z1() AS SINGLE,Z() AS SINGLE,W3(),O%(),HO$(),HT%(),H$(),Q
COMMON SHARED Z5(),Z6(),RB(),X8,C7,DY,S9,D$(),JJ,G9%(),XS,CM%
COMMON SHARED p$(), B$(), S1(), D1(), AA$(), FY%(), B%(), U$, PASS%, U6 AS SINGLE, PT%, B1(), p, B, P7()

CLEAR

RANDOMIZE TIMER

CALL INITIALIZE
IF AP = 1 THEN CALL AUTOSETUP
IF AP = 1 AND TOU = 0 THEN 51

24 CLS : COLOR 2: PRINT TAB(29); "SELECT OPENING OPTIONS": PRINT

25 LOCATE 2, 2: COLOR 14: PRINT "(1) "; : COLOR 15: PRINT U5$(U5)
	LOCATE 3, 2: COLOR 14: PRINT "(2) "; : COLOR 15: PRINT "VISITING TEAM: "; : COLOR TR%(0, 0), TR%(0, 1): PRINT B$(0): COLOR , 0
	LOCATE 4, 2: COLOR 14: PRINT "(3) "; : COLOR 15: PRINT "HOME TEAM: "; : COLOR TR%(1, 0), TR%(1, 1): PRINT B$(1): COLOR , 0

28 LOCATE 5, 2: COLOR 14: PRINT "(4) "; : COLOR 15: PRINT "3-POINT SHOT: "; TS$(X3%)

29 LOCATE 6, 2: COLOR 14: PRINT "(5) "; : COLOR 15: PRINT C7$(C7)

30 LOCATE 7, 2: COLOR 14: PRINT "(6) "; : COLOR 15: PRINT "LOCATION: "; LC$(N)
	LOCATE 8, 2: COLOR 14: PRINT "(7) "; : COLOR 15: PRINT USING "DISPLAY PAUSE IN SECONDS: ##.#"; U6

32 LOCATE 9, 2: COLOR 14: PRINT "(8) "; : COLOR 15: PRINT "START GAME"
	LOCATE 10, 2: COLOR 14: PRINT "(9) "; : COLOR 15: PRINT "FOULS TO DISQUALIFY: "; NF%
	LOCATE 11, 2: COLOR 14: PRINT "(0) "; : COLOR 15: PRINT "SAVE SETTINGS"
	LOCATE 12, 2: COLOR 14: PRINT "(A) "; : COLOR 15: PRINT "FREE THROWS ON 10TH FOUL: "; TB$(TB%)
	LOCATE 13, 2: COLOR 14: PRINT "(B) "; : COLOR 15: PRINT "HUMAN COACHES WILL: "; CM$(CM%); : LOCATE 1, 1
	LOCATE 14, 2: COLOR 14: PRINT "(C) "; : COLOR 15: PRINT "3 FT WHEN FOULED ON 3-PT ATT: "; TS$(TF%)
	LOCATE 15, 2: COLOR 14: PRINT "(D) "; : COLOR 15: PRINT "1 FT ON 1ST 6 FLOOR FOULS : "; TS$(N7%)
	LOCATE 16, 2: COLOR 14: PRINT "(E) "; : COLOR 15: PRINT "PLAY BY PLAY: "; PB$(PB%)
	LOCATE 17, 2: PRINT "NOTE:: 1 FT ON 1ST 6 FLOOR FOULS THROUGH 1972-73 SEASON"
	LOCATE , 2: PRINT "       45 SEC SHOT CLOCK WAS ADOPTED IN 1984-85, BUT NOT USED IN"
	LOCATE , 2: PRINT "       84-85 POST SEASON TOURNAMENTS"
	LOCATE , 2: PRINT "       3 PT SHOT WAS ADOPTED IN 1986-87"
	LOCATE , 2: PRINT "       2 FT INSTEAD OF 1+1 AFTER 10TH FOUL ADOPTED IN 1990-91"
	LOCATE , 2: PRINT "       3 FT WHEN FOULED ON A 3 PT ATT ADOPTED IN 1990-91"
	LOCATE , 2: PRINT "       35 SEC SHOT CLOCK WAS ADOPTED IN 1993-94"

35 COLOR 7: I$=GetKeyPress$
	IF I$=CHR$(27) THEN RUN "HELLO.EXE"
	I = VAL(I$)
	IF UCASE$(I$) = "A" THEN I = 11
	IF UCASE$(I$) = "B" THEN I = 12
	IF UCASE$(I$) = "C" THEN I = 13
	IF UCASE$(I$) = "D" THEN I = 14
	IF UCASE$(I$) = "E" THEN I = 15
	IF I < 0 OR I > 15 THEN 35
	IF I = 0 THEN I = 10
	ON I GOTO 38, 40, 41, 42, 44, 46, 48, 50, 45, 43, 47, 33, 34, 39, 22

22 PB% = 1 - PB%: GOTO 32

33 CM% = 1 - CM%: GOTO 32

34 TF% = 1 - TF%: GOTO 32

38 U5 = U5 + 1: IF U5 > 3 THEN U5 = 0
	GOTO 25

39 N7% = 1 - N7%: GOTO 32

40 P9 = 0: CALL SELECTID: GOTO 24

41 P9 = 1: CALL SELECTID: GOTO 24

42 X3% = 1 - X3%: GOTO 28

43 OPEN "DEFAULT" FOR OUTPUT AS #1
	PRINT #1, U5: PRINT #1, X3%: PRINT #1, C7: PRINT #1, N: PRINT #1, NF%: PRINT #1, U6: PRINT #1, CM%: PRINT #1, TB%: PRINT #1, TF%: PRINT #1, N7%: PRINT #1, PB%
CLOSE 1: GOTO 32

44 C7 = C7 + 1: IF C7 > 2 THEN C7 = 0
	GOTO 29

45 NF% = NF% + 1: IF NF% > 6 THEN NF% = 5
	GOTO 32

46 N = N + 1: IF N > 2 THEN N = 1
	GOTO 30

47 TB% = 1 - TB%: GOTO 32

48 LOCATE 8, 32: INPUT U6: IF U6 < 0 THEN 48
	GOTO 24

50 IF B$(0) = "" OR B$(1) = "" THEN 24
	CLS : COLOR 3: JJ = 6
	SN = 1: LOCATE 6, 8: COLOR TR%(1, 0), TR%(1, 1)
	PRINT " Ö"; STRING$(61, 196); "· "; : FOR II = 1 TO JJ: LOCATE 6 + II, 8
	PRINT " º"; STRING$(61, 32); "º "; : NEXT
	LOCATE 7 + JJ, 8
	PRINT " Ó"; STRING$(61, 196); "½ "; : LOCATE 7, 11
	PRINT "IF YOU ARE USING THE 10 MINUTE TICKER OPTION FOR THIS GAME,"
	LOCATE , 11: PRINT "ENTER STARTING TIME FOR GAME IN THIS FORMAT"
	LOCATE , 11: PRINT "(EXAMPLES: 1:00P, 11:30A). OTHERWISE, JUST HIT ENTER": PRINT
	LOCATE , 11: INPUT "START TIME: "; ST$
	L = LEN(ST$)
	IF L = 5 THEN HR = VAL(LEFT$(ST$, 1)): MIN = VAL(MID$(ST$, 3, 2))
	IF L = 6 THEN HR = VAL(LEFT$(ST$, 2)): MIN = VAL(MID$(ST$, 4, 2))
	TT$ = RIGHT$(ST$, 1)
	IF UCASE$(TT$) = "P" AND LEFT$(ST$, 2) <> "12" THEN HR = HR + 12
	TM = HR * 60 + MIN
	ST% = INT(TM / 30 - 18)
	CALL EDITCX

51 FY%(2) = INT(((FY%(1) + FY%(0)) / 2) + .5)
	FOR I = 0 TO 1: FOR I1 = 0 TO 13: TM%(I, I1) = 1200: NEXT: NEXT
	IF U5 = 1 THEN CT = 0: GOTO 55
	IF U5 = 2 THEN U5 = 1: CT = 1: GOTO 55
	IF U5 = 3 THEN U5 = 2

55 CALL LOADSTATS
	GOTO 900

159 CALL CLOCKOVER
	CALL SCOREBOARD
	RETURN

170 FOR I = 0 TO 1
	DT%(I) = 0
	D2(I) = 0
	P7(I) = 0
	NEXT
	T = 0
	CALL QUARTERTOTAL
	H = H + 1
	T = 1200
	XS = 1
	X = 0
	IF H = 2 THEN U$ = "END OF HALF"
	IF H = 2 AND PB% = 0 THEN CALL PBP
	IF H = 2 AND PB% = 1 AND U6 <> 0 THEN CALL WINDEX: PRINT U$
	IF H > 3 THEN U$ = "END OF OVERTIME" + STR$(H - 3)
	IF H > 3 AND PB% = 0 THEN CALL PBP
	IF H > 3 AND PB% = 1 AND U6 <> 0 THEN CALL WINDEX: PRINT U$
	GOSUB 178: IF H < 3 AND U5 <> 0 THEN GOSUB 175
	IF H < 3 THEN P2(0) = 0: P2(1) = 0: GOSUB 159: PRINT : B = -1: CALL DEADBALLOPTIONS: T = 1200: CALL MAINSCREEN: FOR I = 0 TO 1: FOR I1 = 0 TO 13: TM%(I, I1) = 1200: FA%(I, I1) = 0: NEXT: NEXT: GOTO 250
	GOSUB 159
	IF H = 3 THEN U$ = "END OF REGULATION"
	IF H = 3 AND PB% = 0 THEN CALL PBP
	IF H = 3 AND PB% = 1 AND U6 <> 0 THEN CALL WINDEX: PRINT U$
	LOCATE 2, 31: PRINT "END OF REGULATION"
	IF S(0, 0) = S(1, 0) AND PB% = 0 THEN U$ = "OVERTIME !!!": CALL PBP
	IF S(0, 0) = S(1, 0) AND PB% = 1 THEN CALL WINDEX: PRINT "OVERTIME !!!": CALL DELAY
	IF S(0, 0) = S(1, 0) THEN 190
	I$ = GetKeyPress$

175 IF U5 = 1 THEN P9 = CT: CALL COMCOACH
	IF U5 = 2 THEN P9 = 0: CALL COMCOACH: P9 = 1: CALL COMCOACH
	RETURN

178 IF H = 2 AND PB% = 0 THEN U$ = "HALFTIME!": CALL PBP: GOSUB 8515
	IF H = 2 AND PB% = 1 THEN CALL WINDEX: PRINT "HALFTIME!": CALL DELAY: GOSUB 8515
	RETURN

190 T1(0) = T1(0) + 1: T1(1) = T1(1) + 1: T = 300: CALL MAINSCREEN
	FOR I = 0 TO 1
	FOR I1 = 0 TO 13: TM%(I, I1) = 300: FA%(I, I1) = 0
	NEXT: NEXT: B = -1
	CALL DEADBALLOPTIONS
	CALL SCOREBOARD
	GOTO 250

240 S9 = (S1(0) + S1(1)) / 2
	FOR P9 = 0 TO 1: IF U5 = 1 AND P9 = CT OR U5 = 2 THEN CALL SETSTAMINA: CALL COMCOACH: GOTO 243
	CALL SETSTAMINA: CALL LINEUPS: CALL FOULSAFE

243 GOSUB 819: NEXT P9
	GOSUB 159: CALL STEALADJ

250 P = INT(RND(1) * 2): IF P = 0 THEN D = 1
	IF P = 1 THEN D = 0
	GOSUB 3000: CALL LASTSHOT: IF T <= 0 THEN 170
	GOSUB 1033
	IF U6 = 0 AND (H = 1 OR H = 3) THEN PA% = D: GOTO 300
	IF U6 = 0 AND (H <> 1 OR H > 3) THEN P = PA%: D = 1 - P: PA% = 1 - PA%: GOTO 300
	IF (H = 1 OR H = 3) AND PB% = 0 THEN U$ = B$(P) + " GETS THE JUMP": PA% = D: CALL PBP
	IF (H = 1 OR H = 3) AND PB% = 1 THEN CALL WINDEX: PRINT B$(P) + " GETS THE JUMP": PA% = D: CALL DELAY
	IF (H <> 1 AND H<>3 OR H > 3) AND PB% = 0 THEN P = PA%: D = 1 - P: PA% = 1 - PA%: U$ = B$(P) + " INBOUNDS THE BALL": CALL PBP
	IF (H <> 1 AND H<>3 OR H > 3) AND PB% = 1 THEN P = PA%: D = 1 - P: PA% = 1 - PA%: CALL WINDEX: PRINT B$(P) + " INBOUNDS THE BALL": CALL DELAY
	GOTO 300

COMPFIVE:
	RN = INT(RND(1) * 100) + 1
	R0 = S(P, 0) - S(D, 0)
	IF T >= 3 AND T <= 5 AND X3% = 0 AND R0 < 3 THEN I1% = 5
	IF T >= 3 AND T <= 5 AND X3% = 1 AND R0 = 3 THEN I1% = 4
	IF T >= 3 AND T <= 5 AND X3% = 1 AND R0 = 2 AND RN <= 50 THEN I1% = 5
	IF T >= 3 AND T <= 5 AND X3% = 1 AND R0 = 2 AND RN > 50 THEN I1% = 4
	IF T < 3 AND X3% = 0 AND R0 < 3 THEN I1% = 0
	IF T < 3 AND X3% = 1 AND R0 = 3 THEN I1% = 1
	IF T < 3 AND X3% = 1 AND R0 = 2 AND RN <= 50 THEN I1% = 0
	IF T < 3 AND X3% = 1 AND R0 = 2 AND RN > 50 THEN I1% = 1
	GOTO 281

LASTFIVE:
	IF U5 = 2 OR U5 = 1 AND P = CT THEN GOTO COMPFIVE
	CALL LASTFIVEMENU

280  I$=GetKeyPress$
	I1% = VAL(I$): IF I1% < 0 OR I1% > 5 THEN 280
	IF I1% = 3 AND T1(P9) <= 0 THEN 280
	IF (I1% = 1 OR I1% = 4) AND X3% = 0 THEN 280
	COLOR 15, 0
	CALL SCOREBOARD

281  B = INT(RND(1) * 5)
	RN = INT(RND(1) * 100) + 1
	IF I1% = 0 AND RN <= 50 OR I1% = 1 AND RN <= 33 THEN U$ = "LONG PASS DOWN COURT": CALL PBP: CALL DELAY: U$ = "IT'S INTERCEPTED...GAME OVER!!": CALL PBP: GOTO TIMEEXP
	IF I1% = 2 THEN I3% = INT(RND(1) * 45) + 45: U$ = AA$(P, B1(P, B)) + " HAS THE BALL": CALL PBP: U$ = "HE PUTS IT UP FROM" + STR$(I3%) + " FEET": CALL PBP: CALL DELAY: IF RN = 61 THEN U$ = "GOOD!!": CALL PBP: GOSUB BASKET: GOTO TIMEEXP
	IF I1% = 2 THEN U$ = "SHOT MISSES...GAME OVER": CALL PBP: GOSUB MBASKET: GOTO TIMEEXP
	IF I1% >= 3 AND RN <= 8 THEN U$ = "BALL LOST O.B.  GAME OVER": CALL PBP: GOTO TIMEEXP
	IF I1% >= 3 AND RN > 8 AND RN <= 18 THEN U$ = "PASS INTERCEPTED": CALL PBP: GOTO TIMEEXP
	IF I1% = 3 AND T < 1.5 OR I1% >= 4 AND T < 3 THEN U$ = "INBOUND PASS TO " + AA$(P, B1(P, B)): CALL PBP: U$ = "TIME EXPIRES": CALL PBP: GOTO TIMEEXP
	IF I1% = 3 THEN TE = (RND(1) + 1.5): T = T - TE: CALL PLAYINGTIME: GOSUB SHTCLK: U$ = B$(P) + " GETS THE BALL TO HALF COURT": CALL PBP: U$ = "THEY QUICKLY CALL FOR A TIMEOUT": CALL PBP: T1(P) = T1(P) - 1: CALL DEADBALLOPTIONS: CALL SCOREBOARD:  _
GOSUB HALFCT
	IF I1% = 0 OR I1% = 4 OR (I1% = 3 AND I2% = 1) THEN GOTO TAKE3
	RN = INT(RND(1) * 100) + 1
	IF T <= .5 THEN XX% = 3
	IF T > .5 AND T <= 1.8 THEN XX% = 16
	IF T > 1.8 THEN XX% = 29
	IF RN > XX% THEN U$ = AA$(P, B1(P, B)) + " MISSES": CALL PBP: A(P, B1(P, B), 7) = A(P, B1(P, B), 7) + 1: GOTO TIMEEXP
	U$ = "BASKET BY " + AA$(P, B1(P, B)) + "!!": CALL PBP: A(P, B1(P, B), 7) = A(P, B1(P, B), 7) + 1: A(P, B1(P, B), 8) = A(P, B1(P, B), 8) + 1: S(P, H) = S(P, H) + 2: S(P, 0) = S(P, 0) + 2: GOSUB 1054: CALL MAINSCREEN: GOTO TIMEEXP

SHTCLK:
	IF C7 >= 1 THEN X8 = X8 - TE
	IF X8 < 0 THEN X8 = X8 - X8: T = T - X8: TE = X8: CALL PLAYINGTIME
	RETURN

TAKE3:
	RN = INT(RND(1) * 100) + 1
	IF T <= .5 THEN XX% = 2
	IF T > .5 AND T <= 1.8 THEN XX% = 12
	IF T > 1.8 THEN XX% = 20
	IF RN > XX% THEN U$ = AA$(P, B1(P, B)) + " MISSES": CALL PBP: A(P, B1(P, B), 7) = A(P, B1(P, B), 7) + 1: W%(P, B1(P, B), 1) = W%(P, B1(P, B), 1) + 1: GOTO TIMEEXP
	U$ = "BASKET BY " + AA$(P, B1(P, B)) + "!!": CALL PBP: A(P, B1(P, B), 7) = A(P, B1(P, B), 7) + 1: A(P, B1(P, B), 8) = A(P, B1(P, B), 8) + 1: S(P, H) = S(P, H) + 3: S(P, 0) = S(P, 0) + 3: W%(P, B1(P, B), 1) = W%(P, B1(P, B), 1) + 1: W%(P, B1(P, B _
), 0) = W%(P, B1(P, B), 0) + 1: GOSUB 1054: CALL MAINSCREEN: GOTO TIMEEXP

HALFCT:
	JJ = 8
	LOCATE 8, 8: COLOR TR%(P, 0), TR%(P, 1)
	PRINT " Ö"; STRING$(61, 196); "· "; : FOR II = 1 TO JJ: LOCATE 8 + II, 8
	PRINT " º"; STRING$(61, 32); "º "; : NEXT
	LOCATE 9 + JJ, 8
	PRINT " Ó"; STRING$(61, 196); "½ "; : LOCATE 10, 15
	PRINT B$(P); " HALF COURT OPTION"
	LOCATE 12, 14
	LOCATE , 14: PRINT USING "TIME REMAINING #.#"; T
	LOCATE , 14: PRINT "0 - SHOOT A 2"
	LOCATE , 14: PRINT "1 - SHOOT A 3"

290  I$=GetKeyPress$
	I2% = VAL(I$): IF I2% < 0 OR I2% > 1 THEN 290
	IF I2% = 1 AND X3% = 0 THEN I2% = 0
	COLOR 15, 0
	CALL SCOREBOARD
	RETURN

BASKET:
	S(P, H) = S(P, H) + 2: S(P, 0) = S(P, 0) + 2: GOSUB 1054
	A(P, B1(P, B), 8) = A(P, B1(P, B), 8) + 1: A(P, B1(P, B), 7) = A(P, B1(P, B), 7) + 1
	IF X3% = 0 THEN CALL MAINSCREEN: RETURN
	S(P, H) = S(P, H) + 1: S(P, 0) = S(P, 0) + 1
	W%(P, B1(P, B), 1) = W%(P, B1(P, B), 1) + 1
	W%(P, B1(P, B), 0) = W%(P, B1(P, B), 0) + 1
	CALL MAINSCREEN
	RETURN

MBASKET:
	A(P, B1(P, B), 7) = A(P, B1(P, B), 7) + 1
	IF X3% = 0 THEN RETURN
	W%(P, B1(P, B), 1) = W%(P, B1(P, B), 1) + 1
	RETURN

TIMEEXP:
	TE = T: CALL PLAYINGTIME: T = 0: CALL ZEROCHECK: GOTO 170

300 IF T <= 5 AND T1(D) <= 0 AND S(P, 0) > S(D, 0) THEN TE = T: CALL PLAYINGTIME: T = 0: CALL ZEROCHECK: CALL WINDEX: PRINT B$(P); " RUNS THE CLOCK OUT!": CALL DELAY: CALL DELAY: GOTO 170
	IF T <= 5 AND (X3% = 1 AND S(D, 0) - S(P, 0) <= 3 OR X3% = 0 AND S(D, 0) - S(P, 0) <= 2) AND S(D, 0) - S(P, 0) >= 0 AND H >= 2 THEN GOTO LASTFIVE
	ST = 0: FO = 0: LS = 0: XS = 0
	X8 = 45
	IF C7 = 2 THEN X8 = 35
	LS = 0
	IF T < 6 AND LT <> 4 THEN LS = 4
	P6 = 0: D6 = 0: PASS% = 1: A4 = 0: A6 = 0: F = 0: IF X <> 90 THEN X = 0
	IF (D2(D) = 1 OR D2(D) = 3) AND P7(D) = 0 THEN X0% = 50: X1% = -1: CALL PRDFAT
	IF D2(D) = 2 AND P7(D) = 0 THEN X0% = 100: X1% = 1: CALL PRDFAT: CALL PRPFAT
	IF D2(D) = 1 AND P7(D) = 0 THEN X0% = 25: X1% = -1: CALL PRPFAT
	GOTO 400

350 PASS% = PASS% + 1: P6 = 0: A4 = 0: D6 = 0: A6 = 1: F = 0: X = 0
	IF (D2(D) = 1 OR D2(D) = 3) AND PASS% = 2 AND P7(D) > 0 THEN X0% = 50: X1% = -1: CALL PRDFAT
	IF D2(D) = 2 AND P7(D) > 0 AND PASS% = 2 THEN X0% = 100: X1% = 1: CALL PRDFAT: CALL PRPFAT
	IF D2(D) = 1 AND P7(D) > 0 AND PASS% = 2 THEN X0% = 25: X1% = -1: CALL PRPFAT
	GOTO 400

359 J8% = 0: IF X3% = 0 THEN P3 = 1: P6 = 1: GOTO 537
	S = INT(RND(1) * 100) + 1: W%(P, B1(P, B), 1) = W%(P, B1(P, B), 1) + 1: A(P, B1(P, B), 7) = A(P, B1(P, B), 7) + 1
	PT% = 3: CALL MAKEPBP: CALL PBP
	GOTO 9030

361 IF PB% = 1 AND U6 <> 0 THEN CALL WINDEX: PRINT "3 PT FG MISSED BY "; AA$(P, B1(P, B)): CALL DELAY
	IF PB% = 0 THEN PT% = 5: TP% = 1: CALL MAKEPBP: CALL PBP
	GOSUB 1033: T = T - 4: TE = 4: CALL PLAYINGTIME: GOSUB SHTCLK
	IF T <= 0 THEN TE = T: CALL PLAYINGTIME: TP% = 0: GOTO 170
	CALL MAINSCREEN: GOTO 670

363 IF PB% = 1 AND U6 <> 0 THEN CALL WINDEX: PRINT "3 PT FG GOOD BY "; AA$(P, B1(P, B)); " !!!": CALL DELAY
	IF PB% = 0 THEN PT% = 4: CALL MAKEPBP: CALL PBP

369 IF XX% = 1 THEN XX% = 0: S(P, H) = S(P, H) + 2: S(P, 0) = S(P, 0) + 2: W%(P, B1(P, B), 1) = W%(P, B1(P, B), 1) - 1: GOTO 364
	S(P, H) = S(P, H) + 3: S(P, 0) = S(P, 0) + 3: W%(P, B1(P, B), 0) = W%(P, B1(P, B), 0) + 1

364 A(P, B1(P, B), 8) = A(P, B1(P, B), 8) + 1
	GOSUB 1054: CALL MAINSCREEN: GOTO 562
	

400 A4 = 0: D6 = 0: P3 = 0: B = INT(RND(1) * 5)
	CALL BALLDISTRIBUTE
	IF P7(D) > 0 AND PASS% = 1 THEN 428
	R0 = INT(RND(1) * 100) + 1
	GOTO 461

448 T = T - 4: TE = 4: CALL PLAYINGTIME: GOSUB SHTCLK: GOSUB WHOLAY
	IF PASS% <> 1 THEN U$ = AA$(P, B1(P, B)) + " HAS THE BALL"
	IF PASS% = 1 THEN U$ = AA$(P, B1(P, B)) + " GETS THE INBOUND PASS"
	CALL PBP
	U$ = "HE IS STREAKING DOWN THE FLOOR!"
	CALL PBP: GOTO LAYUP

DENIAL:
	IF INT(RND(1) * 100) + 1 <= 10 THEN 448
	RN = INT(RND(1) * 100) + 1
	R0 = INT(RND(1) * 100) + 1
	IN = 99
	C1 = 2: P9 = D
	U$ = "DESIGNATED FOULER (0-4)"
	CALL SELECTPBP
	IF U5 = 1 AND D = CT OR U5 = 2 THEN DF% = INT(RND(1) * 5): GOTO 431
430 I$ = GetKeyPress$
	DF% = VAL(I$): IF DF% < 0 OR DF% > 4 THEN 430
	IF PASS% > 1 THEN 434

431 IF RN <= 4 AND T1(P) > 0 THEN U$ = B$(P) + " CAN'T INBOUND THE BALL": CALL SELECTPBP: U$ = B$(P) + " CALLS A TIME OUT": GOSUB 729: PASS% = 0: GOTO 640
	IF RN <= 4 AND T1(P) = 0 OR RN > 4 AND RN <= 7 THEN U$ = B$(P) + " CAN'T INBOUND THE BALL": CALL SELECTPBP: U$ = "5 SECOND VIOLATION...TURNOVER": SV% = 1: GOTO 517
	CY = 7 + DP(0, 4)
	IF RN <= CY THEN GOSUB ADJ: GOTO 515
	CY = CY + F5%(P, 4) + DP(1, 4)
	IF RN <= CY THEN GOSUB ADJ: GOTO 435

432 U$ = "PASS TO " + AA$(P, B1(P, B)): CALL SELECTPBP

434 IF INT(RND(1) * 100) + 1 <= 5 THEN IN% = 1
	RN = INT(RND(1) * 100) + 1
	IF RN <= 80 THEN TE = INT(RND(1) * 3) + 1: T = T - TE: CALL PLAYINGTIME: GOSUB SHTCLK
	IF RN > 80 AND RN <= 90 THEN TE = INT(RND(1) * 3) + 8: T = T - TE: CALL PLAYINGTIME: GOSUB SHTCLK
	IF RN > 90 THEN TE = INT(RND(1) * 3) + 5: T = T - TE: CALL PLAYINGTIME: GOSUB SHTCLK
	RN = INT(RND(1) * 100) + 1
	IF RN <= 80 THEN W5 = DF%: GOTO 439
	IF RN > 80 THEN GOSUB 630: GOTO 566

439 GOSUB 631: GOTO 566
	

428 '*** FULL COURT PRESS ***
	IF P7(D) = 1 THEN X0% = 50: X1% = -1: CALL PRDFAT
	IF P7(D) = 2 OR P7(D) = 4 THEN X0% = 50: X1% = -1: CALL PRDFAT
	IF P7(D) = 3 THEN X0% = 25: X1% = -1: CALL PRDFAT
	IF H >= 2 AND T <= 180 AND P7(D) = 5 THEN GOTO DENIAL
	IF P7(D) = 1 THEN X0% = 25: X1% = -1: FA%(P, B1(P, BU%)) = FA%(P, B1(P, BU%)) - 1: CALL PRPFAT
	IF P7(D) > 1 THEN X0% = 25: X1% = -1: CALL PRPFAT
	R0 = INT(RND(1) * 100) + 1
	IF P7(D) = 1 OR P7(D) = 3 THEN T = T - 2: TE = 2
	IF P7(D) = 2 AND R0 <= 75 THEN T = T - 2: TE = 2
	IF P7(D) = 2 AND R0 > 75 THEN T = T + 2: TE = -2
	IF P7(D) = 4 AND R0 <= 50 THEN T = T - 2: TE = 2
	IF P7(D) = 4 AND R0 > 50 THEN T = T + 2: TE = -2
	CALL PLAYINGTIME: GOSUB SHTCLK
	R0 = INT(RND(1) * 100) + 1
	IF R0 <= DP(2, P7(D)) THEN 512
	IF R0 <= DP(2, P7(D)) + 1 THEN 511
	CY = DP(2, P7(D)) + 1 + F5%(P, 5) + F5%(D, 6) + DP(0, P7(D)) - PR%(D, 0)
	IF R0 <= CY THEN 515
	CY = CY + F5%(P, 4) + DP(1, P7(D)) - PR%(D, 1)
	PC%(D) = PC%(D) + 1
	IF PC%(D) > 3 THEN PR%(D, 0) = 0: PR%(D, 1) = 0
	IF R0 <= CY THEN 435
	GOTO 465

ADJ:
	IF R0 <= 80 THEN T = T + 4: TE = -4: CALL PLAYINGTIME: GOSUB SHTCLK
	IF R0 > 80 AND R0 <= 90 THEN T = T - 3: TE = 3: CALL PLAYINGTIME: GOSUB SHTCLK
	RETURN

435 P9 = INT(RND(1) * 5)
	IF INT(RND(1) * 5) + 1 <= A(D, B1(D, P9), 5) THEN A(D, B1(D, P9), 18) = A(D, B1(D, P9), 18) + 1: GOTO 513
	R0 = INT(RND(1) * 100) + 1
	IF P7(D) = 1 AND PASS% = 1 AND R0 <= A(P, B1(P, BU%), 4) THEN GOTO LAYUP
	IF P7(D) = 2 AND PASS% = 1 AND R0 <= A(P, B1(P, BU%), 4) * 2 THEN GOTO LAYUP
	IF P7(D) = 3 AND PASS% = 1 AND R0 <= 7 THEN GOTO LAYUP
	IF P7(D) = 4 AND PASS% = 1 AND R0 <= 15 THEN GOTO LAYUP
	IF P7(D) = 1 AND PASS% = 1 AND R0 <= A(P, B1(P, BU%), 4) * 2 THEN GOTO GDSHOT
	IF P7(D) = 2 AND PASS% = 1 AND R0 <= A(P, B1(P, BU%), 4) * 4 THEN GOTO GDSHOT
	IF P7(D) = 3 AND PASS% = 1 AND R0 <= 14 THEN GOTO GDSHOT
	IF P7(D) = 4 AND PASS% = 1 AND R0 <= 30 THEN GOTO GDSHOT
	IF P7(D) = 5 THEN 432

437 P6 = 0: R0 = INT(RND(1) * 3) + 1: J8% = 0: F3S% = INT(RND(1) * 7) + 3
	IF A(P, B1(P, B), 0) > 60 AND R0 = 1 THEN F = 24
	IF A(P, B1(P, B), 0) > 60 AND R0 = 2 THEN F = 30
	IF A(P, B1(P, B), 0) > 60 AND R0 = 3 THEN F = 36
	IF A(P, B1(P, B), 0) <= 60 AND R0 = 1 THEN F = INT(A(P, B1(P, B), 0) * .4 + .5)
	IF A(P, B1(P, B), 0) <= 60 AND R0 = 2 THEN F = INT(A(P, B1(P, B), 0) * .5 + .5)
	IF A(P, B1(P, B), 0) <= 60 AND R0 = 3 THEN F = INT(A(P, B1(P, B), 0) * .6 + .5)
	PZ% = 1
	IF INT(RND(1) * 150) + 1 = 40 THEN GOTO TIEUP

444 X = 0
	IF PZ% = 2 AND INT(RND(1) * 100) + 1 <= 50 THEN PZ% = 3: P6 = 1
	GOTO 520

445 IF OF%(P) = 4 THEN 437
	IF H <= 2 THEN 450

446 P6 = 1: CALL SHOTPERCENT

447 PZ% = INT(RND(1) * 3) + 5
	GOTO 444

450 IF H = 2 AND T <= 120 OR H > 2 THEN 446
	IF A(P, B1(P, B), 3) - A(P, B1(P, B), 7) - A(P, B1(P, B), 11) - A(P, B1(P, B), 12) <= 0 THEN 437
	GOTO 446

453 A4 = 0: IF H = 2 AND T <= 120 OR H > 2 THEN 456
	IF H > 2 THEN 456
	IF A(P, B1(P, B), 3) - A(P, B1(P, B), 7) - A(P, B1(P, B), 11) - A(P, B1(P, B), 12) <= 0 THEN 437

456 CALL SHOTPERCENT: A4 = INT(RND(1) * 28) + 1
	R0 = INT(RND(1) * 9) + 1
	I2 = INT(RND(1) * 5)
	IF FA%(P, B1(P, B)) <= -5 THEN 460
	IF R0 <= A(P, B1(P, I2), 4) THEN F = A(P, B1(P, B), 0) + D1(D) + A4 + TF%(P) + TF%(D): TF%(P) = 0: TF%(D) = 0: PZ% = 2: P6 = 1: GOTO 444

460 GOTO 445

461 IF (OF%(P) = 8 OR OF%(P) = 7) AND D2(D) = 2 THEN 465
	IF R0 <= D8(4, D2(D)) THEN 512
	IF R0 <= D8(4, D2(D)) + 1 THEN 511
	OY% = 0
	IF OF%(P) = 4 OR OF%(P) = 7 THEN OY% = INT((D8(2, D2(D)) / 2) + .5) * -1
	CY = D8(4, D2(D)) + 1 + F5%(P, 5) + F5%(D, 6) + D8(2, D2(D)) + OY% + 1
	IF R0 <= CY THEN 515
	CY = CY + F5%(P, 4) + D8(3, D2(D))
	OY% = 0
	IF OF%(P) = 4 OR OF%(P) = 7 THEN OY% = INT((D8(3, D2(D)) / 2) + .5) * -1
	IF OF%(P) = 1 THEN OY% = 7
	IF OF%(P) = 2 THEN OY% = -7
	IF R0 <= CY + OY% THEN 435

465 R0 = INT(RND(1) * 100) + 1
	IF C7 = 2 THEN GS% = 39 + INT(((FY%(2) - 58) * .8) + .5)
	IF C7 = 1 THEN GS% = 39 + INT(((FY%(2) - 52) * .8) + .5)
	IF C7 = 0 THEN GS% = 39 + INT(((FY%(2) - 52) * .8) + .5)

'' THE NO SHOT CLOCK CASE WAS PREVIOUSLY - 40
	 IF D2(D) = 1 OR D2(D) = 2 THEN GS% = GS% + 7
	IF D2(D) = 3 THEN GS% = GS% - 7
	IF OF%(P) = 3 THEN GS% = GS% + 21
	IF OF%(P) = 4 THEN GS% = GS% - 21
	IF OF%(P) = 7 OR OF%(P) = 8 THEN 437
	IF OF%(P) = 5 AND X8 > 15 AND C7 >= 1 THEN 437
	IF R0 > GS% THEN 437
	R0 = INT(RND(1) * 100)
	IF R0 <= D8(1, D2(D)) THEN 453
	GOTO 445

511 X = 0: GOTO 580

512 CALL LASTSHOT: GOSUB 1033: CALL MAINSCREEN: X = 88: GOTO 565

513 IF P7(D) > 0 AND PASS% = 1 THEN 508
	CALL LASTSHOT

508 GOSUB 1033: A(P, B1(P, B), 23) = A(P, B1(P, B), 23) + 1
	IF U6 = 0 THEN 505
	U$ = "BALL STOLEN BY " + AA$(D, B1(D, P9)) + "!"
	IF PB% = 1 THEN CALL WINDEX: PRINT U$: CALL DELAY: GOTO 505
	RN = INT(RND(1) * 100) + 1
	IF RN<=3 THEN U$ = AA$(D, B1(D, P9)) + " QUICKLY REACHES IN!":CALL PBP
	IF RN>3 AND RN<=6 THEN U$ = AA$(D, B1(D, P9)) + " SNEAKS IN FROM BEHIND!":CALL PBP
	IF RN>6 AND RN<=10 THEN U$ = AA$(D, B1(D, P9)) + " GETS A HAND ON THE BALL!":CALL PBP
	 RN = INT(RND(1) * 20) + 1
	 IF RN = 1 THEN U$ = "PASS INTERCEPTED BY " + AA$(D, B1(D, P9)) + "!"
	IF RN = 2 THEN U$ = "PASS IS PICKED OFF BY " + AA$(D, B1(D, P9)) + "!"
	IF RN = 3 THEN U$ = "BALL IS STOLEN BY " + AA$(D, B1(D, P9)) + "!"
	IF RN = 4 THEN U$ = AA$(D, B1(D, P9)) + " WITH THE STEAL!"
	IF RN = 5 THEN U$ = AA$(D, B1(D, P9)) + " TAKES IT AWAY!"
	IF RN = 6 THEN U$ = AA$(D, B1(D, P9)) + " STEALS IT!"
	IF RN = 7 THEN U$ = AA$(D, B1(D, P9)) + " RIPS IT LOOSE!"
	IF RN = 8 THEN U$ = AA$(D, B1(D, P9)) + " TAKES THE BALL AWAY!"
	IF RN = 9 THEN U$ = AA$(D, B1(D, P9)) + " STEALS THE BALL!"
	IF RN =10 THEN U$ = AA$(D, B1(D, P9)) + " PICKS IT OFF!"
	IF RN =11 THEN U$ = AA$(D, B1(D, P9)) + " SWIPES THE BALL!"
	IF RN =12 THEN U$ = AA$(D, B1(D, P9)) + " WITH THE STOLEN BALL!"
	IF RN =13 THEN U$ = AA$(D, B1(D, P9)) + " STRIPS IT AWAY!"
	IF RN =14 THEN U$ = AA$(D, B1(D, P9)) + " WITH THE STEAL!"
	IF RN =15 THEN U$ = AA$(D, B1(D, P9)) + " SWIPES AND STEALS IT!"
	IF RN =16 THEN U$ = AA$(D, B1(D, P9)) + " SNATCHES IT AWAY!"
	IF RN =17 THEN U$ = AA$(D, B1(D, P9)) + " QUICKLY REACHES IN!"
	IF RN =18 THEN U$ = AA$(D, B1(D, P9)) + " TAKES IT THE OTHER WAY!"
	IF RN =19 THEN U$ = AA$(D, B1(D, P9)) + " POKES IT LOOSE!"
	IF RN =20 THEN U$ = AA$(D, B1(D, P9)) + " STRIPS IT CLEAN!"
	 CALL PBP

505 A(D, B1(D, P9), 13) = A(D, B1(D, P9), 13) + 1: T0(P) = T0(P) + 1: CALL MAINSCREEN
	C1 = 2: P9 = D: IF T <= 0 THEN 170
	GOSUB 3000: FB% = 1
	RN = INT(RND(1) * 100) + 1
	IF RN <= 38 THEN B = 0
	IF RN > 38 AND RN <= 75 THEN B = 1
	IF RN > 75 AND RN <= 83 THEN B = 2
	IF RN > 83 AND RN <= 91 THEN B = 3
	IF RN > 91 THEN B = 4
	RN = INT(RND(1) * 100) + 1
	IF PASS% > 1 AND (D2(P9) = 0 OR D2(P9) = 1 OR D2(P9) = 3) AND RN <= 15 THEN GOTO LAYUP
	IF PASS% > 1 AND D2(P9) = 2 AND RN <= 5 THEN GOTO LAYUP
	IF PASS% = 1 AND P7(P) > 0 AND RN <= 33 THEN GOTO LAYUP
	IF PASS% = 1 AND P7(P) > 0 AND P7(P) <> 3 AND RN <= 40 THEN GOTO LAYUP
	GOTO 300

515 CALL LASTSHOT

517 GOSUB 1033
	R0 = INT(RND(1) * 25) + 1
	IF R0 = 13 THEN GOTO TIEUP
	A(P, B1(P, B), 23) = A(P, B1(P, B), 23) + 1: T0(P) = T0(P) + 1
	IF SV% <> 1 THEN PT% = 1: CALL MAKEPBP
	SV% = 0
	IF PB% = 1 AND U6 <> 0 THEN CALL WINDEX: PRINT "TURNOVER BY "; B$(P): CALL DELAY
	IF PB% = 0 THEN CALL PBP
	U$ = "BALL OUT OF BOUNDS TO " + B$(D)
	GOSUB 729
	CALL DELAY: CALL MAINSCREEN: LOCATE 10, 1: IF T <= 0 THEN 170
	GOSUB 3000: CALL DEADBALLOPTIONS: GOSUB BADPR: GOTO 300
LAYUP:
	FB% = 1: F = 98: P6 = 1: GOTO 520
GDSHOT:
	FX% = A(P, B1(P, B), 0)
	IF FA%(P, B1(P, B)) <= -5 THEN FX% = FX% - 10
	F = FX% + INT(RND(20)) + 11 + TF%(D) + TF%(P): TF%(P) = 0: TF%(D) = 0
	PZ% = 10
	GOTO 447

GDSHOTDES:
	IF U6 = 0 THEN 529
	RN = INT(RND(1) * 100) + 1
	IF RN <= 25 THEN U$ = AA$(P, B1(P, B)) + " BREAKS IN TO FRONT COURT"
	IF RN > 25 AND RN <= 50 THEN U$ = AA$(P, B1(P, B)) + " GETS THE PASS IN FRONT COURT"
	IF RN > 50 AND RN <= 75 THEN U$ = AA$(P, B1(P, B)) + " BREAKS THE PRESS"
	IF RN > 75 THEN U$ = AA$(P, B1(P, B)) + " DEFEATS THE PRESS"
	CALL PBP
	RN = INT(RND(1) * 100) + 1
	IF RN <= 33 THEN U$ = "HE HAS AN OPEN JUMPER AT THE FT LINE"
	IF RN > 33 AND RN <= 66 THEN U$ = "HE'S OPEN ON THE BASELINE"
	IF RN > 66 THEN U$ = "HE'S OPEN FROM THE WING"
	CALL SHOTSTRING: CALL PBP
	GOTO 529

520 IF J8% = 1 THEN PZ% = 4
	CALL LASTSHOT: IF T <= 0 THEN 170
	IF PZ% = 4 AND F3S% <= 0 THEN F3S% = 3
	IF U6 = 0 THEN 529
	IF PZ% = 10 THEN GOTO GDSHOTDES
	IF F > 70 AND FB% = 1 AND PASS% = 1 THEN PT% = 6: PZ% = 8: CALL MAKEPBP: CALL PBP: GOTO 529
	IF AA$(P, B1(P, B)) <> PB$ AND PB$ = "" THEN U$ = "PASS TO " + AA$(P, B1(P, B)): CALL PBP
	IF AA$(P, B1(P, B)) <> PB$ AND PB$ <> "" THEN PT% = 10: CALL MAKEPBP: CALL PBP
	IF AA$(P, B1(P, B)) = PB$ THEN PT% = 9: CALL MAKEPBP: CALL PBP
	IF X8 <= 0 THEN U$ = "SHOT CLOCK HAS EXPIRED!": SV% = 1: GOTO 515
	PB$ = AA$(P, B1(P, B))
	YY$ = "HE"
	ON PZ% GOTO 521, 522, 523, 524, 525, 526, 527

521 IF U6 = 0 THEN 601
	RN = INT(RND(1) * 12) + 1
	IF RN = 1 THEN U$ = YY$ + "'S HEAVILY GUARDED"
	IF RN = 2 THEN U$ = YY$ + "'S GUARDED"
	IF RN = 3 THEN U$ = YY$ + "'S GUARDED BY "+AA$(D, B1(D, B))
	IF RN = 4 THEN U$ = YY$ + " HAS A MAN ON HIM"
	IF RN = 5 THEN U$ = YY$ + " HAS A DEFENDER ON HIM"
	IF RN = 6 THEN U$ = YY$ + "'S COVERED"
	IF RN = 7 THEN U$ = YY$ + " CAN'T GET AROUND THE DEFENDER"
	IF RN = 8 THEN U$ = YY$ + "'S PRESSURED"
	IF RN = 9 THEN U$ = YY$ + " HAS NOWHERE TO GO"
	IF RN = 10 THEN U$ = YY$ + " HAS A HAND IN HIS FACE"
	IF RN = 11 THEN U$ = YY$ + "'S WATCHED BY "+AA$(D, B1(D, B))
	IF RN = 12 THEN U$ = YY$ + "'S WORKING ON "+AA$(D, B1(D, B))

601 CALL PBP: GOTO 529

522 U$ = YY$ + " WORKS FREE INSIDE": CALL PBP: U$ = "HE HAS AN OPEN SHOT": CALL SHOTSTRING: CALL PBP: P6 = 1: GOTO 529

523 IF U6 = 0 THEN 529
	P6 = 1
	RN = INT(RND(1) * 100) + 1
	IF B = 4 AND RN <= 25 THEN U$ = YY$ + " MAKES A MOVE DOWN LOW": CALL PBP: GOTO 602
	IF B = 4 AND RN <= 50 THEN U$ = YY$ + " POSITIONS HIMSELF DOWN LOW": CALL PBP: GOTO 602
	IF B = 4 AND RN <= 75 THEN U$ = YY$ + " POSTS UP UNDERNEATH": CALL PBP: GOTO 602
	IF B = 4 THEN U$ = YY$ + " BACKS IN AGAINST " + AA$(D, B1(D, 4)): CALL PBP

602 IF B = 4 THEN U$ = "HE HAS A GOOD SHOT INSIDE": CALL SHOTSTRING: CALL PBP: GOTO 529
	IF (B = 3 OR B = 2) AND RN <= 17 THEN U$ = YY$ + " DRIVES THE BASELINE": CALL PBP: GOTO 603
	IF (B = 3 OR B = 2) AND RN <= 34 THEN U$ = YY$ + " PENETRATES THE LANE": CALL PBP: GOTO 603
	IF (B = 3 OR B = 2) AND RN <= 50 THEN U$ = YY$ + " MOVES INSIDE": CALL PBP: GOTO 603
	IF (B = 3 OR B = 2) AND RN <= 67 THEN U$ = YY$ + " DRIVES THE LANE": CALL PBP: GOTO 603
	IF (B = 3 OR B = 2) AND RN <= 84 THEN U$ = YY$ + " MOVES INTO THE PAINT": CALL PBP: GOTO 603
	IF (B = 3 OR B = 2) THEN U$ = YY$ + " DRIVES UNDERNEATH": CALL PBP

603 IF (B = 3 OR B = 2) THEN U$ = "HE'S GOT A GOOD SHOT UNDERNEATH": CALL SHOTSTRING: CALL PBP: GOTO 529
	IF (B = 0 OR B = 1) AND RN <= 25 THEN U$ = YY$ + " DRIVES THE LANE": CALL PBP: GOTO 604
	IF (B = 0 OR B = 1) AND RN <= 50 THEN U$ = YY$ + " DRIVES THROUGH THE KEY": CALL PBP: U$ = "HE'S INTO THE LANE": CALL PBP: GOTO 604
	IF (B = 0 OR B = 1) AND RN <= 75 THEN U$ = YY$ + " DRIVES TO THE BASKET": CALL PBP: GOTO 604
	U$ = YY$ + " DRIVES THROUGH AN OPENING": CALL PBP

604 U$ = "HE HAS A GOOD SHOT CLOSE IN": CALL SHOTSTRING: CALL PBP
	GOTO 529

524 U$ = "HE'S OPEN FROM 3-POINT RANGE!": U$ = U$ + STR$(F3S%) + "*": CALL PBP: P6 = 1: GOTO 529

525 U$ = "HE'S OPEN FROM MEDIUM RANGE": CALL SHOTSTRING: CALL PBP: P6 = 1: GOTO 529

526 U$ = "HE'S OPEN FROM MEDIUM RANGE": CALL SHOTSTRING: CALL PBP: P6 = 1: GOTO 529

527 U$ = "HE'S OPEN FROM MEDIUM RANGE": CALL SHOTSTRING: CALL PBP: P6 = 1: GOTO 529

529 IF F <= 0 THEN F = 1
	IF F >= 100 THEN F = 99
	IF U6 = 0 THEN 607
	IF PB% = 1 THEN CALL WINDEX: PRINT "PASS TO "; AA$(P, B1(P, B)); " OF "; B$(P)
	IF PB% = 1 AND PZ% <> 4 THEN LOCATE 10: PRINT "SHOT % "; F;
	IF PB% = 1 AND PZ% = 4 THEN LOCATE 10: PRINT "3 PT SHOT % "; F3S%; : PRINT " *"; : GOTO 528
	IF PB% = 1 AND PZ% >= 2 AND PZ% <= 8 THEN PRINT "*";

607 IF U6 = 0 OR PB% = 1 THEN 528
	IF PZ% <> 4 THEN LOCATE 8, 41: PRINT USING "SHOT % ###   "; F;
	IF PZ% = 4 THEN LOCATE 8, 41: PRINT USING "SHOT % ###"; F3S%; : PRINT " *"; : GOTO 528
	IF PZ% >= 2 AND PZ% <= 8 THEN LOCATE , 52: PRINT "*";

528 PRINT : IF PB% = 1 AND U6 <> 0 THEN CALL DELAY
	IF U5 <> 0 OR CM% = 1 THEN 949
530 I$ = GetKeyPress$
	IF UCASE$(I$) = "T" THEN CALL TICKER: CALL SCOREBOARD: GOTO 529
	IF UCASE$(I$) = "D" THEN CALL ZONECHANGE: CALL SCOREBOARD: GOTO 529
	P6 = VAL(I$): IF P6 < 1 OR P6 > 4 THEN P6 = 0
	IF P6 = 4 THEN FT% = 1

532 IF VAL(I$) = 3 AND (U5 = 0 OR U5 = 1 AND P = CT) AND H >= 4 AND T < 240 THEN P6 = 3
	IF VAL(I$) = 2 AND (U5 = 0 OR U5 = 1 AND D = CT) AND T1(P) > 0 THEN P6 = 2
	P3 = P6: IF P6 = 2 AND T1(P) = 0 THEN 530
	IF P6 = 3 AND H = 1 OR P6 = 3 AND U5 = 1 AND D = CT THEN 530
	IF P6 = 3 AND H = 2 AND T > 240 THEN 530
	'
	IF U5 = 1 AND P = CT AND J8% = 1 OR U5 = 2 AND J8% = 1 THEN P6 = 4
	IF U5 = 1 AND P = CT AND H >= 2 AND T < 30 AND S(D, 0) - S(P, 0) = 3 OR U5 = 2 AND H >= 2 AND T < 30 AND S(D, 0) - S(P, 0) = 3 THEN P6 = 4
	IF (P6 = 1 OR P6 = 4) AND PZ% = 4 THEN P6 = 4
	ON P6 + 1 GOTO 350, 537, 640, 584, 359

537 ' *** SHOOT !!! ***
	PT% = 3: CALL MAKEPBP: CALL PBP
	S = 0: SS = 0: R0 = INT(RND(1) * 100) + 1: A(P, B1(P, B), 7) = A(P, B1(P, B), 7) + 1
	GG = S(D, 0) - S(P, 0): IF H > 1 AND T <= 30 AND GG = 2 OR H > 1 AND T <= 30 AND GG = 0 OR H > 1 AND T <= 30 AND GG = -2 THEN 540
	IF R0 <= A(P, B1(P, B), 16) + F5%(D, 7) THEN A(P, B1(P, B), 7) = A(P, B1(P, B), 7) - 1: GOSUB 1033: LT = 0: GOTO 589

540 S = INT(RND(1) * 100) + 1
	R0 = F * ((DY / 100) + (.03 * X3%))
	IF H > 1 AND T < 30 AND GG = 2 OR H > 1 AND T < 30 AND GG = 0 OR H > 1 AND T < 30 AND GG = -2 THEN 542
	IF S <= R0 THEN GOSUB 1033: LT = 0: GOTO 610

542 IF S <= F THEN LT = 0: GOTO 553
	R0 = INT(RND(1) * 100) + 1
	LT = 0: GOTO 548

545 IF PB% = 1 AND U6 <> 0 THEN CALL WINDEX: PRINT "SHOT MISSED BY "; AA$(P, B1(P, B)): CALL DELAY
	IF PB% = 0 THEN PT% = 8: CALL MAKEPBP: CALL PBP

546 GOSUB 1033: T = T - 4: TE = 4: CALL PLAYINGTIME: GOSUB SHTCLK
	IF T <= 0 THEN TE = T: CALL PLAYINGTIME: GOTO 170
	CALL MAINSCREEN: LT = 0: GOTO 670

548 I2 = INT(RND(1) * 5) + 1
	I3 = INT(RND(1) * 5)
	IF I2 > A(D, B1(D, I3), 6) THEN 545
	IF U6 = 0 THEN 554
	IF PB% = 1 THEN CALL WINDEX: PRINT "SHOT BLOCKED BY "; AA$(D, B1(D, I3)): CALL DELAY: GOTO 554
	 RN = INT(RND(1) * 100) + 1
	IF RN <= 10 THEN U$ = AA$(D, B1(D, I3))+" STUFFS THE SHOT!!":GOTO 549
	IF RN <= 15 THEN U$ = "DENIED BY "+ AA$(D, B1(D, I3))+"!!":GOTO 549
	IF RN <= 20 THEN U$ = "ERASED BY "+ AA$(D, B1(D, I3))+"!!":GOTO 549
	IF RN <= 25 THEN U$ = "EXPUNGED BY "+ AA$(D, B1(D, I3))+"!!":GOTO 549
	IF RN <= 30 THEN U$ = "REBUKED BY "+ AA$(D, B1(D, I3))+"!!":GOTO 549
	IF RN <= 35 THEN U$ = "SHOT BLOCKED CLEANLY BY "+ AA$(D, B1(D, I3))+"!!":GOTO 549
	IF RN <= 70 THEN U$ = "SHOT BLOCKED BY "+ AA$(D, B1(D, I3))+"!!":GOTO 549
	IF RN <= 90 THEN U$ = "SHOT REJECTED BY "+ AA$(D, B1(D, I3))+"!!":GOTO 549
	U$ = "SHOT SWATTED OUT BY "+ AA$(D, B1(D, I3))+"!!":GOTO 549

549 CALL PBP

554 A(D, B1(D, I3), 15) = A(D, B1(D, I3), 15) + 1: X = 98: GOTO 546

553 IF DK% = 1 AND PB% = 0 THEN PT% = 2: CALL MAKEPBP: U$ = "STUFF BY ": DK% = 0: GOTO 559
	IF DK% = 1 AND PB% = 1 THEN U$ = "STUFF BY ": DK% = 0: GOTO 559
	IF PB% = 0 AND PZ% = 8 THEN PT% = 7: CALL MAKEPBP: CALL PBP: PZ% = 0: GOTO 560
	U$ = "BASKET BY "

559 U$ = U$ + AA$(P, B1(P, B)) + " !!!"
	IF PB% = 1 AND U6 <> 0 THEN CALL WINDEX: PRINT U$: CALL DELAY: GOTO 560
	RN = INT(RND(1) * 100) + 1
	IF RN<=50 THEN 561
	RN = INT(RND(1)*22)+1
	IF RN = 1 THEN U$ = "NOTHING BUT THE BOTTOM OF THE NET!"
	IF RN = 2 THEN U$ = "COUNT IT!"
	IF RN = 3 THEN U$ = AA$(P, B1(P, B)) + " TICKLES THE TWINE!"
	IF RN = 4 THEN U$ = "NO RIM, NO BOARD, JUST CORD!"
	IF RN = 5 THEN U$ = "GOOD!"
	IF RN = 6 THEN U$ = "YES!"
	IF RN = 7 THEN U$ = "COUNT IT!
	IF RN = 8 THEN U$ = "IT'S GOOD!"
	IF RN = 9 THEN U$ = "BINGO!"
	IF RN = 10 THEN U$ = "IT FALLS!"
	IF RN = 11 THEN U$ = "HE DRAINS IT!"
	IF RN = 12 THEN U$ = "SWISH!"
	IF RN = 13 THEN U$ = "ALL NET!"
	IF RN = 14 THEN U$ = "IT'S THERE!"
	IF RN = 15 THEN U$ = "HE BURIES IT!"
	IF RN = 16 THEN U$ = "IT GOES IN!"
	IF RN = 17 THEN U$ = "RING IT UP!"
	IF RN = 18 THEN U$ = "IT GOES DOWN!"
	IF RN = 19 THEN U$ = "BULLSEYE!"
	IF RN = 20 THEN U$ = "HE SCORES!"
	IF RN = 21 THEN U$ = "HE HAS IT!"
	IF RN = 22 THEN U$ = "HE CONNECTS!"

561 IF PB% = 0 THEN CALL PBP

560 S(P, H) = S(P, H) + 2: S(P, 0) = S(P, 0) + 2: GOSUB 1054: CALL MAINSCREEN
	A(P, B1(P, B), 8) = A(P, B1(P, B), 8) + 1

562 U$ = B$(D) + " BALL O.B. AFTER SCORE"
	IF PB% = 1 AND U6 <> 0 THEN LOCATE 9, 1: PRINT U$
	IF PB% = 0 THEN GOSUB 871: CALL PBP
	CALL DELAY: GOSUB 1033: T = T - 4: TE = 4: CALL PLAYINGTIME: GOSUB SHTCLK
	IF T <= 0 THEN TE = T: CALL PLAYINGTIME: GOTO 170
	CALL MAINSCREEN: GOSUB 3000: CALL STOPPAGE: CALL PRESSGUARD: GOTO 300

565 GOSUB 630: LT = 4

566 GOTO 9065

567 IF T <= 0 THEN 170
	CALL DEADBALLOPTIONS: GOSUB BADPR
	IF N7% = 0 AND PB% = 0 OR N7% = 0 AND U6 = 0 THEN CALL WINDEX: U$ = B$(P) + " BALL O.B. AFTER FOUL": CALL PBP: GOSUB 871: GOTO 350
	IF N7% = 0 AND PB% = 1 THEN CALL WINDEX: PRINT B$(P) + " BALL O.B. AFTER FOUL": CALL DELAY: GOSUB 871: GOTO 350
	GOTO 8000

570 IF U6 = 0 THEN 571
	IF PB% = 0 THEN U$ = "1+1 FT: " + AA$(P, B1(P, B)) + STR$(A(P, B1(P, B), 1)) + " %": CALL PBP: GOTO 571
	CALL WINDEX: PRINT B$(P)
	PRINT "1+1 FT: "; AA$(P, B1(P, B)); " "; A(P, B1(P, B), 1); " %"

571 X = 50: CALL DEADBALLOPTIONS: GOSUB BADPR: X = 0
	IF U6 = 0 THEN 572
	IF PB% = 0 THEN U$ = "1+1 FT: " + AA$(P, B1(P, B)) + STR$(A(P, B1(P, B), 1)) + " %": CALL PBP: GOTO 572
	CALL WINDEX: PRINT B$(P): PRINT "1+1 FT: "; AA$(P, B1(P, B)); "   "; A(P, B1(P, B), 1); " %"

572 FOR F3 = 1 TO 2
	A(P, B1(P, B), 9) = A(P, B1(P, B), 9) + 1
	S = INT(RND(1) * 100) + 1
	FX% = A(P, B1(P, B), 1)
	IF FA%(P, B1(P, B)) <= -5 THEN FX% = INT(FX% * .9 + .5)
	IF S <= FX% AND PB% = 0 THEN CALL THREEFT
	IF S <= FX% AND PB% = 1 THEN CALL MADEFT
	IF S > FX% AND PB% = 0 THEN CALL BADFT
	IF S > FX% AND PB% = 1 THEN CALL MISSFT
	IF F3 = 1 AND S > A(P, B1(P, B), 1) THEN 575
	NEXT F3

575 IF T <= 0 THEN 170
	IF S > FX% THEN 650
	GOSUB 3000: X = 0
	U$ = B$(P) + " BALL O.B. AFTER SCORE"
	CALL SELECTPBP
	GOSUB 871: CALL DELAY
	CALL STOPPAGE: CALL PRESSGUARD: GOTO 300

580 CALL LASTSHOT: GOSUB 1033: GOSUB 3000: GOSUB 630: B = W5: IF P2(D) > 6 THEN 570
	IF T <= 0 THEN 170
	U$ = "OFFENSIVE FOUL"
	IF PB% = 0 THEN CALL PBP
	IF PB% = 1 AND U6 <> 0 THEN CALL WINDEX: PRINT U$: CALL DELAY
	U$ = B$(P) + " BALL O.B. AFTER FOUL"
	GOSUB 729
	GOSUB 871: B = 6: CALL DELAY
	T0(D) = T0(D) + 1: CALL MAINSCREEN: CALL DEADBALLOPTIONS: GOSUB BADPR: CALL PRESSGUARD: GOTO 300

584 IN = 99: CALL LASTSHOT: IF T <= 0 THEN 170
	C1 = 2: P9 = D
	U$ = "DESIGNATED FOULER (0-4)"
	CALL SELECTPBP
	IF U5 = 1 AND D = CT OR U5 = 2 THEN W5 = INT(RND(1) * 5): GOTO 588
586 I$ = GetKeyPress$
	W5 = VAL(I$): IF W5 < 0 OR W5 > 4 THEN 586

588 GOSUB 631: GOTO 566

589 T = T - 4: TE = 4: CALL PLAYINGTIME: GOSUB SHTCLK: CALL MAINSCREEN: GOSUB 630
	IF U6 = 0 THEN 591
	IF PB% = 0 THEN U$ = "2 FT: " + AA$(P, B1(P, B)) + STR$(A(P, B1(P, B), 1)) + " %": CALL PBP: CALL DELAY: GOTO 591
	CALL WINDEX: PRINT B$(P): PRINT "2 FT: "; AA$(P, B1(P, B)); "   "; A(P, B1(P, B), 1); " %"

591 X = 50: CALL DEADBALLOPTIONS: GOSUB BADPR: X = 0: A(P, B1(P, B), 9) = A(P, B1(P, B), 9) + 2
	IF U6 = 0 THEN 592
	IF PB% = 0 THEN U$ = "2 FT: " + AA$(P, B1(P, B)) + STR$(A(P, B1(P, B), 1)) + " %": CALL PBP: GOTO 592
	CALL WINDEX: PRINT B$(P)
	PRINT "2 FT: "; AA$(P, B1(P, B)); "   "; A(P, B1(P, B), 1); " %"

592 FOR F3 = 1 TO 2: S = INT(RND(1) * 100) + 1
	FX% = A(P, B1(P, B), 1)
	IF FA%(P, B1(P, B)) <= -5 THEN FX% = INT(FX% * .9 + .5)
	IF S <= FX% AND PB% = 0 THEN CALL THREEFT
	IF S <= FX% AND PB% = 1 THEN CALL MADEFT
	IF S > FX% AND PB% = 0 THEN CALL BADFT
	IF S > FX% AND PB% = 1 THEN CALL MISSFT
	NEXT F3: LT = 0
	IF T <= 0 THEN TE = T: CALL PLAYINGTIME: GOTO 170
	IF S > FX% THEN 650

598 GOSUB 3000
	U$ = B$(P) + " BALL O.B. AFTER SCORE"
	CALL SELECTPBP
	GOSUB 871: CALL DELAY
	CALL STOPPAGE: B = 6: X = 0: CALL PRESSGUARD: GOTO 300

599 A(P, B1(P, B), 10) = A(P, B1(P, B), 10) + 1
	IF U6 <> 0 THEN U$ = "FREE THROW IS GOOD": CALL PBP
	S(P, H) = S(P, H) + 1: S(P, 0) = S(P, 0) + 1: CALL MAINSCREEN
	RETURN

600 IF U6 <> 0 THEN U$ = "FREE THROW IS MISSED": CALL PBP
	RETURN

610 T = T - 4: TE = 4: CALL PLAYINGTIME: GOSUB SHTCLK: CALL MAINSCREEN: GOSUB 1054
	IF DK% = 1 AND PB% = 0 THEN PT% = 2: CALL MAKEPBP: U$ = "STUFF BY " + AA$(P, B1(P, B)): CALL PBP: DK% = 0: GOTO 617
	IF DK% = 1 AND PB% = 1 THEN CALL WINDEX: PRINT "STUFF BY " + AA$(P, B1(P, B)): CALL DELAY: DK% = 0: GOTO 617
	IF PZ% = 8 THEN PT% = 7: CALL MAKEPBP: PZ% = 0: CALL PBP: GOTO 617
	F3 = 1
	IF PB% = 0 THEN U$ = "BASKET GOOD BY " + AA$(P, B1(P, B)): CALL PBP
	IF PB% = 1 AND U6 <> 0 THEN CALL WINDEX: PRINT "BASKET GOOD BY " + AA$(P, B1(P, B)): CALL DELAY

617 U$ = "... AND HE'S FOULED !!!": GOSUB 729: CALL DELAY: F3 = 1
	S(P, H) = S(P, H) + 2: S(P, 0) = S(P, 0) + 2: A(P, B1(P, B), 8) = A(P, B1(P, B), 8) + 1: CALL MAINSCREEN: GOSUB 630

619 IF PB% = 1 AND U6 <> 0 THEN CALL WINDEX: PRINT B$(P): PRINT "1 FT: "; AA$(P, B1(P, B)); "   "; A(P, B1(P, B), 1); " %"
	IF PB% = 0 THEN U$ = AA$(P, B1(P, B)) + " WILL SHOOT 1": CALL PBP
	X = 50: CALL DEADBALLOPTIONS: GOSUB BADPR: X = 0
	A(P, B1(P, B), 9) = A(P, B1(P, B), 9) + 1: S = INT(RND(1) * 100) + 1
	IF PB% = 1 AND U6 <> 0 THEN CALL WINDEX: PRINT B$(P): PRINT "1 FT: "; AA$(P, B1(P, B)); "   "; A(P, B1(P, B), 1); " %"
	FX% = A(P, B1(P, B), 1)
	IF FA%(P, B1(P, B)) <= -5 THEN FX% = INT(FX% * .9 + .5)
	IF S <= FX% AND PB% = 0 THEN GOSUB 599
	IF S <= FX% AND PB% = 1 THEN CALL MADEFT
	IF S > FX% AND PB% = 0 THEN GOSUB 600
	IF S > FX% AND PB% = 1 THEN CALL MISSFT
	IF T <= 0 THEN TE = T: CALL PLAYINGTIME: GOTO 170
	X = 99: IF S > FX% THEN 670
	GOSUB 3000
	U$ = B$(P) + " BALL O.B. AFTER SCORE"
	CALL SELECTPBP
	GOSUB 871: CALL DELAY
	CALL STOPPAGE: B = 6
	X = 0: CALL PRESSGUARD: GOTO 300

630 GOSUB 1065

631 A(D, B1(D, W5), 12) = A(D, B1(D, W5), 12) + 1: P2(D) = P2(D) + 1: CALL MAINSCREEN
	IF A(D, B1(D, W5), 3) - A(D, B1(D, W5), 7) - A(D, B1(D, W5), 11) - A(D, B1(D, W5), 12) = 0 THEN A(D, B1(D, W5), 3) = A(D, B1(D, W5), 3) + 1
	IF A(D, B1(D, W5), 12) < NF% THEN GOSUB 638
	IF A(D, B1(D, W5), 12) >= NF% THEN GOSUB 1000: GOSUB 635
	RETURN

635 IF PB% = 1 AND U6 <> 0 THEN CALL WINDEX: PRINT "FOUL ON "; AA$(D, B1(D, W5)): CALL DELAY
	IF PB% = 0 THEN U$ = "FOUL CALLED ON " + AA$(D, B1(D, W5)): CALL PBP
	IF IN% = 1 THEN U$ = "FOUL IS RULED INTENTIONAL!": GOSUB 729: CALL DELAY
	U$ = "AND HE HAS JUST FOULED OUT !!!"
	GOSUB 729
	CALL DELAY
	IF P2(D) > 6 THEN X = 50
	IF U5 = 0 OR U5 = 1 AND D <> CT THEN P9 = D: C1 = 1: CALL LINEUPS: CALL FOULSAFE: CALL DEADBALLOPTIONS: GOSUB BADPR: CALL SCOREBOARD
	CALL CLOCKOVER: X = 0: RETURN

638 IF PB% = 1 AND U6 <> 0 THEN CALL WINDEX: PRINT "FOUL ON "; AA$(D, B1(D, W5)): CALL DELAY: PRINT "HE HAS "; A(D, B1(D, W5), 12): CALL DELAY
	IF PB% = 0 THEN U$ = "FOUL NUMBER" + STR$(A(D, B1(D, W5), 12)) + " CALLED ON " + AA$(D, B1(D, W5)): CALL PBP
	CALL DELAY
	RETURN

640 PB$ = "": IF T1(P) <= 0 THEN 648
	T1(P) = T1(P) - 1
	CALL SCOREBOARD
	RN = INT(RND(1) * 100)
	IF RN <= 8 THEN TF%(P) = 10
	IF RN > 8 AND RN <= 16 THEN TF%(P) = 5
	RN = INT(RND(1) * 100)
	IF RN <= 8 THEN TF%(D) = -10
	IF RN > 8 AND RN <= 16 THEN TF%(D) = -5
	T = T + M5: TE = -M5: CALL PLAYINGTIME
	IF C7 >= 1 THEN X8 = X8 + M5
	'
	FOR I = 0 TO 1: FOR I1 = 0 TO 1
	PR%(I, I1) = 0
	NEXT: NEXT
	U$ = "TIME OUT " + B$(P)
	CALL SELECTPBP
	CALL DELAY: CALL DEADBALLOPTIONS
	FOR I = 0 TO 1: FOR I1 = 0 TO 13: FA%(I, I1) = FA%(I, I1) + 1
	IF FA%(I, I1) > 0 THEN FA%(I, I1) = 0
	NEXT: NEXT

648 IF A6 = 0 THEN CALL PRESSGUARD: GOTO 300
	GOTO 350
WHOLAY:
	RN = INT(RND(1) * 100) + 1
	IF RN <= 38 THEN B = 0
	IF RN > 38 AND RN <= 75 THEN B = 1
	IF RN > 75 AND RN <= 83 THEN B = 2
	IF RN > 83 AND RN <= 91 THEN B = 3
	IF RN > 91 THEN B = 4
	RETURN
BADPR:
	FOR I = 0 TO 1
	IF P7(I) = 0 THEN PR%(I, 0) = 1: PR%(I, 1) = 7: PC%(I) = 0
	NEXT
	RETURN

650 A6 = 1: P6 = 0: A4 = 0: D6 = 0: GOSUB 1033: S = 0
	R0 = INT(RND(1) * 100) + 1
	IF H > 1 AND T < 30 AND S(D, 0) - S(P, 0) = 2 AND R0 <= 12 OR H > 1 AND T < 30 AND S(P, 0) - S(D, 0) = 0 AND R0 <= 12 THEN CALL OFFREBOUND: GOTO 760
	R0 = INT(RND(1) * 100) + 1
	IF R0 <= 11 THEN FF% = 1: GOTO 707
	IF R0 <= 19 THEN CALL OFFREBOUND: GOTO 760
	CALL DEFREBOUND: GOTO 800

670 A6 = 1: P6 = 0: A4 = 0: D6 = 0: GOSUB 1033: GOTO 700

700 S = 0: A4 = 0: D6 = 0: R0 = INT(RND(1) * 100) + 1
	GG = S(D, 0) - S(P, 0)
	IF H > 1 AND T < 30 AND (GG = 2 OR GG = 0 OR GG = -2) AND R0 <= 12 THEN 700
	IF TP% = 1 AND R0 <= 19 THEN TP% = 0
	IF R0 <= 1 THEN 725
	IF R0 <= DY THEN FF% = 1: GOTO 707
	IF R0 <= 17 THEN 750
	IF R0 <= 19 THEN 730
	IF R0 <= 20 THEN 740

707 TP% = 0
	GOTO 770

710 IF U6 = 0 THEN 713
	IF PB% = 1 THEN CALL WINDEX: PRINT AA$(D, B1(D, B)); " HAS THE DEF RB FOR": PRINT B$(D); " AND IS FOULED !!!": CALL DELAY: GOTO 713
	U$ = AA$(D, B1(D, B)) + " HAS THE DEF RB": CALL PBP
	U$ = "HE'S FOULED !!!": CALL PBP

713 R3(D) = R3(D) + 1: A(D, B1(D, B), 11) = A(D, B1(D, B), 11) + 1: CALL MAINSCREEN: GOSUB 3000: GOTO 565

720 U$ = AA$(P, B1(P, B)) + " HAS THE OFF RB"
	IF PB% = 0 THEN CALL PBP
	IF PB% = 1 AND U6 <> 0 THEN CALL WINDEX: PRINT U$: PRINT "FOR "; B$(P): CALL DELAY
	U$ = "HE'S FOULED !!!"
	GOSUB 729
	A(P, B1(P, B), 11) = A(P, B1(P, B), 11) + 1: A(P, B1(P, B), 24) = A(P, B1(P, B), 24) + 1
	R3(P) = R3(P) + 1: CALL MAINSCREEN: GOTO 565

725 IF X = 98 THEN 700
	T0(P) = T0(P) + 1
	U$ = "OFFENSIVE GOAL TENDING"
	IF PB% = 0 THEN CALL PBP
	IF PB% = 1 AND U6 <> 0 THEN CALL WINDEX: PRINT U$: CALL DELAY
	U$ = "BALL O.B. TO " + B$(D)
	GOSUB 729
	CALL DELAY
	GOSUB 3000: CALL DEADBALLOPTIONS: GOSUB BADPR: GOTO 300

729 IF PB% = 0 THEN CALL PBP
	IF PB% = 1 AND U6 <> 0 THEN PRINT U$: CALL DELAY
	RETURN

730 IF X = 99 THEN 700
	CALL OFFREBOUND
	A(P, B1(P, B), 7) = A(P, B1(P, B), 7) + 1: A(P, B1(P, B), 8) = A(P, B1(P, B), 8) + 1
	A(P, B1(P, B), 11) = A(P, B1(P, B), 11) + 1: R3(P) = R3(P) + 1: S(P, H) = S(P, H) + 2
	S(P, 0) = S(P, 0) + 2: CALL MAINSCREEN
	IF PB% = 1 AND U6 <> 0 THEN CALL WINDEX: PRINT "TIPPED IN BY "; AA$(P, B1(P, B)): PRINT "   BASKET GOOD !!!": CALL DELAY
	IF PB% = 0 THEN U$ = AA$(P, B1(P, B)) + " TIPS IT IN!!": CALL PBP
	GOSUB 3000
	U$ = B$(P) + " BALL O.B. AFTER SCORE": GOSUB 871
	GOSUB 729: CALL DELAY
	CALL STOPPAGE: CALL PRESSGUARD
	GOTO 300

740 IF X = 99 THEN 700
	U$ = "DEFENSIVE GOAL TENDING"
	IF PB% = 0 THEN CALL PBP
	IF PB% = 1 AND U6 <> 0 THEN CALL WINDEX: PRINT U$: CALL DELAY
	IF TP% = 1 THEN TP% = 0: GOTO 369
	GOTO 560

750 R0 = INT(RND(1) * 100) + 1: IF R0 <= 35 THEN 752
	R3(D) = R3(D) + 1: CALL MAINSCREEN
	U$ = "RB KNOCKED O.B. TO " + B$(D)
	IF PB% = 0 THEN CALL PBP
	IF PB% = 1 AND U6 <> 0 THEN CALL WINDEX: PRINT U$: CALL DELAY
	CALL DELAY: CALL DEADBALLOPTIONS: GOSUB BADPR: GOSUB 3000: C1 = 2: P9 = P: GOTO 300

752 R3(P) = R3(P) + 1: CALL MAINSCREEN
	U$ = "RB KNOCKED O.B. TO " + B$(P)
	IF PB% = 0 THEN CALL PBP
	IF PB% = 1 AND U6 <> 0 THEN CALL WINDEX: PRINT U$: CALL DELAY
	CALL DELAY: CALL DEADBALLOPTIONS: GOSUB BADPR: LT = 4: GOTO 520

760 IF FF% = 1 THEN FF% = 0: GOTO 720
	A(P, B1(P, B), 24) = A(P, B1(P, B), 24) + 1: A(P, B1(P, B), 11) = A(P, B1(P, B), 11) + 1: R3(P) = R3(P) + 1: CALL MAINSCREEN
	U$ = AA$(P, B1(P, B)) + " HAS THE OFF RB"
	IF PB% = 0 AND U6 <> 0 THEN CALL PBP
	IF PB% = 1 AND U6 <> 0 THEN CALL WINDEX: PRINT U$: PRINT "FOR " + B$(P): CALL DELAY
	IF T <= 0 THEN 170
	R0 = INT(RND(1) * 130) + 1
	PB$ = AA$(P, B1(P, B))
	IF R0 = 32 THEN GOTO RBTIEUP
	R0 = INT(RND(1) * 10) + 1: CALL SHOTPERCENT
	IF H > 2 OR H = 2 AND T <= 120 THEN 765
	IF A(P, B1(P, B), 3) - A(P, B1(P, B), 7) - A(P, B1(P, B), 11) - A(P, B1(P, B), 12) <= 0 THEN F = INT(F * .6 + .5)

765 IF R0 <= 8 THEN PZ% = 9: P6 = 1: GOTO 537
	GOTO 520

770 RB = 0
	FOR I = 0 TO 9: RB(I) = 0: NEXT
	FOR I = 0 TO 4
	XZ = A(P, B1(P, I), 21)
	IF H > 2 OR H = 2 AND T <= 120 THEN 773
	IF A(P, B1(P, I), 3) - A(P, B1(P, I), 7) - A(P, B1(P, I), 11) - A(P, B1(P, I), 12) <= 0 THEN XZ = INT(XZ * .5 + .5)

773 IF FA%(P, B1(P, I)) <= -5 THEN XZ = INT(XZ * .9 + .5)
	RB(I) = RB(I) + XZ: RB = RB + XZ
	NEXT
	ORB = RB
	FOR I = 0 TO 4
	XZ = A(1 - P, B1(1 - P, I), 2)
	IF H > 2 OR H = 2 AND T <= 120 THEN 778
	IF A(1 - P, B1(1 - P, I), 3) - A(1 - P, B1(1 - P, I), 7) - A(1 - P, B1(1 - P, I), 11) - A(1 - P, B1(1 - P, I), 12) <= 0 THEN XZ = INT(XZ * .5 + .5)

778 IF FA%(1 - P, B1(1 - P, I)) <= -5 THEN XZ = INT(XZ * .9 + .5)
	RB(I + 5) = RB(I + 5) + XZ: RB = RB + XZ
	NEXT
	DRB = RB - ORB
	IF D2(D) = 0 THEN XQ = INT((RB * .06) + .5)
	IF D2(D) = 1 THEN XQ = INT((RB * .12) + .5)
	IF D2(D) = 2 THEN XQ = INT((RB * .1) + .5)
	IF D2(D) = 3 THEN XQ = INT((RB * .14) + .5)
	IF CZ%(P) = 1 THEN XQ = INT((RB * .17) + .5)
	RN = RND(1) * RB
	IF RN <= ORB + XQ THEN GOTO OREB
	RN = RND(1) * DRB
	FOR B = 5 TO 9
	IF RN <= RB(B) THEN B = B - 5: GOTO 800
	RB(B + 1) = RB(B + 1) + RB(B)
	NEXT
	B = INT(RND(1) * 5): GOTO 800
OREB:
	RN = RND(1) * ORB
	FOR B = 0 TO 4
	IF RN <= RB(B) THEN 760
	RB(B + 1) = RB(B + 1) + RB(B)
	NEXT
	B = INT(RND(1) * 5)
	GOTO 760

800 IF FF% = 1 THEN FF% = 0: GOTO 710
	A(D, B1(D, B), 11) = A(D, B1(D, B), 11) + 1: R3(D) = R3(D) + 1: CALL MAINSCREEN
	U$ = AA$(D, B1(D, B)) + " HAS THE DEF RB"
	IF PB% = 0 AND U6 <> 0 THEN CALL PBP
	IF PB% = 1 AND U6 <> 0 THEN CALL WINDEX: PRINT U$: PRINT "FOR " + B$(D): CALL DELAY
	PB$ = AA$(D, B1(D, B))
	C1 = 2: P9 = D: GOSUB 3000: FB% = 1
	PB$ = AA$(P, B1(P, B))
	R0 = INT(RND(1) * 130) + 1
	IF R0 = 15 THEN FB% = 0: GOTO RBTIEUP
	IF CZ%(D) = 1 AND INT(RND(1) * 100) + 1 <= 50 THEN T = T - 4: TE = 4: CALL PLAYINGTIME: GOSUB SHTCLK: GOSUB WHOLAY: GOTO LAYUP
	GOTO 300

819 IF X3% = 0 THEN 822
	FOR I = 0 TO 13
	M8 = 100 - A(P9, I, 19)
	IF M8 = 0 THEN 821
	M9 = 100 / M8

821 A(P9, I, 16) = INT((A(P9, I, 16) * M9) + .5): NEXT I

822 RETURN

871 LOCATE 8, 41: PRINT "            ": RETURN

900 IF AP = 1 THEN N = NG%(2)
	IF C7 = 1 THEN X8 = 45
	IF C7 = 2 THEN X8 = 35
	GOTO 240

949 IF H >= 2 AND T <= 240 AND S(P, 0) - S(D, 0) > 0 AND U5 = 1 AND P = CT THEN 951
	IF U5 = 2 OR U5 = 1 AND D = CT THEN 980

951 IF T <= 1 OR C7 >= 1 AND X8 <= 7 THEN P6 = 1: GOTO 532
	IF T <= 8 AND S(P, 0) - S(D, 0) <= -3 AND H >= 2 THEN P6 = 1: GOTO 532
	IF T <= 20 AND S(P, 0) - S(D, 0) <= -5 AND H >= 2 THEN P6 = 1: GOTO 532
	FX% = A(P, B1(P, B), 0)
	IF FA%(P, B1(P, B)) <= -5 THEN FX% = FX% - 10
	IF P6 = 1 THEN 532
	IF (U5 = 0 AND CM% = 1 OR U5 = 1 AND D = CT AND CM% = 1 OR U5 = 1 AND P = CT OR U5 = 2) AND T <= 660 AND T >= 540 AND H = 1 AND T1(P) >= 5 THEN P6 = 2: CTO% = 1: GOTO 532
	IF (U5 = 0 AND CM% = 1 OR U5 = 1 AND D = CT AND CM% = 1 OR U5 = 1 AND P = CT OR U5 = 2) AND T <= 240 AND T >= 120 AND H = 1 AND T1(P) >= 4 THEN P6 = 2: CTO% = 1: GOTO 532
	IF (U5 = 0 AND CM% = 1 OR U5 = 1 AND D = CT AND CM% = 1 OR U5 = 1 AND P = CT OR U5 = 2) AND T <= 840 AND T >= 720 AND H = 2 AND T1(P) >= 3 THEN P6 = 2: CTO% = 1: GOTO 532
	IF (U5 = 0 AND CM% = 1 OR U5 = 1 AND D = CT AND CM% = 1 OR U5 = 1 AND P = CT OR U5 = 2) AND T <= 300 AND T >= 180 AND H = 2 AND T1(P) >= 2 THEN P6 = 2: CTO% = 1: GOTO 532
	GOTO 532

980 IF (U5 = 1 OR U5 = 0) AND CM% <> 1 THEN 530
	GOTO 951

1000 M9 = 0
	FOR I3 = 0 TO 13
	IF I3 = B1(D, W5) OR AA$(D, I3) = "XXX" OR B%(D, I3, 18) <> 0 THEN 1002
	M9 = M9 + 1

1002 NEXT
	FOR I3 = 0 TO 13
	IF I3 = B1(D, W5) OR AA$(D, I3) = "XXX" OR B%(D, I3, 18) <> 0 THEN 1003
	IF A(D, I3, 0) <= A(D, B1(D, W5), 0) THEN A(D, I3, 3) = A(D, I3, 3) + INT((A(D, B1(D, W5), 3) / M9) + .5)

1003 NEXT I3
	RETURN

1033 IF C7 = 0 THEN 1034
	X8 = 45
	IF C7 = 2 THEN X8 = 35
	LS = 4
	IF T < 46 AND X8 >= T OR H > 2 AND T = 300 THEN LOCATE 5, 5: PRINT "     "
	IF T < 6 AND LS = 4 AND LT <> 4 THEN F = 5

1034 RETURN

1054 R0 = INT(RND(1) * 3) + 1: I2 = INT(RND(1) * 5)
	IF R0 <= A(P, B1(P, I2), 4) AND AA$(P, B1(P, B)) <> AA$(P, B1(P, I2)) THEN 1060
	IF A(P, B1(P, I2), 4) > 3 AND R0 < A(P, B1(P, I2), 4) - 3 AND AA$(P, B1(P, B)) <> AA$(P, B1(P, I2)) THEN 1060

1058 RETURN

1060 W5 = 0
	FOR M8 = 0 TO 4
	W5 = W5 + A(P, B1(P, M8), 4)
	NEXT
	R0 = INT(RND(1) * W5) + 1
	W5 = 0
	FOR M8 = 0 TO 4
	W5 = W5 + A(P, B1(P, M8), 4)
	IF R0 <= W5 THEN 1062
	NEXT

1062 I2 = M8
	IF AA$(P, B1(P, B)) = AA$(P, B1(P, I2)) THEN 1060
	A(P, B1(P, I2), 14) = A(P, B1(P, I2), 14) + 1
	GOTO 1058

1065 W5 = 0: M9 = INT(RND(1) * F5%(D, 0)) + 1
	FOR M8 = 0 TO 4: W5 = W5 + A(D, B1(D, M8), 17)
	IF M9 <= W5 THEN 1069
	NEXT M8

1069 IF M8 < 0 OR M8 > 4 THEN M8 = INT(RND(1) * 5)
	W5 = M8: RETURN

3000 PB$ = "": IF P = 1 THEN P = 0: D = 1: P9 = 0: C1 = 2: RETURN
	IF P = 0 THEN P = 1: D = 0: P9 = 1: C1 = 2: RETURN

TIEUP:
	IF PB% = 1 THEN GOTO RBTIEUP
	R0 = INT(RND(1) * 100) + 1
	IF R0 <= 20 THEN U$ = "BALL IS SLAPPED AWAY"
	IF R0 > 20 AND R0 <= 40 THEN U$ = "BALL IS LOOSE ON THE FLOOR"
	IF R0 > 40 AND R0 <= 60 THEN U$ = AA$(P, B1(P, B)) + " IS TRAPPED"
	IF R0 > 60 AND R0 <= 80 THEN U$ = "TRIES TO WORK LOOSE"
	IF R0 > 80 THEN U$ = AA$(P, B1(P, B)) + " IS PINNED ON THE LINE"
	CALL PBP
RBTIEUP:
	R0 = INT(RND(1) * 100) + 1
	P9 = INT(RND(1) * 5)
	IF PB% = 1 AND U6 <> 0 THEN CALL WINDEX: PRINT "JUMP BALL!": CALL DELAY: GOTO 5005
	IF R0 <= 25 THEN U$ = AA$(P, B1(P, B)) + " IS TIED UP BY " + AA$(D, B1(D, P9))
	IF R0 > 25 AND R0 <= 50 THEN U$ = AA$(D, B1(D, P9)) + " TIES UP " + AA$(P, B1(P, B))
	IF R0 > 50 AND R0 <= 75 THEN U$ = "HELD BALL!"
	IF R0 > 75 THEN U$ = "JUMP BALL!"
	CALL PBP

5005 U$ = "POSSESSION ARROW TO " + B$(PA%)
	GOSUB 729
	CALL DELAY
	IF PA% = D THEN T0(P) = T0(P) + 1: CALL DEADBALLOPTIONS: GOSUB BADPR: GOSUB 3000: C1 = 2: P9 = P: PA% = 1 - PA%: GOTO 300
	PA% = 1 - PA%: CALL DEADBALLOPTIONS: GOSUB BADPR: LT = 4: GOTO 350

8000 CALL MAINSCREEN
	U$ = "1 FT: " + AA$(P, B1(P, B)) + STR$(A(P, B1(P, B), 1)) + " %": CALL PBP
	X = 50: CALL DEADBALLOPTIONS: GOSUB BADPR: X = 0: A(P, B1(P, B), 9) = A(P, B1(P, B), 9) + 1
	U$ = "1 FT: " + AA$(P, B1(P, B)) + STR$(A(P, B1(P, B), 1)) + " %": CALL PBP
	F3 = 1: S = INT(RND(1) * 100) + 1
	FX% = A(P, B1(P, B), 1)
	IF FA%(P, B1(P, B)) <= -5 THEN FX% = INT(FX% * .9 + .5)
	IF S <= FX% THEN CALL THREEFT
	IF S > FX% THEN CALL BADFT
	LT = 0
	IF T <= 0 THEN TE = T: CALL PLAYINGTIME: GOTO 170
	IF S > FX% THEN 650
	GOSUB 3000: U$ = B$(P) + " BALL O.B. AFTER SCORE": GOSUB 871: CALL PBP: CALL DELAY: CALL STOPPAGE: B = 6: X = 0: CALL PRESSGUARD
	GOTO 300

8400 'CHECK SPECIAL EVENTS
	IF N = 2 OR ATT(1) = 0 THEN
		Y3 = INT(RND(1)* 2000) + 9000
	ELSE
		Y3 = INT(RND(1)* 2000) + ATT(1) - 1000
	END IF
	CALL RECORDSCHECK
	CALL EVENTS (COUNT, SPECIAL)
	 IF SPECIAL = 1 THEN
		NM$ = "BOX" + MID$(STR$(COUNT), 2, LEN(STR$(COUNT))) + ".SPC"
		CALL BOX2SPC(NM$)
	END IF

8500 GOSUB 8650
	CLS
	IF X = 1 THEN 8532
	CALL BOXTOP

8515 GOSUB 8670: GOSUB 8660
	CALL BOXSCREEN
	IF H > 2 THEN EG% = 1
	CALL TICKER: EG% = 0
	IF H = 2 THEN CALL FOULHARD: RETURN

8532 GOSUB 8655
	COLOR 15, 0
	CLS : I = 1: CALL DRAWBOX
	U$ = "DISPLAY STATS AGAIN (YN)"
	LOCATE , (80 - LEN(U$)) / 2
	PRINT U$
	COLOR 15, 0
	IF AP = 1 AND U5 = 2 THEN 8535
8533 I$ = GetKeyPress$
	IF UCASE$(I$) = "Y" THEN 8500

8535 COLOR 15, 0
	CLS : I = 1: CALL DRAWBOX
	U$ = "SAVE STATS (YN)"
	LOCATE , (80 - LEN(U$)) / 2
	PRINT U$
	COLOR 15, 0
	IF AP = 1 THEN 9506
	I$ = GetKeyPress$
	IF UCASE$(I$) <> "Y" THEN 9507

9506 CALL SAVESTATS

9507 COLOR 15, 0:
	CLS : I = 1: CALL DRAWBOX
	U$ = "PLAY ANOTHER GAME (YN)"
	LOCATE , (80 - LEN(U$)) / 2
	PRINT U$
	IF AP = 1 THEN 8637
	I$ = GetKeyPress$
	IF UCASE$(I$) <> "Y" THEN RUN "HELLO.EXE"

8637 COLOR 15, 0: CLS
	RUN "COLHOOP.EXE"

8650 CLS
	COLOR 14: PRINT "(0) "; : COLOR 15: PRINT "STATS TO SCREEN": PRINT
	COLOR 14: PRINT "(1) "; : COLOR 15: PRINT "STATS TO PRINTER": PRINT
	COLOR 14: PRINT "(2) "; : COLOR 15: PRINT "STATS TO TEXT FILE"
	IF AP = 1 AND U5 = 2 THEN X = 2: CALL FILEBOX: RETURN
8651 I$ = GetKeyPress$
	X = VAL(I$)
	IF X = 1 THEN CALL PRINTBOX
	IF X = 2 THEN CALL FILEBOX

8655 IF X >= 1 THEN X = 0
	RETURN

8660 IF X = 0 THEN CLS
	RETURN

8670 IF X = 0 THEN I$ = GetKeyPress$
	RETURN

9030 I2 = INT(RND(1) * 50) + 1: IF I2 = 43 AND TF% = 1 AND S > F3S% THEN A(P, B1(P, B), 7) = A(P, B1(P, B), 7) - 1: W%(P, B1(P, B), 1) = W%(P, B1(P, B), 1) - 1: GOSUB 1033: GOTO 9055
	IF I2 = 43 AND TF% = 1 AND S <= F3S% THEN 9040
	IF S > F3S% THEN 361
	GOTO 363

9040 T = T - 4: TE = 4: CALL PLAYINGTIME: GOSUB SHTCLK: CALL MAINSCREEN: GOSUB 1054
	U$ = "3 PT BASKET GOOD BY " + AA$(P, B1(P, B))
	CALL SELECTPBP
	GOSUB 1054
	U$ = "AND HE WAS FOULED !!!"
	GOSUB 729
	F3 = 1
	S(P, H) = S(P, H) + 3: S(P, 0) = S(P, 0) + 3: A(P, B1(P, B), 8) = A(P, B1(P, B), 8) + 1: W%(P, B1(P, B), 0) = W%(P, B1(P, B), 0) + 1: CALL MAINSCREEN: GOSUB 630
	GOTO 619

9055 T = T - 4: TE = 4: CALL PLAYINGTIME: GOSUB SHTCLK: CALL MAINSCREEN: GOSUB 630
	IF U6 = 0 THEN 9056
	IF PB% = 0 THEN U$ = "3 FT: " + AA$(P, B1(P, B)) + STR$(A(P, B1(P, B), 1)) + " %": CALL PBP: CALL DELAY: GOTO 9056
	CALL WINDEX: PRINT B$(P): PRINT "3 FT: "; AA$(P, B1(P, B)); "   "; A(P, B1(P, B), 1); " %"

9056 X = 50: CALL DEADBALLOPTIONS: GOSUB BADPR: X = 0: A(P, B1(P, B), 9) = A(P, B1(P, B), 9) + 3
	IF U6 = 0 THEN 9057
	IF PB% = 0 THEN U$ = "3 FT: " + AA$(P, B1(P, B)) + STR$(A(P, B1(P, B), 1)) + " %": CALL PBP: GOTO 9057
	CALL WINDEX: PRINT B$(P)
	PRINT "3 FT: "; AA$(P, B1(P, B)); "   "; A(P, B1(P, B), 1); " %"

9057 FOR F3 = 1 TO 3: S = INT(RND(1) * 100) + 1
	FX% = A(P, B1(P, B), 1)
	IF FA%(P, B1(P, B)) <= -5 THEN FX% = INT (FX% * .9 + .5)
	IF S <= FX% AND PB% = 0 THEN CALL THREEFT
	IF S <= FX% AND PB% = 1 THEN CALL MADEFT
	IF S > FX% AND PB% = 0 THEN CALL BADFT
	IF S > FX% AND PB% = 1 THEN CALL MISSFT
	NEXT F3: LT = 0
	IF T <= 0 THEN TE = T: CALL PLAYINGTIME: GOTO 170
	IF S > FX% THEN 650
	GOTO 598

9065 IF IN% = 1 THEN 9070
	IF TB% = 1 AND P2(D) >= 10 THEN 9070
	IF P2(D) > 6 THEN 570
	GOTO 567

9070 IF U6 = 0 THEN 9071
	IF PB% = 0 THEN U$ = "2 FT: " + AA$(P, B1(P, B)) + STR$(A(P, B1(P, B), 1)) + " %": CALL PBP: CALL DELAY: GOTO 9071
	CALL WINDEX: PRINT B$(P): PRINT "2 FT: "; AA$(P, B1(P, B)); "   "; A(P, B1(P, B), 1); " %"

9071 X = 50: CALL DEADBALLOPTIONS: GOSUB BADPR: X = 0
	IF U6 = 0 THEN 9072
	IF PB% = 0 THEN U$ = "2 FT: " + AA$(P, B1(P, B)) + STR$(A(P, B1(P, B), 1)) + " %": CALL PBP: GOTO 9072
	CALL WINDEX: PRINT B$(P)
	PRINT "2 FT: "; AA$(P, B1(P, B)); "   "; A(P, B1(P, B), 1); " %"

9072 FOR F3 = 1 TO 2: A(P, B1(P, B), 9) = A(P, B1(P, B), 9) + 1: S = INT(RND(1) * 100) + 1
	FX% = A(P, B1(P, B), 1)
	IF FA%(P, B1(P, B)) <= -5 THEN FX% = INT(FX% * .9 + .5)
	IF S <= FX% AND PB% = 0 THEN CALL THREEFT
	IF S <= FX% AND PB% = 1 THEN CALL MADEFT
	IF S > FX% AND PB% = 0 THEN CALL BADFT
	IF S > FX% AND PB% = 1 THEN CALL MISSFT
	NEXT F3
	IF T <= 0 THEN 170
	CALL CLEARPBPBOX: IF S > FX% AND IN% <> 1 THEN 650
	IF IN% = 1 THEN PASS% = 1: IN% = 0: X = 0: U$ = B$(P) + " BALL AFTER INT. FOUL": CALL SELECTPBP: GOSUB 871: CALL DELAY: CALL STOPPAGE: CALL PRESSGUARD: GOTO 300
	GOSUB 3000
	X = 0
	U$ = B$(P) + " BALL O.B. AFTER SCORE"
	GOSUB 871
	CALL SELECTPBP
	CALL DELAY
	CALL STOPPAGE
	CALL PRESSGUARD
	GOTO 300

SUB DISABLEPLAYER ()
	COLOR 15, 0
	CLS : I = P9: CALL DRAWBOX
	U$ = "DISABLE PLAYERS FOR " + B$(P9) + " (YN)"
	LOCATE , (80 - LEN(U$)) / 2
	PRINT U$
	COLOR 15, 0
	PRINT : PRINT
	PRINT "NOTE:: THE COMPUTER WILL AUTOMATICALLY DISABLE PLAYERS BASED ON"
	PRINT "       THE RATIO OF GAMES PLAYED FOR EACH PLAYER TO THE TOTAL"
	PRINT "       NUMBER OF GAMES PLAYED BY THE TEAM. YOU MAY WANT TO CHECK"
	PRINT "       TO ACTIVATE ANY COMPUTER DEACTIVATED PLAYERS"
9202 I$ = GetKeyPress$
	IF UCASE$(I$) <> "Y" THEN 9210
	DX% = 0: CLS : PRINT "TEAM ROSTER FOR "; : COLOR TR%(P9, 0), TR%(P9, 1): PRINT B$(P9): COLOR 15, 0
	PRINT "# NAME          POS   GP"
	FOR I = 0 TO 13
	IF I <= 9 THEN PRINT USING "#"; I;
	IF I = 10 THEN PRINT "A";
	IF I = 11 THEN PRINT "B";
	IF I = 12 THEN PRINT "C";
	IF I = 13 THEN PRINT "D";
	IF AA$(P9, I) = "XXX" THEN B%(P9, I, 18) = -1: COLOR TR%(P9, 0), TR%(P9, 1)
	IF B%(P9, I, 18) = 1 OR B%(P9, I, 18) = -1 THEN COLOR TR%(P9, 0), TR%(P9, 1)
	PRINT " "; AA$(P9, I); : COLOR 15, 0: PRINT TAB(18) PO$(P9, I) TAB(22) C(P9, I, 0)
	NEXT

9203 LOCATE 19, 1: PRINT "ENTER PLAYER # TO DISABLE/ENABLE (Z=FINISHED)"
	PRINT "YOU MUST HAVE AT LEAST 8 ACTIVE PLAYERS"
9205 I$ = GetKeyPress$
	IF UCASE$(I$) = "Z" THEN 9210
	I1 = VAL(I$)
	IF UCASE$(I$) = "A" THEN I1 = 10
	IF UCASE$(I$) = "B" THEN I1 = 11
	IF UCASE$(I$) = "C" THEN I1 = 12
	IF UCASE$(I$) = "D" THEN I1 = 13
	IF B%(P9, I1, 18) = 0 AND DX% < 4 THEN B%(P9, I1, 18) = -1: DX% = DX% + 1: LOCATE 3 + I1, 3: COLOR TR%(P9, 0), TR%(P9, 1): PRINT AA$(P9, I1): COLOR 15, 0: GOTO 9203
	IF B%(P9, I1, 18) = -1 THEN B%(P9, I1, 18) = 0: DX% = DX% - 1: LOCATE 3 + I1, 2: COLOR 15, 0: PRINT " "; AA$(P9, I1): GOTO 9203
	GOTO 9203

9210 END SUB

SUB DRAWBOX ()
	JJ = 1
	LOCATE 6, 8: COLOR TR%(I, 0), TR%(I, 1)
	PRINT " "; CHR$(201); STRING$(61, 205); CHR$(187); " ";
	FOR II = 1 TO JJ: LOCATE 6 + II, 8
	PRINT " º"; STRING$(61, 32); "º "; : NEXT
	LOCATE 7 + JJ, 8
	PRINT " "; CHR$(200); STRING$(61, 205); CHR$(188); " "; : LOCATE 7
END SUB

SUB GETATEAM (I1, YN$)
OPEN p$(0) + "BASK." + YN$ FOR RANDOM AS #1 LEN = 655
FIELD #1, 15 AS Q$(0), 2 AS Q$(1), 2 AS Q$(2), 2 AS Q$(3), 2 AS Q$(4), 2 AS Q$(5), 2 AS Q$(6), 2 AS Q$(7), 2 AS Q$(8), 2 AS Q$(9), 2 AS Q$(10), 2 AS Q$(11), 2 AS Q$(12), 2 AS Q$(13), 2 AS Q$(14), 2 AS Q$(15), 2 AS Q$(16), 2 AS Q$(17), 2 AS Q$(18), 2 _
AS Q$(19), 602 AS X$
FOR I = 0 TO 13
FIELD #1, 53 + I * 43 AS X$, 15 AS Q$(I * 15 + 20), 2 AS Q$(I * 15 + 21), 2 AS Q$(I * 15 + 22), 2 AS Q$(I * 15 + 23), 2 AS Q$(I * 15 + 24), 2 AS Q$(I * 15 + 25), 2 AS Q$(I * 15 + 26), 2 AS Q$(I * 15 + 27), 2 AS Q$(I * 15 + 28), 2 AS Q$(I * 15 + 29) _
, 2 AS Q$(I * 15 + 30), 2 AS Q$(I * 15 + 31), 2 AS Q$(I * 15 + 32), 2 AS Q$(I * 15 + 33), 2 AS Q$(I * 15 + 34), 655 - 53 - 43 - I * 43 AS X$
NEXT
GET #1, I1
	B$(P9) = Q$(0)

9010 IF RIGHT$(B$(P9), 1) = " " THEN B$(P9) = LEFT$(B$(P9), LEN(B$(P9)) - 1): GOTO 9010
	S1(P9) = CVI(Q$(1)): D1(P9) = CVI(Q$(2))
	V1%(P9) = CVI(Q$(3)): V2%(P9) = CVI(Q$(4))
	FOR I3 = 0 TO 4: L%(P9, I3) = CVI(Q$(I3 + 5)): NEXT
	FOR I3 = 0 TO 9: TR%(P9, I3) = CVI(Q$(I3 + 10)): NEXT
	FOR I3 = 0 TO 13
	AA$(P9, I3) = Q$(I3 * 15 + 20)

9015 IF RIGHT$(AA$(P9, I3), 1) = " " THEN AA$(P9, I3) = LEFT$(AA$(P9, I3), LEN(AA$(P9, I3)) - 1): GOTO 9015
	FOR I4 = 0 TO 6
	A(P9, I3, I4) = CVI(Q$(I3 * 15 + I4 + 21))
	C(P9, I3, I4) = CVI(Q$(I3 * 15 + I4 + 28))
	NEXT: NEXT
CLOSE 1
	FY%(P9) = 2 * TR%(P9, 3) - TR%(P9, 4)

9016 CNT% = 0: CNTX% = 0
	IF TR%(P9, 5) = 0 THEN 9018
	FOR I = 0 TO 13
	IF B%(P9, I, 18) = -1 THEN B%(P9, I, 18) = 0
	RN = INT(RND(1) * 100) + 1
	IF UCASE$(AA$(P9, I)) = "XXX" THEN CNTX% = CNTX% + 1
	IF UCASE$(AA$(P9, I)) = "XXX" OR (B%(P9, I, 18) = 0 AND RN > INT(C(P9, I, 0) / TR%(P9, 5) * 100 + .5)) THEN B%(P9, I, 18) = -1
	NEXT
	FOR I = 0 TO 13: IF B%(P9, I, 18) = 0 THEN CNT% = CNT% + 1
	NEXT
	IF CNT% < 10 AND CNTX% < 4 THEN 9016
	IF CNTX% >= 5 AND CNT% < 8 THEN 9016

9018 REM

OPEN P$(0)+"COLBBTMS."+YN$ AS #1 LEN=566
FIELD #1,15 AS Q$(0),40 AS Q$(1),15 AS Q$(2),4 AS Q$(3)
FOR I=0 TO 13
FIELD #1,74+I*32 AS X$,2 AS Q$(I*16+4),2 AS Q$(I*16+5),2 AS Q$(I*16+6),2 AS Q$(I*16+7),2 AS Q$(I*16+8),2 AS Q$(I*16+9),2 AS Q$(I*16+10),2 AS Q$(I*16+11),2 AS Q$(I*16+12),2 AS Q$(I*16+13),2 AS Q$(I*16+14),2 AS Q$(I*16+15),2 AS Q$(I*16+16),2 AS Q$(I  _
*16+17),2 AS Q$(I*16+18),2 AS Q$(I*16+19)
FIELD #1, 522 AS X$,2 AS Q$(228),2 AS Q$(229),2 AS Q$(230),2 AS Q$(231),2 AS Q$(232),2 AS Q$(233),2 AS Q$(234),2 AS Q$(235),2 AS Q$(236),2 AS Q$(237),2 AS Q$(238),2 AS Q$(239),2 AS Q$(240),2 AS Q$(241),2 AS Q$(242),2 AS Q$(243),2 AS Q$(244),2 AS    _
Q$(245),2 AS Q$(246),2 AS Q$(247),2 AS Q$(248),2 AS Q$(249)
NEXT
GET #1, I1
	C$(P9) = Q$(0)
	S$(P9) = Q$(1)
	A1$(P9) = Q$(2)
	ATT(P9) = CVL(Q$(3))
	  FOR I=0 TO 13
	DF(P9, I) = CVI(Q$(I*16+4))
	PO$(P9, I) = Q$(I*16+5)
	FOR I1=0 TO 13
	RS(P9, I, I1) = CVI(Q$(I*16+I1+6))
	NEXT:NEXT
	FOR I = 0 TO 20
	T2%(P9, I) = CVI(Q$(228+I))
	NEXT
	CK = CVI(Q$(249))
CLOSE 1
IF CK <> 999 THEN
	C$(P9)="":S$(P9)="":A1$(P9)="":ATT(P9)=0
	FOR I = 0 TO 13:DF(P9,I) = 5:PO$(P9,I) = ""
	FOR I1 = 0 TO 13:RS(P9,I,I1)=0
	NEXT:NEXT
	FOR I=0 TO 20:T2%(P9,I)=0:NEXT
END IF
END SUB

SUB HORN ()
	FOR PP = 1 TO 70
	SOUND 50, .05
	SOUND 100, .05
	SOUND 317, .3
	NEXT PP
	FOR PZ = 1 TO 2000
	NEXT
END SUB

SUB MAKEPBP ()

1400 'PLAY BY PLAY
	IF U6 = 0 THEN 1495
	RN = INT(RND(1) * 100) + 1
	ON PT% GOTO 1410, 1420, 1430, 1440, 1445, 1450, 1460, 1470, 1480, 1490
	U$ = AA$(p, B1(p, B))

1410 'TURNOVER
	U$ = AA$(p, B1(p, B))
	IF RN > 35 AND RN <= 68 AND P7(D) > 1 AND PASS% = 1 THEN U$ = B$(p) + " CALLED FOR 10 SEC VIOLATION": GOTO 1495
	RN = INT(RND(1) * 14) + 1
	IF RN = 1 THEN U$ = U$ + " TURNS THE BALL OVER"
	IF RN = 2 THEN U$ = U$ + " THROWS IT AWAY"
	IF RN = 3 THEN U$ = U$ + " IS WHISTLED FOR TRAVELING"
	IF RN = 4 THEN U$ = U$ + " TURNS IT OVER"
	IF RN = 5 THEN U$ = U$ + " LOSES CONTROL OF THE BALL"
	IF RN = 6 THEN U$ = U$ + " LOSES IT OUT OF BOUNDS"
	IF RN = 7 THEN U$ = U$ + " LOSES THE HANDLE"
	IF RN = 8 THEN U$ = U$ + " LOSES IT"
	IF RN = 9 THEN U$ = U$ + " IS CALLED FOR STEPS"
	IF RN =10 THEN U$ = U$ + " TRAVELS"
	IF RN =11 THEN U$ = U$ + " WALKS WITH IT"
	IF RN =12 THEN U$ = U$ + " LETS IT GET AWAY"
	IF RN =13 THEN U$ = U$ + " DOUBLE DRIBBLES"
	IF RN =14 THEN U$ = U$ + " LOSES CONTROL"
	goto 1495

1420 'DUNK
	RN = INT(RND(1) * 39) + 1
	IF RN = 1 THEN U$ = "DIPSY-DOO DUNK-A-ROO!!!"
	IF RN = 2 THEN U$ = AA$(P, B1(P, B)) + " MAKES IT HAMMER TIME!!!"
	IF RN = 3 THEN U$ = AA$(P, B1(P, B)) + " SLAMS IT IN!!!"
	IF RN = 4 THEN U$ = AA$(P, B1(P, B)) + " WITH THE 2-HANDED SLAM!!!"
	IF RN = 5 THEN U$ = AA$(P, B1(P, B)) + " SLAMS IT HOME!!!"
	IF RN = 6 THEN U$ = AA$(P, B1(P, B)) + " JAMS IT HOME!!!"
	IF RN = 7 THEN U$ = AA$(P, B1(P, B)) + " THROWS IT DOWN!!!"
	IF RN = 8 THEN U$ = AA$(P, B1(P, B)) + " THUNDERSLAM!!!"
	IF RN = 9 THEN U$ = "RIM ROCKING JAM!!!"
	IF RN =10 THEN U$ = AA$(P, B1(P, B)) + " WITH THE MONSTER SLAM!!"
	IF RN =11 THEN U$ = AA$(P, B1(P, B)) + "POWER SLAMS IT!!!"
	IF RN =12 THEN U$ = AA$(P, B1(P, B)) + " WITH THE 2-HANDED STUFF!!!"
	IF RN =13 THEN U$ = AA$(P, B1(P, B)) + " BACKWARDS JAM!!!"
	IF RN =14 THEN U$ = AA$(P, B1(P, B)) + " WITH THE 1-HANDED SLAM!!!"
	IF RN =15 THEN U$ = AA$(P, B1(P, B)) + " WITH THE REVERSE SLAM!!!"
	IF RN =16 THEN U$ = AA$(P, B1(P, B)) + " WITH THE REVERSE JAM!!!"
	IF RN =17 THEN U$ = AA$(P, B1(P, B)) + " WITH THE WINDMILL JAM!!!"
	IF RN =18 THEN U$ = AA$(P, B1(P, B)) + " WITH THE WINDMILL SLAM!!!"
	IF RN =19 THEN U$ = AA$(P, B1(P, B)) + " WITH THE TOMAHAWK SLAM!!!"
	IF RN =20 THEN U$ = AA$(P, B1(P, B)) + " WITH THE 360 SLAM!!!"
	IF RN =21 THEN U$ = AA$(P, B1(P, B)) + " WITH THE SPINNING SLAM!!!"
	IF RN =22 THEN U$ = AA$(P, B1(P, B)) + " WITH THE LEFT HANDED DUNK!!!"
	IF RN =23 THEN U$ = "DOUBLE CLUTCH JAM!!!"
	IF RN =24 THEN U$ = AA$(P, B1(P, B)) + " GETS THE FLUSH!!!"
	IF RN =25 THEN U$ = AA$(P, B1(P, B)) + " PUNCHES IT HOME!!!"
	IF RN =26 THEN U$ = AA$(P, B1(P, B)) + "...DOUBLE PUMP SLAM!!!"
	IF RN =27 THEN U$ = AA$(P, B1(P, B)) + "...IN YOUR FACE SLAM!!!"
	IF RN =28 THEN U$ = AA$(p, B1(p, B)) + " IS UP": CALL PBP: U$ = "HE SPINS": CALL PBP: U$ = "BEHIND THE BACK SLAM!!!"
	IF RN =29 THEN U$ = "HE SLAMS IT HOME!!"
	IF RN =30 THEN U$ = "HE LAYS IT UP AND IN!!"
	IF RN =31 THEN U$ = "HE BANGS IT IN!!"
	IF RN =32 THEN U$ = "HE RAMS IT IN!!"
	IF RN =33 THEN U$ = "HE SLAMS IT IN!!!"
	IF RN =34 THEN U$ = "DIPSY-DOO DUNK-A-ROO!!!"
	IF RN =35 THEN U$ = "HE MAKES IT HAMMER TIME!!!"
	IF RN =36 THEN U$ = AA$(p, B1(p, B)) + " WITH THE 2-HANDED SLAM!!!"
	IF RN =37 THEN U$ = AA$(p, B1(p, B)) + " IS UP": CALL PBP: U$ = "HE SPINS": CALL PBP: U$ = "BEHIND THE BACK SLAM!!!"
	IF RN =38 THEN U$ = "HE JAMS IT HOME!!!"
	IF RN = 39 THEN U$ = "HE HAMMERS IT HOME!"
	GOTO 1495

1427 IF INT(RND(1) * 100) + 1 <= 2 THEN DK% = 1
	RETURN

1428 IF (B = 0 OR B = 1) AND INT(RND(1) * 100) + 1 <= 1 THEN DK% = 1
	IF (B = 2 OR B = 3) AND INT(RND(1) * 100) + 1 <= 5 THEN DK% = 1
	IF B = 4 AND INT(RND(1) * 100) + 1 <= 7 THEN DK% = 1
	RETURN

1430 'SHOOTS...PZ%567 SML
	U$ = AA$(p, B1(p, B))
	ON PZ% GOTO 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1446

1431 'BAD
	IF RN <= 40 THEN U$ = U$ + " TAKES A TOUGH SHOT"
	IF RN > 40 AND RN <= 45 THEN U$ = U$ + " SHOOTS OFF BALANCE"
	IF RN > 45 AND RN <= 50 THEN U$ = U$ + " FORCES ONE UP"
	IF RN > 50 AND RN <= 60 THEN U$ = U$ + " SHOOTS UNDER PRESSURE"
	IF RN > 60 AND RN <= 65 THEN U$ = U$ + " WITH A BAD SHOT"
	IF RN > 65 AND RN <= 70 THEN U$ = U$ + " SHOOTS IN HEAVY TRAFFIC"
	IF RN > 70 AND RN <= 75 THEN U$ = U$ + " THROWS UP A PRAYER"
	IF RN > 75 AND RN <= 80 THEN U$ = U$ + " TAKES A BAD SHOT"
	IF RN > 80 AND RN <= 85 THEN U$ = U$ + " FORCES THE INSIDE SHOT"
	IF RN > 85 THEN U$ = U$ + " TURNS AND SHOOTS"
	GOTO 1495

1432 'INSIDE W/ASSIST
	IF RN <= 10 THEN U$ = "HE CUTS TO THE BASKET": CALL PBP: U$ = "TAKES IT UP": GOSUB 1428: GOTO 1495
	IF RN <= 20 THEN U$ = "HE TAKES IT TO THE HOLE": GOSUB 1428: GOTO 1495
	IF RN <= 30 THEN U$ = "HE TAKES IT TO THE HOOP": GOSUB 1428: GOTO 1495
	IF RN <= 40 THEN U$ = "HE LEANS IN AND SHOOTS": GOTO 1495
	IF RN <= 50 THEN U$ = "HE PUTS IT UP": GOTO 1495
	IF RN <= 60 THEN U$ = "HE TAKES IT TO THE BOARD": GOSUB 1428: GOTO 1495
	IF RN <= 70 THEN U$ = "HE PUTS IT OFF THE GLASS": GOTO 1495
	IF RN <= 80 AND B = 4 THEN U$ = "HE SHOOTS THE HOOK": GOTO 1495
	IF RN <= 80 AND B <> 4 THEN U$ = "HE GOES IN FOR THE LAYUP": GOTO 1495
	IF RN <= 90 THEN U$ = "HE TAKES IT UP STRONG": GOSUB 1428: GOTO 1495
	IF RN <= 95 THEN U$ = "HE POWERS IT UP": GOSUB 1428: GOTO 1495
	U$ = "HE LAYS IT UP": GOTO 1495

1433 'PENETRATE
	IF B = 4 AND RN <= 15 THEN U$ = "HE PUTS IT OFF THE GLASS": GOTO 1495
	IF B = 4 AND RN <= 25 THEN U$ = "HE PIVOTS TO THE BASKET": GOTO 1495
	IF B = 4 AND RN <= 40 THEN U$ = "HE POWERS IT UP": GOTO 1495
	IF B = 4 AND RN <= 58 THEN U$ = "HE TAKES IT TO THE HOOP": GOSUB 1425: GOTO 1495
	IF B = 4 AND RN <= 70 THEN U$ = "HE TAKES THE SHOT": GOTO 1495
	IF B = 4 AND RN <= 72 THEN U$ = "HE CURLS OFF A PICK IN THE PAINT": CALL PBP: U$ = "TAKES IT UP":GOSUB 1425:GOTO 1495
	IF B = 4 AND RN <= 74 THEN U$ = "HE MAKES A NICE SPIN MOVE": CALL PBP: U$ = "AND SOARS TO THE HOOP":GOSUB 1425:GOTO 1495
	IF B = 4 THEN U$ = "HE TAKES IT UP STRONG": GOSUB 1425: GOTO 1495
	IF (B =2 OR B=3) AND RN <= 16 THEN U$ = "HE TAKES IT UP": GOSUB 1426: GOTO 1495
	IF (B =2 OR B=3) AND RN <= 32 THEN U$ = "HE SPINS FREE": CALL PBP: U$ = "SHOOTS": GOSUB 1426: GOTO 1495
	IF (B =2 OR B=3) AND RN <= 48 THEN U$ = "HE GETS LOOSE IN THE PAINT": CALL PBP: U$ = "TAKES IT UP": GOSUB 1426: GOTO 1495
	IF (B =2 OR B=3) AND RN <= 64 THEN U$ = "HE PUTS IT UP": GOTO 1495
	IF (B =2 OR B=3) AND RN <= 67 THEN U$ = "HE CURLS OFF A PICK IN THE PAINT": CALL PBP: U$ = "TAKES IT UP":GOSUB 1426:GOTO 1495
	IF (B =2 OR B=3) AND RN <= 69 THEN U$ = "HE MAKES A NICE SPIN MOVE": CALL PBP: U$ = "AND SOARS TO THE HOOP":GOSUB 1426:GOTO 1495
	IF (B=2 OR B=3) AND RN <= 71 THEN U$ = "HE DRIVES THE BASELINE":CALL PBP:U$="SPINS RIGHT AND GOES UP": GOSUB 1426:GOTO 1495
	IF (B=2 OR B=3) AND RN=72 THEN U$ = "HE SLICES IN THE HOLE":CALL PBP:U$="UNDERHAND SCOOP SHOT": GOTO 1495
	IF (B=2 OR B=3) AND RN=73 THEN U$ = "STRONG CUT ALONG THE BASELINE":CALL PBP:U$="DOUBLE PUMP REVERSE LAYUP": GOTO 1495
	IF (B=2 OR B=3) AND RN = 74 THEN U$ = "HE PENETRATES":CALL PBP:U$="GORGEOUS FINGER ROLL!": GOTO 1495
	IF (B =2 OR B=3) AND RN > 80 THEN U$ = "HE SHOOTS": GOTO 1495
	IF (B =2 OR B=3) THEN U$ = "HE TAKES THE SHOT": GOTO 1495
	IF RN <= 25 THEN U$ = "HE SPINS FREE": CALL PBP: U$ = "SHOOTS": GOTO 1495
	IF RN <= 50 THEN U$ = "HE TAKES IT UP UNDER THE BASKET": GOSUB 1427: GOTO 1495
	IF RN <= 52 THEN U$ = "HE MAKES A NICE SPIN MOVE": CALL PBP: U$ = "AND SOARS TO THE HOOP":GOSUB 1427:GOTO 1495
	IF RN <= 54 THEN U$ = "HE BLOWS PAST TWO DEFENDERS": GOTO 1495
	IF RN <= 56 THEN U$ = "HE DRIVES THE BASELINE":CALL PBP:U$="SPINS RIGHT AND GOES UP": GOSUB 1427:GOTO 1495
	IF RN = 57 THEN U$ = "HE SLICES IN THE HOLE":CALL PBP:U$="UNDERHAND SCOOP SHOT": GOTO 1495
	IF RN = 58 THEN U$ = "STRONG CUT ALONG THE BASELINE":CALL PBP:U$="DOUBLE PUMP REVERSE LAYUP": GOTO 1495
	IF RN = 59 THEN U$ = "HE PENETRATES":CALL PBP:U$="GORGEOUS FINGER ROLL!": GOTO 1495
	IF RN <= 75 THEN U$ = "HE TAKES THE JUMPER": GOTO 1495
	IF RN <= 90 THEN U$ = "HE STOPS": CALL PBP: U$ = "SHOOTS": GOTO 1495
	IF RN <= 91 THEN U$ = "HE LOOKS TO PASS": CALL PBP: U$ = "NO ONE IS OPEN": CALL PBP: U$ = "HE PUTS IT UP": GOTO 1495
	U$ = "HE TAKES THE SHOT": GOTO 1495

1425 IF INT(RND(1) * 100) + 1 <= 15 THEN DK% = 1
	RETURN

1426 IF INT(RND(1) * 100) + 1 <= 7 THEN DK% = 1
	RETURN

1434 'THREE!
	IF FT% = 1 AND RN <= 50 THEN U$ = U$ + " THROWS UP A PRAYER"
	IF FT% = 1 AND RN > 50 THEN U$ = U$ + " LAUNCHES A THREE"
	IF FT% = 1 THEN FT% = 0: GOTO 1495
	IF RN <= 10 THEN U$ = U$ + " TRIES FOR THREE!"
	IF RN > 10 AND RN <= 20 THEN U$ = U$ + " SHOOTS FROM 3-POINT RANGE!"
	IF RN > 20 AND RN <= 30 THEN U$ = U$ + " HOISTS A THREE!"
	IF RN > 30 AND RN <= 40 THEN U$ = U$ + " BOMBS A THREE FROM THE CORNER!"
	IF RN > 40 AND RN <= 50 THEN U$ = U$ + " FIRES FROM THE 3-POINT LINE!"
	IF RN > 50 AND RN <= 60 THEN U$ = U$ + " SHOOTS FOR THREE!"
	IF RN > 60 AND RN <= 70 THEN U$ = U$ + " SHOOTS THE 3-POINTER!"
	IF RN > 70 AND RN <= 80 THEN U$ = U$ + " FOR 3...!"
	IF RN > 80 AND RN <= 90 THEN U$ = U$ + " PUTS UP THE TREY!"
	IF RN > 90 THEN U$ = U$ + " TAKES THE 3-POINTER!"
	GOTO 1495

1435 'SHORT JUMP
	DK% = 0
	RN  = INT(RND(1)*59) + 1
	IF RN = 1 THEN U$ = U$ + " WITH A TWISTING JUMPER"
	IF RN = 2 THEN U$ = U$ + " SHOOTS THE J"
	IF RN = 3 AND B = 4 THEN U$ = U$ + " RELEASES THE HOOK"
	IF RN = 3 AND B <> 4 THEN U$ = U$ + " TAKES THE SHOT"
	IF RN = 4 THEN U$ = U$ + " WITH A SHORT JUMPER"
	IF RN = 5 THEN U$ = U$ + " WITH THE 10 FOOTER"
	IF RN = 6 AND B<>4 THEN U$ = U$ + " WITH THE RUNNER"
	IF RN = 6 AND B=4 THEN U$ = U$ + " WITH THE RUNNING HOOK"
	IF RN = 7 AND B=4 THEN U$ = U$ + " WITH A SWEEPING HOOK"
	IF RN = 7 AND B<>4 THEN U$ = U$ + " WORKS FREE AND SHOOTS"
	IF RN = 8 AND B<>4 THEN U$ = U$ + " TAKES THE SHOT"
	IF RN = 8 AND B=4 THEN U$ = U$ + " WITH A BABY HOOK SHOT"
	IF RN = 9 THEN U$ = U$ + " LEANS IN AND SHOOTS"
	IF RN = 10 THEN U$ = U$ + " SHOOTS"
	IF RN = 11 THEN U$ = U$ + " SHOOTS FALLING AWAY"
	IF RN = 12 THEN U$ = U$ + " LEANS IN FOR THE SHOT"
	IF RN = 13 THEN U$ = U$ + " TAKES THE LEFT HANDER"
	IF RN = 14 THEN U$ = U$ + " HARD TO THE HOLE..."
	IF RN = 15 THEN U$ = U$ + " FLIPS IT UP"
	IF RN = 16 THEN U$ = U$ + " FORCES THE INSIDE SHOT"
	IF RN = 17 THEN U$ = U$ + " CUTS TO THE BASKET"
	IF RN = 18 THEN U$ = U$ + " TAKES IT IN THE PAINT"
	IF RN = 19 THEN U$ = U$ + " FLOATS IT OVER HIS MAN"
	IF RN = 20 THEN U$ = U$ + " TAKES HIS MAN INSIDE"
	IF RN = 21 THEN U$ = U$ + " WHEELS IN THE LANE"
	IF RN = 22 THEN U$ = U$ + " CUTS INSIDE FOR THE SHOT"
	IF RN = 23 THEN U$ = U$ + " PENETRATES AND SHOOTS"
	IF RN = 24 THEN U$ = U$ + " SLICES INSIDE"
	IF RN = 25 THEN U$ = U$ + " LOOKS FOR TWO"
	IF RN = 26 THEN U$ = U$ + " DRIVES INTO THE PAINT"
	IF RN = 27 THEN U$ = U$ + " HAS THE BASELINE JUMPER"
	IF RN = 28 THEN U$ = U$ + " GLIDES TO THE HOLE"
	IF RN = 29 THEN U$ = U$ + " GETS INSIDE FOR THE SHOT"
	IF RN = 30 THEN U$ = U$ + " SPINS TOWARD THE HOOP"
	IF RN = 31 THEN U$ = U$ + " FROM SHORT RANGE"
	IF RN = 32 THEN U$ = U$ + " GOES BASELINE"
	IF RN = 33 THEN U$ = U$ + " PENETRATES AND SHOOTS"
	IF RN = 34 THEN U$ = U$ + " FROM 8 FEET"
	IF RN = 35 THEN U$ = U$ + " FROM 6 FEET"
	IF RN = 36 THEN U$ = U$ + " FROM 5 FEET"
	IF RN = 37 THEN U$ = U$ + " DRIVES TO THE HOLE"
	IF RN = 38 THEN U$ = U$ + " GLIDES TO THE HOLE"
	IF RN = 39 THEN U$ = U$ + " GETS INSIDE FOR THE SHOT"
	IF RN = 40 THEN U$ = U$ + " GOES TO THE HOLE"
	IF RN = 41 THEN U$ = U$ + " CUTS INSIDE"
	IF RN = 42 THEN U$ = U$ + " SPINS INSIDE"
	IF RN = 43 THEN U$ = U$ + " BREAKS INSIDE"
	IF RN = 44 THEN U$ = U$ + " SNEAKS INSIDE"
	IF RN = 45 THEN U$ = U$ + " SCOOTS INSIDE"
	IF RN = 46 THEN U$ = U$ + " WORKS IT INSIDE"
	IF RN = 47 THEN U$ = U$ + " KNIFES INSIDE"
	IF RN = 48 THEN U$ = U$ + " SCISSORS THROUGH"
	IF RN = 49 THEN U$ = U$ + " BANGS INSIDE"
	IF RN = 50 THEN U$ = U$ + " SLICES INSIDE"
	IF RN = 51 THEN U$ = U$ + " PUMPS AND SHOOTS"
	IF RN = 52 THEN U$ = U$ + " DOUBLE PUMPS AND SHOOTS"
	IF RN = 53 THEN U$ = U$ + "...ONE HANDED FADE AWAY"
	IF RN = 54 THEN U$ = U$ + "...LEFT HANDED FADE AWAY"
	IF RN = 55 THEN U$ = U$ + "...HIGH ARCHING SHOT"
	IF RN = 56 THEN U$ = U$ + " WITH A RUNNING LEFT HANDER"
	IF RN = 57 THEN U$ = U$ + " WITH A RUNNING SCOOP SHOT"
	IF RN = 58 THEN U$ = U$ + " WITH THE SCOOP SHOT"
	IF RN = 59 THEN U$ = U$ + " WITH THE FINGER ROLL"
	  GOTO 1495

1436 DK% = 0
	RN = INT(RND(1) * 59) + 1
	IF RN = 1 THEN U$ = U$ + " POPS FROM OUTSIDE"
	IF RN = 2 THEN U$ = U$ + " DECIDES TO SHOOT IT"
	IF RN = 3 THEN U$ = U$ + " FIRES THE FADE-AWAY"
	IF RN = 4 THEN U$ = U$ + " LETS IT FLY"
	IF RN = 5 THEN U$ = U$ + " LAUNCHES ONE"
	IF RN = 6 THEN U$ = U$ + " WITH THE OUTSIDE SHOT"
	IF RN = 7 THEN U$ = U$ + " OUT OF THE CORNER"
	IF RN = 8 THEN U$ = U$ + " PUTS IT UP FROM 18"
	IF RN = 9 THEN U$ = U$ + " SPOTS UP OUTSIDE"
	IF RN = 10 THEN U$ = U$ + " RELEASES THE JUMPER"
	IF RN = 11 THEN U$ = U$ + " FROM THE TOP OF THE KEY"
	IF RN = 12 THEN U$ = U$ + " FIRES FROM THE LEFT WING"
	IF RN = 13 THEN U$ = U$ + " TRIES THE 12 FOOTER"
	IF RN = 14 THEN U$ = U$ + " PULLS UP AND POPS"
	IF RN = 15 THEN U$ = U$ + " FIRES FROM 15"
	IF RN = 16 THEN U$ = U$ + " FROM THE PERIMETER"
	IF RN = 17 THEN U$ = U$ + " TURNS AND SHOOTS"
	IF RN = 18 THEN U$ = U$ + " SHOOTS OFF THE SCREEN"
	IF RN = 19 THEN U$ = U$ + " FAKES AND SHOOTS"
	IF RN = 20 THEN U$ = U$ + " FIRES AWAY"
	IF RN = 21 THEN U$ = U$ + " POPS FROM THE BASELINE"
	IF RN = 22 THEN U$ = U$ + " DRIVES THE LANE"
	IF RN = 23 THEN U$ = U$ + " TAKES THE SHOT"
	IF RN = 24 THEN U$ = U$ + " WORKS FREE AND FIRES"
	IF RN = 25 THEN U$ = U$ + " SHOOTS OVER HIS MAN"
	IF RN = 26 THEN U$ = U$ + " SHOOTS FALLING AWAY"
	IF RN = 27 THEN U$ = U$ + " FAKES AND SHOOTS"
	IF RN = 28 THEN U$ = U$ + " FIRES AWAY"
	IF RN = 29 THEN U$ = U$ + " POPS FROM THE BASELINE"
	IF RN = 30 THEN U$ = U$ + " DRIVES THE LANE"
	IF RN = 31 THEN U$ = U$ + " TAKES THE SHOT"
	IF RN = 32 THEN U$ = U$ + " WORKS FREE AND FIRES"
	IF RN = 33 THEN U$ = U$ + " SHOOTS FROM 15"
	IF RN = 34 THEN U$ = U$ + " SHOOTS"
	IF RN = 35 THEN U$ = U$ + " TAKES THE JUMPER"
	IF RN = 36 THEN U$ = U$ + " FROM THE RIGHT CORNER"
	IF RN = 37 THEN U$ = U$ + " FROM THE LEFT CORNER"
	IF RN = 38 THEN U$ = U$ + " FROM THE KEY"
	IF RN = 39 THEN U$ = U$ + " FIRES FROM OUTSIDE"
	IF RN = 40 THEN U$ = U$ + " PUTS IT UP FROM 16"
	IF RN = 41 THEN U$ = U$ + " FROM THE PERIMETER"
	IF RN = 42 THEN U$ = U$ + " FAKES AND SHOOTS"
	IF RN = 43 THEN U$ = U$ + " FROM AROUND 16 FEET"
	IF RN = 44 THEN U$ = U$ + " PUTS IT UP"
	IF RN = 45 THEN U$ = U$ + " WITH A RUNNING ONE-HANDER"
	IF RN = 46 THEN U$ = U$ + " PULLS UP"
	IF RN = 47 THEN U$ = U$ + " KISSES THE GLASS"
	IF RN = 48 THEN U$ = U$ + " SPINS AND SHOOTS"
	IF RN = 49 THEN U$ = U$ + " PUTS IT UP FROM 16"
	IF RN = 50 THEN U$ = U$ + " WITH A LONG JUMPER"
	IF RN = 51 THEN U$ = U$ + " PUMPS AND SHOOTS"
	IF RN = 52 THEN U$ = U$ + " DOUBLE PUMPS AND SHOOTS"
	IF RN = 53 THEN U$ = U$ + "...ONE HANDED FADE AWAY"
	IF RN = 54 THEN U$ = U$ + "...LEFT HANDED FADE AWAY"
	IF RN = 55 THEN U$ = U$ + "...HIGH ARCHING SHOT"
	IF RN = 56 THEN U$ = U$ + " WITH A RUNNING LEFT HANDER"
	IF RN = 57 THEN U$ = U$ + " WITH A RUNNING SCOOP SHOT"
	IF RN = 58 THEN U$ = U$ + " WITH THE SCOOP SHOT"
	IF RN = 59 THEN U$ = U$ + " WITH THE FINGER ROLL"
	  GOTO 1495

1437 DK% = 0
	IF RN <= 10 THEN U$ = U$ + " FIRES FROM THE PERIMETER": GOTO 1495
	IF RN <= 20 THEN U$ = U$ + " SHOOTS FROM 17": GOTO 1495
	IF RN <= 30 THEN U$ = U$ + " PUTS IT UP FROM 17": GOTO 1495
	IF RN <= 40 THEN U$ = U$ + " PUTS IT UP": GOTO 1495
	IF RN <= 45 THEN U$ = U$ + " FROM INSIDE THE THE KEY": GOTO 1495
	IF RN <= 50 THEN U$ = U$ + " FIRES FROM THE CORNER": GOTO 1495
	IF RN <= 60 THEN U$ = U$ + " SHOOTS FROM OUTSIDE": GOTO 1495
	IF RN <= 70 THEN U$ = U$ + " PUMPS AND SHOOTS": GOTO 1495
	IF RN <= 80 THEN U$ = U$ + " FIRES THE FADE-AWAY": GOTO 1495
	IF RN <= 90 AND X3% = 1 THEN U$ = U$ + " FROM INSIDE THE 3-POINT LINE": GOTO 1495
	IF RN <= 91 AND X3% = 1 THEN U$ = U$ + " FOR THREE!": CALL PBP: U$ = "NO!": CALL PBP: U$ = "HIS FOOT IS ON THE 3-POINT LINE": GOTO 1495
	U$ = U$ + " SHOOTS FROM THE WING"
	GOTO 1495

1438 IF RN <= 20 THEN U$ = "HE SAILS TO THE HOOP": GOTO 1495
	IF RN <= 23 THEN U$ = "HE TAKES IT TO THE BUCKET":GOTO 1495
	IF RN <= 26 THEN U$ = "HE TAKES IT TO THE HOLE":GOTO 1495
	IF RN <= 29 THEN U$ = "HE SLASHES TO THE HOLE":GOTO 1495
	IF RN <= 32 THEN U$ = "HE SLASHES TO THE BUCKET":GOTO 1495
	IF RN <= 35 THEN U$ = "HE SOARS TO THE BUCKET":GOTO 1495
	IF RN <= 38 THEN U$ = "HE SOARS TO THE HOLE":GOTO 1495
	IF RN <= 40 THEN U$ = "HE GLIDES TO THE HOLE": GOTO 1495
	IF RN <= 60 THEN U$ = "HE GOES IN STRONG": GOTO 1495
	IF RN <= 80 THEN U$ = "HE TAKES IT IN": GOTO 1495
	IF RN <= 90 THEN U$ = "HE TAKES A DEFENDER WITH HIM": GOTO 1495
	U$ = "HE GOES UP WITH IT": GOTO 1495

1439 'BACK AFTER REB
	U$ = "HE "
	RN = INT(RND(1) *11 )  +1
	IF RN = 1 THEN U$ = U$ + "TAKES IT BACK UP"
	IF RN = 2 THEN U$ = U$ + "GOES BACK UP WITH IT"
	IF RN = 3 THEN U$ = U$ + "POWERS HIS WAY UP WITH IT"
	IF RN = 4 THEN U$ = U$ + "GOES STRONG TO THE BASKET"
	IF RN = 5 THEN U$ = U$ + "MUSCLES IT UP"
	IF RN = 6 THEN U$ = U$ + "SHOOTS"
	IF RN = 7 THEN U$ = U$ + "TAKES IT TO THE GOAL"
	IF RN = 8 THEN U$ = U$ + "PUTS IT UP AGAIN"
	IF RN = 9 THEN U$ = U$ + "SHOOTS IT AGAIN"
	IF RN =10 THEN U$ = U$ + "CLAWS HIS WAY UP"
	IF RN =11 THEN U$ = U$ + "SHOOTS IN TRAFFIC"
	  IF B = 2 OR B = 3 AND INT(RND(1) * 100) + 1 <= 7 THEN DK% = 1
	IF B = 4 AND INT(RND(1) * 100) + 1 <= 15 THEN DK% = 1
	GOTO 1495

1446 RN = INT(RND(1) * 100) + 1
	DK% = 0
	IF RN <= 20 THEN U$ = U$ + " SHOOTS FROM 15": GOTO 1495
	IF RN <= 40 THEN U$ = U$ + " SHOOTS": GOTO 1495
	IF RN <= 60 THEN U$ = U$ + " TAKES THE JUMPER": GOTO 1495
	IF RN <= 80 THEN U$ = U$ + " PUTS IT UP FROM 16": GOTO 1495
	U$ = U$ + " FAKES AND SHOOTS": GOTO 1495

1440 'THREE GOOD
	U$ = "HE "
	IF RN <= 6 THEN U$ = U$ + " DRAINS THE THREE!": CALL PBP: U$ = "NO!": CALL PBP: U$ = "HIS FOOT IS ON THE 3-POINT LINE": XX% = 1: GOTO 1495
	IF RN <= 10 THEN U$ = U$ + "FILLS UP THE BASKET!!!": GOTO 1495
	IF RN <= 20 THEN U$ = U$ + "HITS THE TREY!!!": GOTO 1495
	IF RN <= 30 THEN U$ = "IT'S GOOOODD!!": GOTO 1495
	IF RN <= 40 THEN U$ = U$ + "GETS IT!!!": GOTO 1495
	IF RN <= 45 THEN U$ = "NOTHING BUT THE BOTTOM OF THE NET": GOTO 1495
	IF RN <= 50 THEN U$ = "COUNT IT!!": GOTO 1495
	IF RN <= 55 THEN U$ = "WAY DOWNTOWN BANG!!!": GOTO 1495
	IF RN <= 60 THEN U$ = U$ + "RINGS IT UP!!!": GOTO 1495
	IF RN <= 80 THEN U$ = U$ + "DRAINS IT!!!": GOTO 1495
	IF RN <= 90 THEN U$ = "HE BURIES IT!!!": GOTO 1495
	U$ = "IT'S ALL NET!!!"
	GOTO 1495

1445 'THREE BAD
	U$ = "HE "
	IF RN <= 20 THEN U$ = U$ + "GETS NONE": GOTO 1495
	IF RN <= 25 THEN U$ = "IT NEVER HAD A CHANCE": GOTO 1495
	IF RN <= 35 THEN U$ = "AIRRRR BALLLL!!": GOTO 1495
	IF RN <= 40 THEN U$ = U$ + "MISFIRES": GOTO 1495
	IF RN <= 60 THEN U$ = "IT'S OFF THE RIM...NO GOOD!": GOTO 1495
	IF RN <= 80 THEN U$ = "IT'S SHORT": GOTO 1495
	U$ = U$ + "MISSES": GOTO 1495

1450 'FAST BREAK
	U$ = AA$(P, B1(P, B))
	RN = INT(RND(1)* 38) + 1
	IF RN = 1 THEN U$ = U$ + " HAS IT ON THE FAST BREAK!"
	IF RN = 2 THEN U$ = U$ + " IS IN TRANSITION!"
	IF RN = 3 THEN U$ = U$ + " STARTS THE BREAK!"
	IF RN = 4 THEN U$ = U$ + " IS DOWN COURT IN A HURRY!"
	IF RN = 5 THEN U$ = U$ + " IS ON THE RUN!"
	IF RN = 6 THEN U$ = U$ + " GOES COAST TO COAST!"
	IF RN = 7 THEN U$ = U$ + " ON THE BREAK!"
	IF RN = 8 THEN U$ = U$ + " ON THE RUN!"
	IF RN = 9 THEN U$ = U$ + " ON THE FAST BREAK!"
	IF RN =10 THEN U$ = U$ + " HAS THE FAST BREAK!"
	IF RN =11 THEN U$ = U$ + " BREAKS INTO THE FORECOURT!"
	IF RN =12 THEN U$ = U$ + " FLIES UPCOURT!"
	IF RN =13 THEN U$ = U$ + " STARTS THE FASTBREAK!"
	IF RN =14 THEN U$ = U$ + " ON THE MOVE!"
	IF RN =15 THEN U$ = U$ + " IN TRANSITION!"
	IF RN =16 THEN U$ = U$ + " DOWN COURT IN A HURRY!"
	IF RN =17 THEN U$ = U$ + " CHARGES ACROSS THE LINE!"
	IF RN =18 THEN U$ = U$ + " BREAKS QUICKLY!"
	IF RN =19 THEN U$ = U$ + " BREAKS DOWN COURT!"
	IF RN =20 THEN U$ = U$ + " STARTS THE RUNNING GAME!"
	IF RN =21 THEN U$ = U$ + " FLIES DOWN THE FLOOR!"
	IF RN =22 THEN U$ = U$ + " GOES RIGHT TO WORK!"
	IF RN =23 THEN U$ = U$ + " BACK THE OTHER WAY!"
	IF RN =24 THEN U$ = U$ + " QUICKLY UP THE FLOOR!"
	IF RN =25 THEN U$ = U$ + " PUSHES IT UP COURT!"
	IF RN =26 THEN U$ = U$ + " WASTES NO TIME!"
	IF RN =27 THEN U$ = U$ + " UPS THE TEMPO!"
	IF RN =28 THEN U$ = U$ + " HUSTLES DOWN COURT!"
	IF RN =29 THEN U$ = U$ + " RUSHES UP THE FLOOR!"
	IF RN =30 THEN U$ = U$ + " ON THE MOVE!"
	IF RN =31 THEN U$ = U$ + " STREAKS UP THE COURT!"
	IF RN =32 THEN U$ = U$ + " FLIES DOWN THE COURT!"
	IF RN =33 THEN U$ = U$ + " JETS DOWN COURT!"
	IF RN =34 THEN U$ = U$ + " QUICKLY GETS IT UP COURT!"
	IF RN =35 THEN U$ = U$ + " TAKES IT COAST TO COAST!"
	IF RN =36 THEN U$ = U$ + " IS RUNNING AND GUNNING!"
	IF RN =37 THEN U$ = U$ + " FLIES OVER THE TIME LINE!"
	IF RN =38 THEN U$ = U$ + " RUSHES IT UP THE FLOOR!"
	CALL SHOTSTRING
	GOTO 1495

1460 'FAST BREAK SCORE
	FB% = 0
	RN = INT(RND(1) * 39) + 1
	IF RN = 1 THEN U$ = "DIPSY-DOO DUNK-A-ROO!!!"
	IF RN = 2 THEN U$ = AA$(P, B1(P, B)) + " MAKES IT HAMMER TIME!!!"
	IF RN = 3 THEN U$ = AA$(P, B1(P, B)) + " SLAMS IT IN!!!"
	IF RN = 4 THEN U$ = AA$(P, B1(P, B)) + " WITH THE 2-HANDED SLAM!!!"
	IF RN = 5 THEN U$ = AA$(P, B1(P, B)) + " SLAMS IT HOME!!!"
	IF RN = 6 THEN U$ = AA$(P, B1(P, B)) + " JAMS IT HOME!!!"
	IF RN = 7 THEN U$ = AA$(P, B1(P, B)) + " THROWS IT DOWN!!!"
	IF RN = 8 THEN U$ = AA$(P, B1(P, B)) + " THUNDERSLAM!!!"
	IF RN = 9 THEN U$ = "RIM ROCKING JAM!!!"
	IF RN =10 THEN U$ = AA$(P, B1(P, B)) + " WITH THE MONSTER SLAM!!"
	IF RN =11 THEN U$ = AA$(P, B1(P, B)) + "POWER SLAMS IT!!!"
	IF RN =12 THEN U$ = AA$(P, B1(P, B)) + " WITH THE 2-HANDED STUFF!!!"
	IF RN =13 THEN U$ = AA$(P, B1(P, B)) + " BACKWARDS JAM!!!"
	IF RN =14 THEN U$ = AA$(P, B1(P, B)) + " WITH THE 1-HANDED SLAM!!!"
	IF RN =15 THEN U$ = AA$(P, B1(P, B)) + " WITH THE REVERSE SLAM!!!"
	IF RN =16 THEN U$ = AA$(P, B1(P, B)) + " WITH THE REVERSE JAM!!!"
	IF RN =17 THEN U$ = AA$(P, B1(P, B)) + " WITH THE WINDMILL JAM!!!"
	IF RN =18 THEN U$ = AA$(P, B1(P, B)) + " WITH THE WINDMILL SLAM!!!"
	IF RN =19 THEN U$ = AA$(P, B1(P, B)) + " WITH THE TOMAHAWK SLAM!!!"
	IF RN =20 THEN U$ = AA$(P, B1(P, B)) + " WITH THE 360 SLAM!!!"
	IF RN =21 THEN U$ = AA$(P, B1(P, B)) + " WITH THE SPINNING SLAM!!!"
	IF RN =22 THEN U$ = AA$(P, B1(P, B)) + " WITH THE LEFT HANDED DUNK!!!"
	IF RN =23 THEN U$ = "DOUBLE CLUTCH JAM!!!"
	IF RN =24 THEN U$ = AA$(P, B1(P, B)) + " GETS THE FLUSH!!!"
	IF RN =25 THEN U$ = AA$(P, B1(P, B)) + " PUNCHES IT HOME!!!"
	IF RN =26 THEN U$ = AA$(P, B1(P, B)) + "...DOUBLE PUMP SLAM!!!"
	IF RN =27 THEN U$ = AA$(P, B1(P, B)) + "...IN YOUR FACE SLAM!!!"
	IF RN =28 THEN U$ = AA$(p, B1(p, B)) + " IS UP": CALL PBP: U$ = "HE SPINS": CALL PBP: U$ = "BEHIND THE BACK SLAM!!!"
	IF RN =29 THEN U$ = "HE SLAMS IT HOME!!"
	IF RN =30 THEN U$ = "HE LAYS IT UP AND IN!!"
	IF RN =31 THEN U$ = "HE BANGS IT IN!!"
	IF RN =32 THEN U$ = "HE RAMS IT IN!!"
	IF RN =33 THEN U$ = "HE SLAMS IT IN!!!"
	IF RN =34 THEN U$ = "DIPSY-DOO DUNK-A-ROO!!!"
	IF RN =35 THEN U$ = "HE MAKES IT HAMMER TIME!!!"
	IF RN =36 THEN U$ = AA$(p, B1(p, B)) + " WITH THE 2-HANDED SLAM!!!"
	IF RN =37 THEN U$ = AA$(p, B1(p, B)) + " IS UP": CALL PBP: U$ = "HE SPINS": CALL PBP: U$ = "BEHIND THE BACK SLAM!!!"
	IF RN =38 THEN U$ = "HE JAMS IT HOME!!!"
	IF RN = 39 THEN U$ = "HE HAMMERS IT HOME!"
	GOTO 1495

1470 'MISS
	IF PZ% = 8 THEN PZ% = 0: FB% = 0: GOTO 1475
	RN = INT(RND(1) * 50) + 1
	IF RN = 1 THEN U$ = "IT RATTLES IN AND OUT...NO GOOD"
	IF RN = 2 THEN U$ = "OFF THE IRON"
	IF RN = 3 THEN U$ = "IT SPINS IN AND OUT"
	IF RN = 4 THEN U$ = "IT'S OFF THE GLASS"
	IF RN = 5 THEN U$ = "IT'S NO GOOD"
	IF RN = 6 THEN U$ = "IT'S OFF THE MARK"
	IF RN = 7 THEN U$ = "IT'S A BRICK"
	IF RN = 8 THEN U$ = "OFF THE RIM"
	IF RN = 9 THEN U$ = "NOT EVEN CLOSE!"
	IF RN =10 THEN U$ = "NO GOOD"
	IF RN =11 THEN U$ = "HE MISSES"
	IF RN =12 THEN U$ = "DOESN'T GET THE ROLL"
	IF RN =13 THEN U$ = "OFF THE GLASS"
	IF RN =14 THEN U$ = "FALLS SHORT"
	IF RN =15 THEN U$ = "NO GOOD"
	IF RN =16 THEN U$ = "NO"
	IF RN =17 THEN U$ = "HE MISSES"
	IF RN =18 THEN U$ = "IN AND OUT"
	IF RN =19 THEN U$ = "OFF THE RIM"
	IF RN =20 THEN U$ = "OFF THE IRON"
	IF RN =21 THEN U$ = "IT'S NOT THERE"
	IF RN =22 THEN U$ = "OFF TARGET"
	IF RN =23 THEN U$ = "IT RATTLES OUT"
	IF RN =24 THEN U$ = "IT DOESN'T FALL"
	IF RN =25 THEN U$ = "IT BOUNCES OFF"
	IF RN =26 THEN U$ = "IT ROLLS OFF"
	IF RN =27 THEN U$ = "SHORT"
	IF RN =28 THEN U$ = "IT DOESN'T GO DOWN"
	IF RN =29 THEN U$ = "IT'S NO GOOD"
	IF RN =30 THEN U$ = "NO GOOD"
	IF RN =31 THEN U$ = "HE MISSES"
	IF RN =32 THEN U$ = "IT'S A BRICK"
	IF RN =33 THEN U$ = "HE FAILS TO CONNECT"
	IF RN =34 THEN U$ = "OFF THE SIDE OF THE RIM"
	IF RN =35 THEN U$ = "IT COMES UP SHORT"
	IF RN =36 THEN U$ = "IT ROLLS OUT"
	IF RN =37 THEN U$ = "AROUND AND OUT"
	IF RN =38 THEN U$ = "OFF THE BACK OF THE IRON"
	IF RN =39 THEN U$ = "ON THE FRONT RIM...ROLLS OFF"
	IF RN =40 THEN U$ = "IN THE AIR...NO GOOD"
	IF RN =41 THEN U$ = "TOO SHORT"
	IF RN =42 THEN U$ = "NO GOOD"
	IF RN =43 THEN U$ = "IT COMES UP SHORT"
	IF RN =44 THEN U$ = "IT ROLLS OUT"
	IF RN =45 THEN U$ = "IN AND OUT"
	IF RN =46 THEN U$ = "OFF THE FRONT OF THE IRON"
	IF RN =47 THEN U$ = "ON THE RIM...ROLLS OFF"
	IF RN =48 THEN U$ = "OFF THE FRONT OF THE RIM"
	IF RN =49 THEN U$ = "TOO SHORT"
	IF RN =50 THEN U$ = "TOO STRONG"
	  GOTO 1495

1475 U$ = "HE "
	IF RN <= 20 THEN U$ = U$ + "MISSES THE EASY BASKET!": GOTO 1495
	IF RN <= 40 THEN U$ = U$ + "JAMS IT TOO HARD!!": GOTO 1495
	IF RN <= 60 THEN U$ = U$ + "SLAMS IT OFF THE IRON...NO GOOD!": GOTO 1495
	IF RN <= 80 THEN U$ = U$ + "CAN'T GET IT DOWN!": GOTO 1495
	U$ = U$ + "BLOWS THE EASY BASKET!!": GOTO 1495

1480 'NOPASS
	U$ = AA$(P, B1(P, B)) + " "
	RN = INT(RND(1)* 56) + 1
	  IF RN = 1 THEN U$ = U$ + "LOOKS INSIDE"
	IF RN = 2 THEN U$ = U$ + "TRIES TO WORK FREE"
	IF RN = 3 THEN U$ = U$ + "SETS UP THE PLAY"
	IF RN = 4 THEN U$ = U$ + "LOOKS FOR AN OPENING"
	IF RN = 5 THEN U$ = U$ + "DRIBBLES AROUND HIS MAN"
	IF RN = 6 THEN U$ = U$ + "SIGNALS THE PLAY"
	IF RN = 7 THEN U$ = U$ + "IS IN CONTROL"
	IF RN = 8 THEN U$ = U$ + "IS IN POSSESSION"
	IF RN = 9 THEN U$ = U$ + "TRIES TO GET OPEN"
	IF RN = 10 THEN U$ = U$ + "YO-YO'S OUT TOP"
	IF RN = 11 THEN U$ = U$ + "GOES TO WORK
	IF RN = 12 THEN U$ = U$ + "WORKS OFF THE PICK"
	IF RN = 13 THEN U$ = U$ + "ON THE DRIBBLE"
	IF RN = 14 THEN U$ = U$ + "CUTS TO THE LEFT"
	IF RN = 15 THEN U$ = U$ + "CUTS TO THE RIGHT"
	IF RN = 16 THEN U$ = U$ + "WHEELS AND DEALS"
	IF RN = 17 THEN U$ = U$ + "SETS UP ON TOP"
	IF RN = 18 THEN U$ = U$ + "SLIDES RIGHT"
	IF RN = 19 THEN U$ = U$ + "SLIDES LEFT"
	IF RN = 20 THEN U$ = U$ + "GOES TO WORK"
	IF RN = 21 THEN U$ = U$ + "MOVES IT LEFT-SIDE"
	IF RN = 22 THEN U$ = U$ + "MOVES IT RIGHT-SIDE"
	IF RN = 23 THEN U$ = U$ + "REVERSES THE DRIBBLE"
	IF RN = 24 THEN U$ = U$ + "TRIES TO GET OPEN"
	IF RN = 25 THEN U$ = U$ + "DRIBBLES TO THE MIDDLE"
	IF RN = 26 THEN U$ = U$ + "FAKES THE PASS"
	IF RN = 27 THEN U$ = U$ + "SETS UP ON TOP"
	IF RN = 28 THEN U$ = U$ + "SLIDES RIGHT"
	IF RN = 29 THEN U$ = U$ + "SLIDES LEFT"
	IF RN = 30 THEN U$ = U$ + "DRIBBLES IT BEHIND THE BACK"
	IF RN = 31 THEN U$ = U$ + "FAKES LEFT...GOES RIGHT"
	IF RN = 32 THEN U$ = U$ + "FAKES RIGHT...GOES LEFT"
	IF RN = 33 THEN U$ = U$ + "SPINS HARD TO THE LEFT"
	IF RN = 34 THEN U$ = U$ + "SPINS HARD TO THE RIGHT"
	IF RN = 35 THEN U$ = U$ + "LEANS LEFT...GOES RIGHT"
	IF RN = 36 THEN U$ = U$ + "LEANS RIGHT...GOES LEFT"
	IF RN = 37 THEN U$ = U$ + "LEANS LEFT...CUTS RIGHT"
	IF RN = 38 THEN U$ = U$ + "LEANS RIGHT...CUTS LEFT"
	IF RN = 39 THEN U$ = U$ + "DOUBLE REVERSES HIS DRIBBLE"
	IF RN = 40 THEN U$ = U$ + "BACKS IN"
	IF RN = 41 THEN U$ = U$ + "LEANS FORWARD"
	IF RN = 42 THEN U$ = U$ + "CROSSES OVER...SPINS"
	IF RN = 43 THEN U$ = U$ + "CUTS LEFT"
	IF RN = 44 THEN U$ = U$ + "CUTS RIGHT"
	IF RN = 45 THEN U$ = U$ + "WITH THE HESITATION DRIBBLE":CALL PBP:U$="HE SPINS LEFT"
	IF RN = 46 THEN U$ = U$ + "WITH THE HESITATION DRIBBLE":CALL PBP:U$="HE SPINS RIGHT"
	IF RN = 47 THEN U$ = U$ + "WITH THE HESITATION DRIBBLE":CALL PBP:U$="HE CUTS LEFT"
	IF RN = 48 THEN U$ = U$ + "WITH THE HESITATION DRIBBLE":CALL PBP:U$="HE CUTS RIGHT"
	IF RN = 49 THEN U$ = U$ + "STUTTER STEPS":CALL PBP:U$="HE MOVES LEFT"
	IF RN = 50 THEN U$ = U$ + "MAINTAINS HIS DRIBBLE"
	IF RN = 51 THEN U$ = U$ + "FAKE SPINS LEFT...GOES RIGHT"
	IF RN = 52 THEN U$ = U$ + "FAKE SPINS RIGHT...GOES LEFT"
	IF RN = 53 THEN U$ = U$ + "PALMS THE BALL":CALL PBP:U$="HE TAKES IT AND SPINS"
	IF RN = 54 THEN U$ = U$ + "SHAKES AND BAKES"
	IF RN = 55 THEN U$ = U$ + "DRIBBLES WITH THE LEFT HAND"
	IF RN = 56 THEN U$ = U$ + "DRIBBLES WITH THE RIGHT HAND"
	GOTO 1495

1490 'PASS PB$=PREV HANDLER
	V$ = AA$(P, B1(P, B))
	RN = INT(RND(1)*60) + 1
	IF RN = 1 THEN U$ = PB$ + " TO " + V$
	IF RN = 2 THEN U$ = PB$ + " KICKS IT OUT": CALL PBP: U$ = V$ + " TAKES THE PASS"
	IF RN = 3 THEN U$ = PB$ + " FEEDS " + V$
	IF RN = 4 THEN U$ = PB$ + " PASSES TO " + V$
	IF RN = 4 THEN U$ = PB$ + " DISHES TO " + V$
	IF RN = 5 THEN U$ = PB$ + " GIVES IT TO " + V$
	IF RN = 6 THEN U$ = PB$ + " WITH A NICE GIVE TO " + V$
	IF RN = 7 THEN U$ = PB$ + " LOOKS": CALL PBP: U$ = "HE GETS IT TO " + V$
	IF RN = 8 THEN U$ = PB$ + " SENDS IT TO " + V$
	IF RN = 9 THEN U$ = PB$ + " TO " + V$
	IF RN =10 THEN U$ = PB$ + " GETS IT TO " + V$
	IF RN =11 THEN U$ = PB$ + " OVER TO " + V$
	IF RN =12 THEN U$ = PB$ + " ZIPS IT TO "+ V$
	IF RN =13 THEN U$ = PB$ + " FINDS " + V$
	IF RN =14 THEN U$ = PB$ + " LOOKS FOR " + V$
	IF RN =14 THEN U$ = PB$ + " THROWS IT TO " + V$
	IF RN =15 THEN U$ = PB$ + " GOES TO " + V$
	IF RN =16 THEN U$ = PB$ + " SETS UP " + V$
	IF RN =17 THEN U$ = PB$ + " OUT TO " + V$
	IF RN =18 THEN U$ = PB$ + " FLIPS IT TO " + V$
	IF RN = 19 THEN U$ = "BOUNCE PASS TO " + V$
	IF RN =20 THEN U$ = PB$ + " LEAVES IT FOR " + V$
	IF RN = 21 THEN U$ = PB$ + " LOOPS IT TO " + V$
	IF RN =22 THEN U$ = PB$ + " SHOVELS IT OVER TO " + V$
	IF RN = 23 THEN U$ = PB$ + " GIVES IT BACK TO " + V$
	IF RN =24 THEN U$ = PB$ + " FEEDS IT TO " + V$
	IF RN = 25 THEN U$ = PB$ + " GIVES IT OFF TO " + V$
	IF RN =26 THEN U$ = "PASSES TO " + V$
	IF RN = 27 THEN U$ = "DISHES TO " + V$
	IF RN =28 THEN U$ = "GIVES TO " + V$
	IF RN = 29 THEN U$ = "OVER TO " + V$
	IF RN =30 THEN U$ = "SENDS IT BACK TO " + V$
	IF RN=31 THEN U$="NO-LOOK PASS TO "+V$
	IF RN=32 THEN U$="NO-LOOK BOUNCE PASS TO " + V$
	IF RN=33 THEN U$="BEHIND THE BACK TO " + V$
	IF RN=34 THEN U$=PB$+" SWINGS IT TO "+V$
	IF RN=35 THEN U$=PB$+" FIRES A PASS TO " + V$
	IF RN=36 THEN U$=PB$+" SNAPS A PASS TO " + V$
	IF RN=37 THEN U$=PB$+" SWINGS A PASS TO "+V$
	IF RN=38 THEN U$="TWO-HANDED PASS TO " + V$
	IF RN=39 THEN U$="WRAP AROUND PASS TO " + V$
	IF RN=40 THEN U$="OVER THE SHOULDER PASS TO "+V$
	IF RN=41 THEN U$="BACKHAND PASS TO " + V$
	IF RN=42 THEN U$="BACKHAND DISH TO " + V$
	IF RN=43 THEN U$="PASS CONNECTED TO "+V$
	IF RN=44 THEN U$=PB$+" WIRES IT TO "+V$
	IF RN=45 THEN U$=PB$+" WIRES A PASS TO " + V$
	IF RN=46 THEN U$=PB$+" SNAPS A PASS TO " + V$
	IF RN=47 THEN U$=PB$+" FAKES..PASSES TO "+V$
	IF RN=48 THEN U$=PB$+" SHUFFLES IT TO " + V$
	IF RN=49 THEN U$=PB$+" SLINGS IT TO " + V$
	IF RN=50 THEN U$=PB$+" FLIPS IT TO "+V$
	IF RN=51 THEN U$=PB$+" WHIPS IT OVER TO " + V$
	IF RN=52 THEN U$=PB$+" SLINGS A BOUNCE PASS TO " + V$
	IF RN=53 THEN U$=PB$+" SHOVELS IT TO "+V$
	IF RN=54 THEN U$=PB$+" PUMP FAKES A SHOT":CALL PBP:U$="HE SWINGS IT TO "+V$
	IF RN=55 THEN U$=PB$+" PUMP FAKES A SHOT":CALL PBP:U$="HE BOUNCES IT TO " + V$
	IF RN=56 THEN U$=PB$+" WITH A FOOT FAKE":CALL PBP:U$="HE SPINS AND DUMPS IT TO " + V$
	IF RN=57 THEN U$=PB$+" CUTS ACROSS THE LANE":CALL PBP:U$="HE DISHES INSIDE TO "+V$
	IF RN=58 THEN U$=PB$+" DRIVES THE BASELINE":CALL PBP:U$="DISHES UNDERNEATH TO " + V$
	IF RN=59 THEN U$=PB$+" FAKES RIGHT...CUTS LEFT":CALL PBP:U$="SHUFFLES IT TO " + V$
	IF RN=60 THEN U$=PB$+" HEAD FAKES":CALL PBP:U$="HE PUSHES IT TO "+V$

1495 END SUB
	

SUB PBP ()
	I$=GetKeyPress$
	IF UCASE$(I$) = "Q" THEN END

2245 IF U6 = 0 OR PB% = 1 THEN 2247
	WHILE LEN(U$)<38
		U$=U$+" "
	WEND
	U$=LEFT$(U$,38)
	LOCATE 8, 1
	IF NL% = 1 THEN A1$ = U$: vg%(1) = TR%(p, 0): vh%(1) = TR%(p, 1)
	IF NL% = 2 THEN B1$ = U$: vg%(2) = TR%(p, 0): vh%(2) = TR%(p, 1)
	IF NL% = 3 THEN C1$ = U$: vg%(3) = TR%(p, 0): vh%(3) = TR%(p, 1)
	IF NL% = 4 THEN D1$ = U$: vg%(4) = TR%(p, 0): vh%(4) = TR%(p, 1)
	IF NL% = 5 THEN E1$ = U$: vg%(5) = TR%(p, 0): vh%(5) = TR%(p, 1)
	IF NL% = 6 THEN F1$ = U$: vg%(6) = TR%(p, 0): vh%(6) = TR%(p, 1)
	IF NL% = 7 THEN G1$ = U$: vg%(7) = TR%(p, 0): vh%(7) = TR%(p, 1)
	IF NL% = 8 THEN H1$ = U$: vg%(8) = TR%(p, 0): vh%(8) = TR%(p, 1)
	IF NL% > 8 THEN
		A1$ = B1$
		B1$ = C1$
		C1$ = D1$
		D1$ = E1$
		E1$ = F1$
		F1$ = G1$
		G1$ = H1$
		H1$ = U$
		FOR I = 1 TO 7
	vg%(I) = vg%(I + 1)
	vh%(I) = vh%(I + 1)
		NEXT
		vg%(8) = TR%(p, 0)
		vh%(8) = TR%(p, 1)
	END IF
	  NL% = NL% + 1
	COLOR vg%(1), vh%(1): PRINT A1$
	COLOR vg%(2), vh%(2): PRINT B1$
	COLOR vg%(3), vh%(3): PRINT C1$
	COLOR vg%(4), vh%(4): PRINT D1$
	COLOR vg%(5), vh%(5): PRINT E1$
	COLOR vg%(6), vh%(6): PRINT F1$
	COLOR vg%(7), vh%(7): PRINT G1$
	COLOR vg%(8), vh%(8): PRINT H1$
	COLOR 15, 0
	U! = TIMER: WHILE TIMER < U! + U6: WEND

2247 REM
END SUB

SUB SHOTSTRING ()
	U$ = U$ + STR$(INT(F + .5)) + "*"
END SUB

SUB TEAMSETUP ()
'TEAM SETUP INITIALIZES THE TEAM DATA FILES, LEAGUE ADJUSTMENTS
'AND SETS UP THE PLAYER DATA
	  F5%(P9, 5) = L%(P9, 1): IF F5%(P9, 5) = 0 THEN F5%(P9, 5) = 4
	F5%(P9, 6) = L%(P9, 2): IF F5%(P9, 6) > 20 THEN F5%(P9, 6) = F5%(P9, 6) - 100
	F5%(P9, 7) = L%(P9, 3): IF F5%(P9, 7) > 20 THEN F5%(P9, 7) = F5%(P9, 7) - 100
	F5%(P9, 4) = L%(P9, 0): : IF F5%(P9, 4) > 20 THEN F5%(P9, 4) = F5%(P9, 4) - 100
	F5%(P9, 8) = L%(P9, 4)
	IF F5%(P9, 8) <> 99 THEN F5%(P9, 4) = 0: F5%(P9, 5) = 4: F5%(P9, 6) = 0: F5%(P9, 7) = 0
	FOR I = 0 TO 13
	A(P9, I, 16) = C(P9, I, 6)
	IF A(P9, I, 16) = 0 THEN A(P9, I, 16) = 6
	A(P9, I, 17) = C(P9, I, 5)
	IF A(P9, I, 17) = 0 THEN A(P9, I, 17) = 40
	A(P9, I, 19) = C(P9, I, 3)
	A(P9, I, 20) = C(P9, I, 2)
	A(P9, I, 21) = C(P9, I, 4)
	A(P9, I, 2) = A(P9, I, 2)
	NEXT I
	F5%(P9, 2) = V1%(P9)
	IF F5%(P9, 2) > 20 THEN F5%(P9, 2) = F5%(P9, 2) - 100
	F5%(P9, 3) = V2%(P9)
	IF F5%(P9, 3) > 20 THEN F5%(P9, 3) = F5%(P9, 3) - 100
END SUB

SUB TICKER ()

2850 '*** TICKER ***
	IF AP=1 AND U5=2 THEN 2884
	COLOR 14,0:CLS
	RN=INT(RND(1)*100)+1
	IF RN<=50 AND HT%=1 AND G9=0 THEN LOCATE ,23:PRINT "PRUDENTIAL AT THE HALF SCOREBOARD":GOTO 2851
	IF RN>50 AND HT%=1 AND G9=0 THEN LOCATE ,28:PRINT "RED MAN HALF TIME REPORT":GOTO 2851
	IF HT%=1 AND RN<=50 THEN LOCATE ,29:PRINT "TOYOTA HALFTIME REPORT":GOTO 2851
	IF HT%=1 AND RN>50 THEN LOCATE,29:PRINT "HONDA HALFTIME REPORT":GOTO 2851
	IF EG%=1 AND G9=0 THEN LOCATE ,27:PRINT "CHEVROLET FINAL SCOREBOARD":GOTO 2851
	IF EG%=1 AND RN<=33 THEN LOCATE ,27:PRINT "USA TODAY FINAL SCOREBOARD":GOTO 2851
	IF EG%=1 AND RN>33 AND RN<=67 THEN LOCATE ,24:PRINT "FEDERAL EXPRESS FINAL SCOREBOARD":GOTO 2851
	IF EG%=1 AND RN>67 THEN LOCATE ,23:PRINT "ESPN SPORTSCENTER FINAL SCOREBOARD":GOTO 2851
	IF HT%=0 THEN LOCATE ,30:PRINT "LANCE HAFFNER GAMES SCOREBOARD":GOTO 2851

2851  COLOR 15:IF TMT=0 THEN LOCATE 10,28:PRINT "NO OTHER GAMES SCHEDULED":GOTO 2883
	IF H=1 AND T<1200 AND T>=960 THEN TE=1
	IF H=1 AND T<960 AND T>=720 THEN TE=2
	IF H=1 AND T<720 AND T>=480 THEN TE=3
	IF H=1 AND T<480 AND T>=240 THEN TE=4
	IF H=1 AND T<240 AND T>=120 THEN TE=5
	IF H=1 AND T<120 THEN TE=6
	IF H=2 AND T<1200 AND T>=960 THEN TE=9
	IF H=2 AND T<960 AND T>=720 THEN TE=10
	IF H=2 AND T<720 AND T>=480 THEN TE=11
	IF H=2 AND T<480 AND T>=240 THEN TE=12
	IF H=2 AND T<240 AND T>=120 THEN TE=13
	IF H=2 AND T<120 THEN TE=14
	IF H=3 AND T<720 AND T>=480 THEN TE=15
	IF H=3 AND T<480 AND T>=240 THEN TE=16
	IF H=3 AND T<240 THEN TE=17
	IF HT%=1 THEN TE=8
	IF LEFT$(SX$(1,0),3)="XXX" THEN 2852
	LOCATE 2,1:X=1:GOSUB 2885:PRINT LEFT$(SX$(1,0),13);:LOCATE ,15
	PRINT USING "### ";SX%(1,0,TS%);:PRINT R$(TS%)
	PRINT LEFT$(SX$(1,1),13);:LOCATE ,15:PRINT USING "### #";SX%(1,1,TS%)

2852 IF LEFT$(SX$(2,0),3)="XXX" THEN 2853
	LOCATE 5,1:X=2:GOSUB 2885:PRINT LEFT$(SX$(2,0),13);:LOCATE ,15:PRINT USING "### ";SX%(2,0,TS%);:PRINT R$(TS%)
	PRINT LEFT$(SX$(2,1),13);:LOCATE ,15:PRINT USING "### #";SX%(2,1,TS%)

2853 IF LEFT$(SX$(3,0),3)="XXX" THEN 2854
	LOCATE 8,1:X=3:GOSUB 2885:PRINT LEFT$(SX$(3,0),13);:LOCATE ,15:PRINT USING "### ";SX%(3,0,TS%);:PRINT R$(TS%)
	PRINT LEFT$(SX$(3,1),13);:LOCATE ,15:PRINT USING "### #";SX%(3,1,TS%)

2854  IF LEFT$(SX$(4,0),3)="XXX" THEN 2855
	LOCATE 11,1:X=4:GOSUB 2885:PRINT LEFT$(SX$(4,0),13);:LOCATE ,15:PRINT USING "### ";SX%(4,0,TS%);:PRINT R$(TS%)
	PRINT LEFT$(SX$(4,1),13);:LOCATE ,15:PRINT USING "### #";SX%(4,1,TS%)

2855  IF LEFT$(SX$(5,0),3)="XXX" THEN 2856
	LOCATE 14,1:X=5:GOSUB 2885:PRINT LEFT$(SX$(5,0),13);:LOCATE ,15:PRINT USING "### ";SX%(5,0,TS%);:PRINT R$(TS%)
	PRINT LEFT$(SX$(5,1),13);:LOCATE ,15:PRINT USING "### #";SX%(5,1,TS%)

2856  IF LEFT$(SX$(6,0),3)="XXX" THEN 2857
	LOCATE 17,1:X=6:GOSUB 2885:PRINT LEFT$(SX$(6,0),13);:LOCATE ,15:PRINT USING "### ";SX%(6,0,TS%);:PRINT R$(TS%)
	PRINT LEFT$(SX$(6,1),13);:LOCATE ,15:PRINT USING "### #";SX%(6,1,TS%)

2857  IF LEFT$(SX$(7,0),3)="XXX" THEN 2858
	LOCATE 20,1:X=7:GOSUB 2885:PRINT LEFT$(SX$(7,0),13);:LOCATE ,15:PRINT USING "### ";SX%(7,0,TS%);:PRINT R$(TS%)
	PRINT LEFT$(SX$(7,1),13);:LOCATE ,15:PRINT USING "### #";SX%(7,1,TS%)

2858  IF LEFT$(SX$(8,0),3)="XXX" THEN 2859
	LOCATE 23,1:X=8:GOSUB 2885:PRINT LEFT$(SX$(8,0),13);:LOCATE ,15:PRINT USING "### ";SX%(8,0,TS%);:PRINT R$(TS%)
	PRINT LEFT$(SX$(8,1),13);:LOCATE ,15:PRINT USING "### #";SX%(8,1,TS%);

2859  IF LEFT$(SX$(9,0),3)="XXX" THEN 2860
	LOCATE 2,21:X=9:GOSUB 2885:PRINT LEFT$(SX$(9,0),13);:LOCATE ,35:PRINT USING "### ";SX%(9,0,TS%);:PRINT R$(TS%)
	LOCATE ,21:PRINT LEFT$(SX$(9,1),13);:LOCATE ,35:PRINT USING "### #";SX%(9,1,TS%)

2860  IF LEFT$(SX$(10,0),3)="XXX" THEN 2861
	LOCATE 5,21:X=10:GOSUB 2885:PRINT LEFT$(SX$(10,0),13);:LOCATE ,35:PRINT USING "### ";SX%(10,0,TS%);:PRINT R$(TS%)
	LOCATE ,21:PRINT LEFT$(SX$(10,1),13);:LOCATE ,35:PRINT USING "### #";SX%(10,1,TS%)

2861  IF LEFT$(SX$(11,0),3)="XXX" THEN 2862
	LOCATE 8,21:X=11:GOSUB 2885:PRINT LEFT$(SX$(11,0),13);:LOCATE ,35:PRINT USING "### ";SX%(11,0,TS%);:PRINT R$(TS%)
	LOCATE ,21:PRINT LEFT$(SX$(11,1),13);:LOCATE ,35:PRINT USING "### #";SX%(11,1,TS%)

2862  IF LEFT$(SX$(12,0),3)="XXX" THEN 2863
	LOCATE 11,21:X=12:GOSUB 2885:PRINT LEFT$(SX$(12,0),13);:LOCATE ,35:PRINT USING "### ";SX%(12,0,TS%);:PRINT R$(TS%)
	LOCATE ,21:PRINT LEFT$(SX$(12,1),13);:LOCATE ,35:PRINT USING "### #";SX%(12,1,TS%)

2863  IF LEFT$(SX$(13,0),3)="XXX" THEN 2864
	LOCATE 14,21:X=13:GOSUB 2885:PRINT LEFT$(SX$(13,0),13);:LOCATE ,35:PRINT USING "### ";SX%(13,0,TS%);:PRINT R$(TS%)
	LOCATE ,21:PRINT LEFT$(SX$(13,1),13);:LOCATE ,35:PRINT USING "### #";SX%(13,1,TS%)

2864  IF LEFT$(SX$(14,0),3)="XXX" THEN 2865
	LOCATE 17,21:X=14:GOSUB 2885:PRINT LEFT$(SX$(14,0),13);:LOCATE ,35:PRINT USING "### ";SX%(14,0,TS%);:PRINT R$(TS%)
	LOCATE ,21:PRINT LEFT$(SX$(14,1),13);:LOCATE ,35:PRINT USING "### #";SX%(14,1,TS%)

2865  IF LEFT$(SX$(15,0),3)="XXX" THEN 2866
	LOCATE 20,21:X=15:GOSUB 2885:PRINT LEFT$(SX$(15,0),13);:LOCATE ,35:PRINT USING "### ";SX%(15,0,TS%);:PRINT R$(TS%)
	LOCATE ,21:PRINT LEFT$(SX$(15,1),13);:LOCATE ,35:PRINT USING "### #";SX%(15,1,TS%)

2866  IF LEFT$(SX$(16,0),3)="XXX" THEN 2867
	LOCATE 23,21:X=16:GOSUB 2885:PRINT LEFT$(SX$(16,0),13);:LOCATE ,35:PRINT USING "### ";SX%(16,0,TS%);:PRINT R$(TS%)
	LOCATE ,21:PRINT LEFT$(SX$(16,1),13);:LOCATE ,35:PRINT USING "### #";SX%(16,1,TS%);

2867  IF LEFT$(SX$(17,0),3)="XXX" THEN 2868
	LOCATE 2,41:X=17:GOSUB 2885:PRINT LEFT$(SX$(17,0),13);:LOCATE ,55:PRINT USING "### ";SX%(17,0,TS%);:PRINT R$(TS%)
	LOCATE ,41:PRINT LEFT$(SX$(17,1),13);:LOCATE ,55:PRINT USING "### #";SX%(17,1,TS%)

2868  IF LEFT$(SX$(18,0),3)="XXX" THEN 2869
	LOCATE 5,41:X=18:GOSUB 2885:PRINT LEFT$(SX$(18,0),13);:LOCATE ,55:PRINT USING "### ";SX%(18,0,TS%);:PRINT R$(TS%)
	LOCATE ,41:PRINT LEFT$(SX$(18,1),13);:LOCATE ,55:PRINT USING "### #";SX%(18,1,TS%)

2869  IF LEFT$(SX$(19,0),3)="XXX" THEN 2870
	LOCATE 8,41:X=19:GOSUB 2885:PRINT LEFT$(SX$(19,0),13);:LOCATE ,55:PRINT USING "### ";SX%(19,0,TS%);:PRINT R$(TS%)
	LOCATE ,41:PRINT LEFT$(SX$(19,1),13);:LOCATE ,55:PRINT USING "### #";SX%(19,1,TS%)

2870 IF LEFT$(SX$(20,0),3)="XXX" THEN 2871
	LOCATE 11,41:X=20:GOSUB 2885:PRINT LEFT$(SX$(20,0),13);:LOCATE ,55:PRINT USING "### ";SX%(20,0,TS%);:PRINT R$(TS%)
	LOCATE ,41:PRINT LEFT$(SX$(20,1),13);:LOCATE ,55:PRINT USING "### #";SX%(20,1,TS%)

2871 IF LEFT$(SX$(21,0),3)="XXX" THEN 2872
	LOCATE 14,41:X=21:GOSUB 2885:PRINT LEFT$(SX$(21,0),13);:LOCATE ,55:PRINT USING "### ";SX%(21,0,TS%);:PRINT R$(TS%)
	LOCATE ,41:PRINT LEFT$(SX$(21,1),13);:LOCATE ,55:PRINT USING "### #";SX%(21,1,TS%)

2872 IF LEFT$(SX$(22,0),3)="XXX" THEN 2873
	LOCATE 17,41:X=22:GOSUB 2885:PRINT LEFT$(SX$(22,0),13);:LOCATE ,55:PRINT USING "### ";SX%(22,0,TS%);:PRINT R$(TS%)
	LOCATE ,41:PRINT LEFT$(SX$(22,1),13);:LOCATE ,55:PRINT USING "### #";SX%(22,1,TS%)

2873 IF LEFT$(SX$(23,0),3)="XXX" THEN 2874
	LOCATE 20,41:X=23:GOSUB 2885:PRINT LEFT$(SX$(23,0),13);:LOCATE ,55:PRINT USING "### ";SX%(23,0,TS%);:PRINT R$(TS%)
	LOCATE ,41:PRINT LEFT$(SX$(23,1),13);:LOCATE ,55:PRINT USING "### #";SX%(23,1,TS%)

2874 IF LEFT$(SX$(24,0),3)="XXX" THEN 2875
	LOCATE 23,41:X=24:GOSUB 2885:PRINT LEFT$(SX$(24,0),13);:LOCATE ,55:PRINT USING "### ";SX%(24,0,TS%);:PRINT R$(TS%)
	LOCATE ,41:PRINT LEFT$(SX$(24,1),13);:LOCATE ,55:PRINT USING "### #";SX%(24,1,TS%);

2875 IF LEFT$(SX$(25,0),3)="XXX" THEN 2876
	LOCATE 2,61:X=25:GOSUB 2885:PRINT LEFT$(SX$(25,0),13);:LOCATE ,75:PRINT USING "### ";SX%(25,0,TS%);:PRINT R$(TS%)
	LOCATE ,61:PRINT LEFT$(SX$(25,1),13);:LOCATE ,75:PRINT USING "### #";SX%(25,1,TS%)

2876 IF LEFT$(SX$(26,0),3)="XXX" THEN 2877
	LOCATE 5,61:X=26:GOSUB 2885:PRINT LEFT$(SX$(26,0),13);:LOCATE ,75:PRINT USING "### ";SX%(26,0,TS%);:PRINT R$(TS%)
	LOCATE ,61:PRINT LEFT$(SX$(26,1),13);:LOCATE ,75:PRINT USING "### #";SX%(26,1,TS%)

2877 IF LEFT$(SX$(27,0),3)="XXX" THEN 2878
	LOCATE 8,61:X=27:GOSUB 2885:PRINT LEFT$(SX$(27,0),13);:LOCATE ,75:PRINT USING "### ";SX%(27,0,TS%);:PRINT R$(TS%)
	LOCATE ,61:PRINT LEFT$(SX$(27,1),13);:LOCATE ,75:PRINT USING "### #";SX%(27,1,TS%)

2878 IF LEFT$(SX$(28,0),3)="XXX" THEN 2879
	LOCATE 11,61:X=28:GOSUB 2885:PRINT LEFT$(SX$(28,0),13);:LOCATE ,75:PRINT USING "### ";SX%(28,0,TS%);:PRINT R$(TS%)
	LOCATE ,61:PRINT LEFT$(SX$(28,1),13);:LOCATE ,75:PRINT USING "### #";SX%(28,1,TS%)

2879 IF LEFT$(SX$(29,0),3)="XXX" THEN 2880
	LOCATE 14,61:X=29:GOSUB 2885:PRINT LEFT$(SX$(29,0),13);:LOCATE ,75:PRINT USING "### ";SX%(29,0,TS%);:PRINT R$(TS%)
	LOCATE ,61:PRINT LEFT$(SX$(29,1),13);:LOCATE ,75:PRINT USING "### #";SX%(29,1,TS%)

2880 IF LEFT$(SX$(30,0),3)="XXX" THEN 2881
	LOCATE 17,61:X=30:GOSUB 2885:PRINT LEFT$(SX$(30,0),13);:LOCATE ,75:PRINT USING "### ";SX%(30,0,TS%);:PRINT R$(TS%)
	LOCATE ,61:PRINT LEFT$(SX$(30,1),13);:LOCATE ,75:PRINT USING "### #";SX%(30,1,TS%)

2881 IF LEFT$(SX$(31,0),3)="XXX" THEN 2882
	LOCATE 20,61:X=31:GOSUB 2885:PRINT LEFT$(SX$(31,0),13);:LOCATE ,75:PRINT USING "### ";SX%(31,0,TS%);:PRINT R$(TS%)
	LOCATE ,61:PRINT LEFT$(SX$(31,1),13);:LOCATE ,75:PRINT USING "### #";SX%(31,1,TS%)

2882 IF LEFT$(SX$(32,0),3)="XXX" THEN 2883
	LOCATE 23,61:X=32:GOSUB 2885:PRINT LEFT$(SX$(32,0),13);:LOCATE ,75:PRINT USING "### ";SX%(32,0,TS%);:PRINT R$(TS%)
	LOCATE ,61:PRINT LEFT$(SX$(32,1),13);:LOCATE ,75:PRINT USING "### #";SX%(32,1,TS%);
2883 I$ = GetKeyPress$
	GOTO 2884

2885 TS%=TE+(ST%-ST%(X))*3
	IF TS%<0 THEN TS%=0
	IF TS%>14 THEN TS%=14
	IF EG%=1 THEN TS%=14
	RETURN

2884 END SUB

SUB PRINTBOX

8900 IF N<>2 THEN LPRINT "@ ";B$(N):LPRINT
	FOR I = 0 TO 1
	LPRINT B$(I) TAB(17) STR$(S(I,1)) TAB(20) STR$(S(I,2));
	IF S(0,1)+S(0,2)=S(1,1)+S(1,2) THEN LPRINT TAB(23) STR$(S(I,3));
	IF S(0,1)+S(0,2)<>S(1,1)+S(1,2) THEN LPRINT TAB(23) "- ";S(I,0):GOTO 8913
	IF S(0,1)+S(0,2)+S(0,3)=S(1,1)+S(1,2)+S(1,3) THEN LPRINT TAB(26) STR$(S(I,4));
	IF S(0,1)+S(0,2)+S(0,3)<>S(1,1)+S(1,2)+S(1,3) THEN LPRINT TAB(26) "- ";S(I,0):GOTO 8913
	IF S(0,1)+S(0,2)+S(0,3)+S(0,4)=S(1,1)+S(1,2)+S(1,3)+S(1,4) THEN LPRINT TAB(29) STR$(S(I,5));
	IF S(0,1)+S(0,2)+S(0,3)+S(0,4)<>S(1,1)+S(1,2)+S(1,3)+S(1,4) THEN LPRINT TAB(29) "- "; STR$(S(I,0)):GOTO 8913
	IF S(0,1)+S(0,2)+S(0,3)+S(0,4)+S(0,5)=S(1,1)+S(1,2)+S(1,3)+S(1,4)+S(1,5) THEN LPRINT TAB(32) STR$(S(I,6));
	IF S(0,1)+S(0,2)+S(0,3)+S(0,4)+S(0,5)<>S(1,1)+S(1,2)+S(1,3)+S(1,4)+S(1,5) THEN LPRINT TAB(32) "- ";STR$(S(I,0)):GOTO 8913
	IF S(0,1)+S(0,2)+S(0,3)+S(0,4)+S(0,5)+S(0,6)=S(1,1)+S(1,2)+S(1,3)+S(1,4)+S(1,5)+S(1,6) THEN LPRINT TAB(35) STR$(S(I,7)) TAB(38) STR$(S(I,0)):GOTO 8913
	IF S(0,1)+S(0,2)+S(0,3)+S(0,4)+S(0,5)+S(0,6)<>S(1,1)+S(1,2)+S(1,3)+S(1,4)+S(1,5)+S(1,6) THEN LPRINT TAB(35) "- ";STR$(S(I,0)):GOTO 8913

8913 NEXT I
	FOR I=0 TO 1:LPRINT:LPRINT B$(I)
	LPRINT "NAME" TAB(14) " MIN   FG- A 3FG- A  FT- A ORB  RB  PT  F   A   B   S  TO":FOR I1=0 TO 13
	IF AA$(I,I1)="XXX" THEN 8920
	LPRINT AA$(I,I1); TAB(14);
	IF ZZ(I,I1)=0 THEN LPRINT TAB(15) "DNP";:GOTO 8918
	LPRINT USING "##";INT(ZZ(I,I1)/60);:LPRINT ":";:IF ZZ(I,I1)-INT(ZZ(I,I1)/60)*60>9 THEN LPRINT USING "##";ZZ(I,I1)-INT(ZZ(I,I1)/60)*60; ELSE LPRINT "0";:LPRINT USING "#";ZZ(I,I1)-INT(ZZ(I,I1)/60)*60;

8918 LPRINT TAB(21);:LPRINT USING "##";A(I,I1,8);:LPRINT "-";:LPRINT USING"##";A(I,I1,7);:LPRINT USING"  ##";W%(I,I1,0);:LPRINT"-";:LPRINT USING "##";W%(I,I1,1);:LPRINT USING"  ##";A(I,I1,10);:LPRINT"-";:LPRINT USING"##";A(I,I1,9);
	LPRINT USING "  ##  ## ###  #  ##  ##  ##  ##  ##  ##";A(I,I1,24),A(I,I1,11),A(I,I1,8)*2+A(I,I1,10)+W%(I,I1,0),A(I,I1,12),A(I,I1,14),A(I,I1,15),A(I,I1,13),A(I,I1,23)
	V9(0)=V9(0)+A(I,I1,8):V9(1)=V9(1)+A(I,I1,7):V9(2)=V9(2)+A(I,I1,10):V9(3)=V9(3)+A(I,I1,9):V9(4)=V9(4)+A(I,I1,11):V9(5)=V9(5)+(A(I,I1,8)*2)+A(I,I1,10)+W%(I,I1,0):V9(13)=V9(13)+W%(I,I1,0):V9(14)=V9(14)+W%(I,I1,1)
	V9(6)=V9(6)+A(I,I1,12)
	V9(7)=V9(7)+A(I,I1,14):V9(8)=V9(8)+A(I,I1,15):V9(9)=V9(9)+A(I,I1,13):V9(11)=V9(11)+A(I,I1,24):V9(12)=V9(12)+A(I,I1,23)
	V9(10)=V9(10)+ZZ(I,I1)

8920 NEXT I1:IF V9(3)=0 THEN V9(3)=1
	LPRINT:LPRINT "TOTALS"; TAB(14) INT(V9(10)/60) TAB(21);:LPRINT USING"##";V9(0);:LPRINT "-";:LPRINT USING "###";V9(1);
	LPRINT TAB(28) USING "##";V9(13);:LPRINT "-";:LPRINT USING "##";V9(14);
	LPRINT TAB(35) USING "##";V9(2);:LPRINT "-";:LPRINT USING "##";V9(3);
	LPRINT TAB(42) USING "##  ## ### ##  ##  ##  ##  ##";V9(11),V9(4),V9(5),V9(6),V9(7),V9(8),V9(9),V9(12)
	LPRINT TAB(22) INT(((V9(0)/V9(1))*100)+.5);"%";TAB(35) INT(((V9(2)/V9(3))*100)+.5);"%":LPRINT:LPRINT"TOTAL TURNOVERS -"T0(I):LPRINT"TOTAL REBOUNDS  -"R3(I):FOR I2=0 TO 14:V9(I2)=0:NEXT I2
	NEXT I
	LPRINT CHR$(12)
END SUB

SUB FILEBOX
	IF AP = 1 THEN
		NM$ = "BOX" + MID$(STR$(AP%(0) + AP%(2)), 2, LEN(STR$(AP%(0) + AP%(2))))
		GOTO 8951
	END IF
	CLS
	INPUT "ENTER FILENAME TO SAVE GAME SUMMARY UNDER "; NM$: NM$ = NM$ + ".SPC"

8951 OPEN P$(1) + NM$ FOR OUTPUT AS #2
	IF N<>2 THEN PRINT #2, "@ ";B$(N):PRINT #2,
	FOR I=0 TO 1
	PRINT #2, B$(I) TAB(17) STR$(S(I,1)) TAB(20) STR$(S(I,2));
	IF S(0,1)+S(0,2)=S(1,1)+S(1,2) THEN PRINT #2, TAB(23) STR$(S(I,3));
	IF S(0,1)+S(0,2)<>S(1,1)+S(1,2) THEN PRINT #2, TAB(23) "- ";S(I,0):GOTO 8963
	IF S(0,1)+S(0,2)+S(0,3)=S(1,1)+S(1,2)+S(1,3) THEN PRINT #2, TAB(26) STR$(S(I,4));
	IF S(0,1)+S(0,2)+S(0,3)<>S(1,1)+S(1,2)+S(1,3) THEN PRINT #2, TAB(26) "- ";S(I,0):GOTO 8963
	IF S(0,1)+S(0,2)+S(0,3)+S(0,4)=S(1,1)+S(1,2)+S(1,3)+S(1,4) THEN PRINT #2, TAB(29) STR$(S(I,5));
	IF S(0,1)+S(0,2)+S(0,3)+S(0,4)<>S(1,1)+S(1,2)+S(1,3)+S(1,4) THEN PRINT #2, TAB(29) "- "; STR$(S(I,0)):GOTO 8963
	IF S(0,1)+S(0,2)+S(0,3)+S(0,4)+S(0,5)=S(1,1)+S(1,2)+S(1,3)+S(1,4)+S(1,5) THEN PRINT #2, TAB(32) STR$(S(I,6));
	IF S(0,1)+S(0,2)+S(0,3)+S(0,4)+S(0,5)<>S(1,1)+S(1,2)+S(1,3)+S(1,4)+S(1,5) THEN PRINT #2, TAB(32) "- ";STR$(S(I,0)):GOTO 8963
	IF S(0,1)+S(0,2)+S(0,3)+S(0,4)+S(0,5)+S(0,6)=S(1,1)+S(1,2)+S(1,3)+S(1,4)+S(1,5)+S(1,6) THEN PRINT #2, TAB(35) STR$(S(I,7)) TAB(38) STR$(S(I,0)):GOTO 8963
	IF S(0,1)+S(0,2)+S(0,3)+S(0,4)+S(0,5)+S(0,6)<>S(1,1)+S(1,2)+S(1,3)+S(1,4)+S(1,5)+S(1,6) THEN PRINT #2, TAB(35) "- ";STR$(S(I,0)):GOTO 8963

8963 NEXT I
	FOR I=0 TO 1:PRINT #2,:PRINT #2, B$(I)
	PRINT #2, "NAME" TAB(14) " MIN   FG- A 3FG- A  FT- A ORB  RB  PT  F   A   B   S  TO"
	FOR I1=0 TO 13
	IF AA$(I,I1)="XXX" THEN 8970
	PRINT #2, AA$(I,I1); TAB(14);
	IF ZZ(I,I1)=0 THEN PRINT #2, TAB(15) "DNP";:GOTO 8968
	PRINT #2, USING "##";INT(ZZ(I,I1)/60);:PRINT #2, ":";
	IF ZZ(I,I1)-INT(ZZ(I,I1)/60)*60>9 THEN PRINT #2, USING "##";ZZ(I,I1)-INT(ZZ(I,I1)/60)*60; ELSE PRINT #2, "0";:PRINT #2, USING "#";ZZ(I,I1)-INT(ZZ(I,I1)/60)*60;

8968 PRINT #2, TAB(21);:PRINT #2, USING "##";A(I,I1,8);
	PRINT #2, "-";:PRINT #2, USING"##";A(I,I1,7);:PRINT #2, USING"  ##";W%(I,I1,0);:PRINT #2,"-";:PRINT #2, USING "##";W%(I,I1,1);:PRINT #2, USING"  ##";A(I,I1,10);:PRINT #2,"-";:PRINT #2, USING"##";A(I,I1,9);
	PRINT #2, USING "  ##  ## ###  #  ##  ##  ##  ##  ##  ##";A(I,I1,24),A(I,I1,11),A(I,I1,8)*2+A(I,I1,10)+W%(I,I1,0),A(I,I1,12),A(I,I1,14),A(I,I1,15),A(I,I1,13),A(I,I1,23)
	V9(0)=V9(0)+A(I,I1,8):V9(1)=V9(1)+A(I,I1,7):V9(2)=V9(2)+A(I,I1,10):V9(3)=V9(3)+A(I,I1,9):V9(4)=V9(4)+A(I,I1,11):V9(5)=V9(5)+(A(I,I1,8)*2)+A(I,I1,10)+W%(I,I1,0):V9(13)=V9(13)+W%(I,I1,0):V9(14)=V9(14)+W%(I,I1,1)
	V9(6)=V9(6)+A(I,I1,12)
	V9(7)=V9(7)+A(I,I1,14):V9(8)=V9(8)+A(I,I1,15):V9(9)=V9(9)+A(I,I1,13):V9(11)=V9(11)+A(I,I1,24):V9(12)=V9(12)+A(I,I1,23)
	V9(10)=V9(10)+ZZ(I,I1)

8970 NEXT I1:IF V9(3)=0 THEN V9(3)=1
	PRINT #2,:PRINT #2, "TOTALS"; TAB(14) INT(V9(10)/60) TAB(21);:PRINT #2, USING"##";V9(0);:PRINT #2, "-";:PRINT #2, USING "###";V9(1);
	PRINT #2, TAB(28) USING "##";V9(13);:PRINT #2, "-";:PRINT #2, USING "##";V9(14);
	PRINT #2, TAB(35) USING "##";V9(2);:PRINT #2, "-";:PRINT #2, USING "##";V9(3);
	PRINT #2, TAB(42) USING "##  ## ### ##  ##  ##  ##  ##";V9(11),V9(4),V9(5),V9(6),V9(7),V9(8),V9(9),V9(12)
	PRINT #2, TAB(22) INT(((V9(0)/V9(1))*100)+.5);"%";TAB(35) INT(((V9(2)/V9(3))*100)+.5);"%":PRINT #2,:PRINT #2,"TOTAL TURNOVERS -"T0(I):PRINT #2,"TOTAL REBOUNDS  -"R3(I):FOR I2=0 TO 14:V9(I2)=0:NEXT I2
	NEXT I
	PRINT #2, CHR$(12):CLOSE 2
END SUB

SUB STAMINASORT

8800 M=13
	L=12

8802 S6=0:S7=0

8803 H1=0:H2=0
	IF S3(S6)<=S3(S6+1) THEN 8809
	H1=S3(S6):H2=F1(S6)
	S3(S6)=S3(S6+1):F1(S6)=F1(S6+1)
	S3(S6+1)=H1:F1(S6+1)=H2
	S7=S6

8809 S6=S6+1
	IF S6>L THEN 8812
	GOTO 8803

8812 IF S7=0 THEN 8813
	L=S7-1:GOTO 8802

8813 END SUB

SUB REBOUNDSORT

8825 M=4
	L=3

8827 S6=0:S7=0

8828 H1=0:H2=0
	IF G5(S6)<=G5(S6+1) THEN 8834
	H1=G5(S6):H2=G4(S6)
	G5(S6)=G5(S6+1):G4(S6)=G4(S6+1)
	G5(S6+1)=H1:G4(S6+1)=H2
	S7=S6

8834 S6=S6+1
	IF S6>L THEN 8837
	GOTO 8828

8837 IF S7=0 THEN 8838
	L=S7-1
	GOTO 8827

8838 END SUB

SUB COMCOACH
'COMPUTER COACH FOR SUBSTITUTIONS AND AI
	  FOR I=0 TO 13
	F1(I)=I
	S3(I)=A(P9,I,3)-A(P9,I,7)-A(P9,I,11)-A(P9,I,12)
	IF H>2 THEN S3(I)=A(P9,I,3)
	IF H=2 AND T<=120 THEN S3(I)=A(P9,I,3)
	IF A(P9,I,12)>=NF% THEN S3(I)=0
	NEXT I
	CALL STAMINASORT
	I=14
	FOR I1=0 TO 4

8794 I=I-1
	IF I<0 THEN 8700
	IF B%(P9,F1(I),18)<>0 OR AA$(P9,F1(I))="XXX" OR A(P9,F1(I),12)>=NF% OR A(P9,F1(I),12)>=NF%-2 AND H=1 OR A(P9,F1(I),12)>=NF%-1 AND H=2 AND T>720 THEN 8794
	IF H=1 AND S3(I)/A(P9,F1(I),3)<.5 THEN 8794
	IF H=1 AND T>=600 AND S3(I)/A(P9,F1(I),3)<.75 THEN 8794
	IF H=2 AND T>=600 AND S3(I)/A(P9,F1(I),3)<.25 THEN 8794
	IF H=2 AND T>=300 AND T<600 AND S3(I)/A(P9,F1(I),3)<.13 THEN 8794
	IF H=2 AND T<300 AND S3(I)/A(P9,F1(I),3)<T/2400 THEN 8794
	IF S3(I)<=0 AND H<2 OR S3(I)<=0 AND H=2 AND T>120 THEN 8794
	G4(I1)=F1(I):G5(I1)=A(P9,F1(I),2)
	NEXT I1

8798 CALL REBOUNDSORT
	FOR I=0 TO 4
	B1(P9,I)=G4(I)
	NEXT I
	CALL AICOMCOACH
	GOTO 8799

8700 I=14
	FOR I1=0 TO 4

8705 I=I-1
	IF I<0 THEN 8690
	IF B%(P9,F1(I),18)<>0 OR AA$(P9,F1(I))="XXX" OR A(P9,F1(I),12)>=NF% OR A(P9,F1(I),12)>=NF%-1 AND (H=1 OR H=2 AND T>720) THEN 8705
	G4(I1)=F1(I):G5(I1)=A(P9,F1(I),2)
	NEXT I1
	GOTO 8798

8690 I=14
	FOR I1=0 TO 4

8695 I=I-1
	IF B%(P9,F1(I),18)<>0 OR AA$(P9,F1(I))="XXX" THEN 8695
	G4(I1)=F1(I):G5(I1)=A(P9,F1(I),2)
	NEXT I1
	GOTO 8798

8799 END SUB

SUB TOURNEY
	'CHECK FOR FILLING IN TOURNEY SCHEDULE
OPEN P$(0) + FF$ + ".TOU" AS #1 LEN=90
	Y2=LOF(1)
CLOSE 1
	NT=Y2/90
	FOR I=1 TO NT
OPEN P$(0) + FF$ + ".TOU" AS #1 LEN=90
	FOR X=0 TO 14
	FIELD #1,X*2 AS X$,2 AS Q$(X+1),90-2-2*X AS X$
	NEXT
	FIELD #1,30 AS X$,2 AS Q$(16),2 AS Q$(17),15 AS Q$(18),15 AS Q$(19),26 AS X$
	FIELD #1,64 AS X$,3 AS Q$(20),3 AS Q$(21),6 AS Q$(22),8 AS Q$(23),6 AS X$
	FIELD #1,84 AS X$,2 AS Q$(24),2 AS Q$(25),2 AS Q$(26)
	GET #1,I
	VS1%=CVI(Q$(16)):HS1%=CVI(Q$(17))
	VT1$=Q$(18):W1$=Q$(19)
	FOR X=0 TO 14:NG1%(X)=CVI(Q$(X+1)):NEXT
	FOR X=0 TO 3:YN1$(X)=Q$(20+X):NEXT
	FOR X=1 TO 3:NG1%(X+14)=CVI(Q$(X+23)):NEXT
CLOSE 1
	IF NG1%(15)<>NG%(15) OR NG%(15)=17 THEN 6108
	  IF S(0,0)>S(1,0) AND NG1%(0)-900 = NG%(17) THEN NG1%(0)=NG%(0):YN1$(0)=YN$(0):VT1$=VT$:GOSUB 6105
	IF S(1,0)>S(0,0) AND NG1%(0)-900 = NG%(17) THEN NG1%(0)=NG%(1):YN1$(0)=YN$(1):VT1$=W$:GOSUB 6105
	IF S(0,0)>S(1,0) AND NG1%(1)-900 = NG%(17) THEN NG1%(1)=NG%(0):YN1$(1)=YN$(0):W1$=VT$:GOSUB 6105
	IF S(1,0)>S(0,0) AND NG1%(1)-900 = NG%(17) THEN NG1%(1)=NG%(1):YN1$(1)=YN$(1):W1$=W$:GOSUB 6105
	IF S(0,0)<S(1,0) AND NG1%(0)-800 = NG%(17) THEN NG1%(0)=NG%(0):YN1$(0)=YN$(0):VT1$=VT$:GOSUB 6105
	IF S(1,0)<S(0,0) AND NG1%(0)-800 = NG%(17) THEN NG1%(0)=NG%(1):YN1$(0)=YN$(1):VT1$=W$:GOSUB 6105
	IF S(0,0)<S(1,0) AND NG1%(1)-800 = NG%(17) THEN NG1%(1)=NG%(0):YN1$(1)=YN$(0):W1$=VT$:GOSUB 6105
	IF S(1,0)<S(0,0) AND NG1%(1)-800 = NG%(17) THEN NG1%(1)=NG%(1):YN1$(1)=YN$(1):W1$=W$:GOSUB 6105

6108 IF NG%(15)=17 THEN 6109
	IF S(0,0)>S(1,0) AND NG%(16)=89 AND NG1%(15)=17 AND NG1%(0)-900 = NG%(15) THEN NG1%(0)=NG%(0):YN1$(0)=YN$(0):VT1$=VT$:GOSUB 6105
	IF S(1,0)>S(0,0) AND NG%(16)=89 AND NG1%(15)=17 AND NG1%(0)-900 = NG%(15) THEN NG1%(0)=NG%(1):YN1$(0)=YN$(1):VT1$=W$:GOSUB 6105
	IF S(0,0)>S(1,0) AND NG%(16)=89 AND NG1%(15)=17 AND NG1%(1)-900 = NG%(15) THEN NG1%(1)=NG%(0):YN1$(1)=YN$(0):W1$=VT$:GOSUB 6105
	IF S(1,0)>S(0,0) AND NG%(16)=89 AND NG1%(15)=17 AND NG1%(1)-900 = NG%(15) THEN NG1%(1)=NG%(1):YN1$(1)=YN$(1):W1$=W$:GOSUB 6105

6109 IF S(0,0)>S(1,0) AND NG%(15)=17 AND NG1%(0)-1100 = NG%(17) THEN NG1%(0)=NG%(0):YN1$(0)=YN$(0):VT1$=VT$:GOSUB 6105
	IF S(1,0)>S(0,0) AND NG%(15)=17 AND NG1%(0)-1100 = NG%(17) THEN NG1%(0)=NG%(1):YN1$(0)=YN$(1):VT1$=W$:GOSUB 6105
	IF S(0,0)>S(1,0) AND NG%(15)=17 AND NG1%(1)-1100 = NG%(17) THEN NG1%(1)=NG%(0):YN1$(1)=YN$(0):W1$=VT$:GOSUB 6105
	IF S(1,0)>S(0,0) AND NG%(15)=17 AND NG1%(1)-1100 = NG%(17) THEN NG1%(1)=NG%(1):YN1$(1)=YN$(1):W1$=W$:GOSUB 6105
	IF S(0,0)<S(1,0) AND NG%(15)=17 AND NG1%(0)-1000 = NG%(17) THEN NG1%(0)=NG%(0):YN1$(0)=YN$(0):VT1$=VT$:GOSUB 6105
	IF S(1,0)<S(0,0) AND NG%(15)=17 AND NG1%(0)-1000 = NG%(17) THEN NG1%(0)=NG%(1):YN1$(0)=YN$(1):VT1$=W$:GOSUB 6105
	IF S(0,0)<S(1,0) AND NG%(15)=17 AND NG1%(1)-1000 = NG%(17) THEN NG1%(1)=NG%(0):YN1$(1)=YN$(0):W1$=VT$:GOSUB 6105
	IF S(1,0)<S(0,0) AND NG%(15)=17 AND NG1%(1)-1000 = NG%(17) THEN NG1%(1)=NG%(1):YN1$(1)=YN$(1):W1$=W$:GOSUB 6105
	IF S(0,0)<S(1,0) AND NG%(15)=17 AND NG1%(0)-900 = NG%(17) THEN NG1%(0)=NG%(0):YN1$(0)=YN$(0):VT1$=VT$:GOSUB 6105
	IF S(1,0)<S(0,0) AND NG%(15)=17 AND NG1%(0)-900 = NG%(17) THEN NG1%(0)=NG%(1):YN1$(0)=YN$(1):VT1$=W$:GOSUB 6105
	IF S(0,0)<S(1,0) AND NG%(15)=17 AND NG1%(1)-900 = NG%(17) THEN NG1%(1)=NG%(0):YN1$(1)=YN$(0):W1$=VT$:GOSUB 6105
	IF S(1,0)<S(0,0) AND NG%(15)=17 AND NG1%(1)-900 = NG%(17) THEN NG1%(1)=NG%(1):YN1$(1)=YN$(1):W1$=W$:GOSUB 6105
	NEXT
	GOTO 6106

6105 'UPDATE FILE
OPEN P$(0) + FF$ + ".TOU" AS #1 LEN=90
	FOR X=0 TO 14
	FIELD #1,X*2 AS X$,2 AS Q$(X+1),90-2-2*X AS X$
	NEXT
	FIELD #1,30 AS X$,2 AS Q$(16),2 AS Q$(17),15 AS Q$(18),15 AS Q$(19),26 AS X$
	FIELD #1,64 AS X$,3 AS Q$(20),3 AS Q$(21),6 AS Q$(22),8 AS Q$(23),6 AS X$
	FIELD #1,84 AS X$,2 AS Q$(24),2 AS Q$(25),2 AS Q$(26)
	FOR X=0 TO 14:LSET Q$(X+1)=MKI$(NG1%(X)):NEXT
	FOR X=0 TO 3:LSET Q$(20+X)=YN1$(X):NEXT
	FOR X=1 TO 3:LSET Q$(X+23)=MKI$(NG1%(X+14)):NEXT
	LSET Q$(16)=MKI$(0):LSET Q$(17)=MKI$(0)
	LSET Q$(18)=VT1$:LSET Q$(19)=W1$
	PUT #1,I
CLOSE 1
	RETURN

6106 END SUB

SUB STATCONVERT (Q,QQ)
	FOR XX=4 TO 11
	IF MID$(B$(Q),XX,1)=" " OR MID$(B$(Q),XX,1)="." THEN MID$(B$(Q),XX,1)="_"
	NEXT XX
	FOR XX=12 TO 14
	IF MID$(B$(Q),XX,2)="ST" THEN MID$(B$(Q),9,1)="_":MID$(B$(Q),10,2)="ST"
	NEXT XX
	QQ = 8
	FOR XX = 11 TO 4 STEP -1
	IF MID$(B$(Q),XX,1) = "_" THEN QQ = XX-4: GOTO 6615
	GOTO 6620

6615 NEXT XX

6620 END SUB

SUB TICKERCHECK ()
	IF AP<>1 OR AP%(2)>31 THEN 2581
	IF H=1 AND T<=960 AND SX%(AP%(2)+1,0,1)=-1 THEN SX%(AP%(2)+1,0,1)=S(0,0):SX%(AP%(2)+1,1,1)=S(1,0):GOTO 2581
	IF H=1 AND T<=720 AND SX%(AP%(2)+1,0,2)=-1 THEN SX%(AP%(2)+1,0,2)=S(0,0):SX%(AP%(2)+1,1,2)=S(1,0):GOTO 2581
	IF H=1 AND T<=480 AND SX%(AP%(2)+1,0,3)=-1 THEN SX%(AP%(2)+1,0,3)=S(0,1):SX%(AP%(2)+1,1,3)=S(1,1):GOTO 2581
	IF H=1 AND T<=240 AND SX%(AP%(2)+1,0,4)=-1 THEN SX%(AP%(2)+1,0,4)=S(0,0):SX%(AP%(2)+1,1,4)=S(1,0):GOTO 2581
	IF H=1 AND T<=120 AND SX%(AP%(2)+1,0,5)=-1 THEN SX%(AP%(2)+1,0,5)=S(0,0):SX%(AP%(2)+1,1,5)=S(1,0):GOTO 2581
	IF H>1 AND SX%(AP%(2)+1,0,6)=-1 THEN FOR I2=6 TO 8:SX%(AP%(2)+1,0,I2)=S(0,2)+S(0,1):SX%(AP%(2)+1,1,I2)=S(1,2)+S(1,1):NEXT:GOTO 2581
	IF H=2 AND T<=960 AND SX%(AP%(2)+1,0,9)=-1 THEN SX%(AP%(2)+1,0,9)=S(0,0):SX%(AP%(2)+1,1,9)=S(1,0):GOTO 2581
	IF H=2 AND T<=720 AND SX%(AP%(2)+1,0,10)=-1 THEN SX%(AP%(2)+1,0,10)=S(0,0):SX%(AP%(2)+1,1,10)=S(1,0):GOTO 2581
	IF H=2 AND T<=480 AND SX%(AP%(2)+1,0,11)=-1 THEN SX%(AP%(2)+1,0,11)=S(0,3)+S(0,2)+S(0,1):SX%(AP%(2)+1,1,11)=S(1,3)+S(1,2)+S(1,1):GOTO 2581
	IF H=2 AND T<=240 AND SX%(AP%(2)+1,0,12)=-1 THEN SX%(AP%(2)+1,0,12)=S(0,0):SX%(AP%(2)+1,1,12)=S(1,0):GOTO 2581
	IF H=2 AND T<=120 AND SX%(AP%(2)+1,0,13)=-1 THEN SX%(AP%(2)+1,0,13)=S(0,0):SX%(AP%(2)+1,1,13)=S(1,0):GOTO 2581
	SX%(AP%(2)+1,0,14)=S(0,0):SX%(AP%(2)+1,1,14)=S(1,0)

2581 REM
END SUB

SUB MAINSCREEN ()
	'M A I N   S C R E E N
	CALL TICKERCHECK
	LOCATE 2,1:LOCATE ,9:COLOR TR%(0,0),TR%(0,1):PRINT B$(0);
	LOCATE 1,37:COLOR 15,0:PRINT USING "##";INT(T/60);:PRINT ":";
	IF T<=5 THEN PRINT "0";:PRINT USING "#.#";T-INT(T/60)*60;:GOTO 2171
	IF T-INT(T/60)*60<10 THEN PRINT"0";:PRINT USING "#";T-INT(T/60)*60;:GOTO 2171
	PRINT USING "##";T-INT(T/60)*60;

2171 LOCATE 2,56:COLOR TR%(1,0),TR%(1,1):PRINT B$(1)
	LOCATE 4,13:COLOR 14,0:PRINT USING "###";S(0,0);
	LOCATE 2,33:PRINT " ";:IF PA%=0 THEN LOCATE ,33:PRINT CHR$(17);
	LOCATE 2,35:PRINT USING "  HALF #";H;:LOCATE ,44:PRINT " ";
	IF PA%=1 THEN LOCATE ,44:PRINT CHR$(16);
	IF H>2 THEN LOCATE ,35:PRINT USING "OVERTIME #";H-2;:LOCATE ,46:PRINT " ";:IF PA%=1 THEN LOCATE ,46:PRINT CHR$(16)
	LOCATE 4,60:COLOR 14,0:PRINT USING "###";S(1,0)
	COLOR 7:LOCATE 3,35:PRINT USING "##  ";T0(0);:COLOR 12:PRINT "TO  ";:COLOR 7:PRINT USING "##";T0(1)
	LOCATE ,35:PRINT USING "##  ";R3(0);:COLOR 12:PRINT "RB  ";:COLOR 7:PRINT USING "##";R3(1)
	LOCATE ,35:PRINT USING "##  ";P2(0);:COLOR 12:PRINT "TF  ";:COLOR 7:PRINT USING "##";P2(1);
	IF P2(0)>5 THEN LOCATE ,46:COLOR 0,2:PRINT "BONUS";:COLOR 7,0
	IF P2(1)>5 THEN LOCATE ,29:COLOR 0,2:PRINT "BONUS":COLOR 7,0
	LOCATE 6,9:PRINT "TIMEOUTS:"T1(0);:LOCATE ,56:PRINT "TIMEOUTS:"T1(1)
	COLOR 14,0:LOCATE 6,37:PRINT USING " :##";X8
	IF C7=0 OR T<45 AND X8>=T AND C7=1 OR T<35 AND X8>=T AND C7=2 OR (C7=1 OR C7=2) AND H>2 AND T=300 THEN LOCATE 6,37:PRINT " :  "
	IF U6=0 THEN 2172
	LOCATE 9,41
	COLOR TR%(D,0),TR%(D,1):PRINT "DEF-"DB$(DT%(D))
	LOCATE ,41:COLOR TR%(P,0),TR%(P,1):PRINT "OFF-"OB$(OF%(P))
	COLOR 15,0
	LOCATE 11,41:COLOR 14:PRINT "ENTER ";:COLOR 15:PRINT "PASS"
	LOCATE ,41:COLOR 14:PRINT "(1)  ";:COLOR 15:PRINT "SHOOT"
	LOCATE ,41:COLOR 14:PRINT "(2)  ";:COLOR 15:PRINT B$(P)" CALL TIMEOUT     "
	LOCATE ,41:COLOR 14:PRINT "(T)  ";:COLOR 15:PRINT "10 MIN TICKER"
	LOCATE ,41:COLOR 14:PRINT "(D)  ";:COLOR 15:PRINT "CHANGE DEFENSE FROM 2-3 ZONE"
	COLOR 15,0
	LOCATE 19,1
	FOR I1=0 TO 4:COLOR 2,0:PRINT USING "# ";I1;
	COLOR 3
	COLOR 15:PRINT LEFT$(AA$(0,B1(0,I1)),12) TAB(15);
	IF A(0,B1(0,I1),19)>=7 THEN PRINT "*";
	PRINT TAB(16);
	J=(A(0,B1(0,I1),3))-A(0,B1(0,I1),7)-A(0,B1(0,I1),11)-A(0,B1(0,I1),12):IF J<=0 THEN J=0
	PRINT USING "## ## ";A(0,B1(0,I1),0),A(0,B1(0,I1),1);
	IF P=0 THEN PRINT USING "##";A(0,B1(0,I1),21)*2/10; ELSE PRINT USING "##";A(0,B1(0,I1),2)*2/10;
	IF J<=0 AND (H=1 OR H=2 AND T>120) THEN COLOR 12
	PRINT USING "### ";J;
	COLOR 15
	IF FA%(0,B1(0,I1))*-1>=5 AND (H=1 OR H=2 AND T>120) THEN COLOR 12
	PRINT USING "## ";FA%(0,B1(0,I1))*-1;
	COLOR 15
	PRINT USING "##";A(0,B1(0,I1),4);
	PRINT USING "###  ";A(0,B1(0,I1),8)*2+A(0,B1(0,I1),10)+W%(0,B1(0,I1),0);
	IF A(0,B1(0,I1),12)>=4 THEN COLOR 12
	PRINT USING "#";A(0,B1(0,I1),12)
	COLOR 15
	NEXT I1
	LOCATE 19,40
	FOR I1=0 TO 4:LOCATE ,40:COLOR 2,0:PRINT USING "# ";I1;
	COLOR 15:PRINT LEFT$(AA$(1,B1(1,I1)),12) TAB(55);
	IF A(1,B1(1,I1),19)>=7 THEN PRINT "*";
	PRINT TAB(56);
	J=(A(1,B1(1,I1),3))-A(1,B1(1,I1),7)-A(1,B1(1,I1),11)-A(1,B1(1,I1),12):IF J<=0 THEN J=0
	PRINT USING "## ## ";A(1,B1(1,I1),0),A(1,B1(1,I1),1);
	IF P=1 THEN PRINT USING "##";A(1,B1(1,I1),21)*2/10; ELSE PRINT USING "##";A(1,B1(1,I1),2)*2/10;
	IF J<=0 AND (H=1 OR H=2 AND T>120) THEN COLOR 12
	PRINT USING "### ";J;
	COLOR 15
	IF FA%(1,B1(1,I1))*-1>=5 AND (H=1 OR H=2 AND T>120) THEN COLOR 12
	PRINT USING "## ";FA%(1,B1(1,I1))*-1;
	COLOR 15
	PRINT USING "##";A(1,B1(1,I1),4);
	PRINT USING "###  ";A(1,B1(1,I1),8)*2+A(1,B1(1,I1),10)+W%(1,B1(1,I1),0);
	IF A(1,B1(1,I1),12)>=4 THEN COLOR 12
	PRINT USING "#";A(1,B1(1,I1),12)
	COLOR 15
	NEXT I1

2172 REM
END SUB

SUB SCOREBOARD ()
	'*** SCREEN UPDATING ***
	CLS
	CALL TICKERCHECK
	COLOR 9,0
	LOCATE 3,11:PRINT CHR$(218);STRING$(5,196);CHR$(191)
	LOCATE ,11:PRINT CHR$(179);:LOCATE ,17:PRINT CHR$(179)
	LOCATE ,11:PRINT CHR$(192);STRING$(5,196);CHR$(217)
	LOCATE 3,58:PRINT CHR$(218);STRING$(5,196);CHR$(191)
	LOCATE ,58:PRINT CHR$(179);:LOCATE ,64:PRINT CHR$(179)
	LOCATE ,58:PRINT CHR$(192);STRING$(5,196);CHR$(217)
	LOCATE 2,1:LOCATE ,9:COLOR TR%(0,0),TR%(0,1):PRINT B$(0);
	LOCATE 1,37:COLOR 15,0:PRINT USING "##";INT(T/60);:PRINT ":";
	IF T-INT(T/60)*60<10 THEN PRINT"0";:PRINT USING "#";T-INT(T/60)*60;:GOTO 2505
	PRINT USING "##";T-INT(T/60)*60;

2505 LOCATE 2,56:COLOR TR%(1,0),TR%(1,1):PRINT B$(1)
	LOCATE 4,13:COLOR 14,0:PRINT USING "###";S(0,0);
	LOCATE 2,35:PRINT USING "  HALF #";H;
	IF H>2 THEN LOCATE ,35:PRINT USING "OVERTIME #";H-2
	LOCATE 4,60:COLOR 14,0:PRINT USING "###";S(1,0)
	COLOR 7:LOCATE 3,35:PRINT USING "##  ";T0(0);:COLOR 12:PRINT "TO  ";:COLOR 7:PRINT USING "##";T0(1)
	LOCATE ,35:PRINT USING "##  ";R3(0);:COLOR 12:PRINT "RB  ";:COLOR 7:PRINT USING "##";R3(1)
	LOCATE ,35:PRINT USING "##  ";P2(0);:COLOR 12:PRINT "TF  ";:COLOR 7:PRINT USING "##";P2(1);
	IF P2(0)>5 THEN LOCATE ,46:COLOR 0,2:PRINT "BONUS";:COLOR 7,0
	IF P2(1)>5 THEN LOCATE ,29:COLOR 0,2:PRINT "BONUS":COLOR 7,0
	LOCATE 6,9:PRINT "TIMEOUTS:"T1(0);:LOCATE ,56:PRINT "TIMEOUTS:"T1(1)
	LOCATE 9,41
	COLOR TR%(D,0),TR%(D,1):PRINT "DEF-"DB$(DT%(D))
	LOCATE ,41:COLOR TR%(P,0),TR%(P,1):PRINT "OFF-"OB$(OF%(P))
	COLOR 15,0
	LOCATE 11,41:COLOR 14:PRINT "ENTER";:COLOR 14:PRINT "-PASS"
	LOCATE ,41:COLOR 14:PRINT "(1)  ";:COLOR 15:PRINT "SHOOT"
	LOCATE ,41:COLOR 14:PRINT "(2)  ";:COLOR 15:PRINT B$(P)" CALL TIMEOUT     "
	LOCATE ,41:COLOR 14:PRINT "(T)  ";:COLOR 15:PRINT "10 MIN TICKER"
	LOCATE ,41:COLOR 14:PRINT "(D)  ";:COLOR 15:PRINT "CHANGE DEFENSE FROM 2-3 ZONE"
	LOCATE 7,1
	COLOR 9,0:PRINT STRING$(38,205);CHR$(203);STRING$(38,205)
	LOCATE 8,1:FOR I=1 TO 8:LOCATE ,39:PRINT CHR$(186):NEXT
	LOCATE 17,1:COLOR TR%(0,0),TR%(0,1):PRINT B$(0);
	PRINT USING " [##";Z5(0);:PRINT "-";:PRINT USING "##]";Z6(0)
	COLOR 14,0:PRINT "# NAME         FG FT RB CX EF PA PT  F"
	FOR I1=0 TO 4
	COLOR 2:PRINT USING "# ";I1;
	COLOR 3
	COLOR 15:PRINT LEFT$(AA$(0,B1(0,I1)),12);:LOCATE ,15
	IF A(0,B1(0,I1),19)>=7 THEN PRINT "*";
	LOCATE ,16
	J=(A(0,B1(0,I1),3))-A(0,B1(0,I1),7)-A(0,B1(0,I1),11)-A(0,B1(0,I1),12):IF J<=0 THEN J=0
	PRINT USING "##";A(0,B1(0,I1),0);
	PRINT USING "### ";A(0,B1(0,I1),1);
	IF P=0 THEN PRINT USING "##";A(0,B1(0,I1),21)*2/10; ELSE PRINT USING "##";A(0,B1(0,I1),2)*2/10;
	IF J<=0 AND (H=1 OR H=2 AND T>120) THEN COLOR 12
	PRINT USING "### ";J;
	COLOR 15
	IF FA%(0,B1(0,I1))*-1>=5 AND (H=1 OR H=2 AND T>120) THEN COLOR 12
	PRINT USING "## ";FA%(0,B1(0,I1))*-1;
	COLOR 15
	PRINT USING "##";A(0,B1(0,I1),4);
	PRINT USING "###  ";A(0,B1(0,I1),8)*2+A(0,B1(0,I1),10)+W%(0,B1(0,I1),0);
	IF A(0,B1(0,I1),12)>=4 THEN COLOR 12
	PRINT USING "#";A(0,B1(0,I1),12)
	COLOR 15
	NEXT I1
	LOCATE 17,40:COLOR TR%(1,0),TR%(1,1):PRINT B$(1);:PRINT USING " [##";Z5(1);:PRINT "-";:PRINT USING "##]";Z6(1)
	COLOR 14,0:LOCATE ,40:PRINT "# NAME          FG FT RB CX EF PA PT  F"
	FOR I1=0 TO 4:LOCATE ,40:COLOR 2:PRINT USING "# ";I1;
	COLOR 15:PRINT LEFT$(AA$(1,B1(1,I1)),12);:LOCATE ,55
	IF A(1,B1(1,I1),19)>=7 THEN PRINT "*";
	LOCATE ,56
	J=(A(1,B1(1,I1),3))-A(1,B1(1,I1),7)-A(1,B1(1,I1),11)-A(1,B1(1,I1),12):IF J<=0 THEN J=0
	PRINT USING "##";A(1,B1(1,I1),0);
	PRINT USING "### ";A(1,B1(1,I1),1);
	IF P=1 THEN PRINT USING "##";A(1,B1(1,I1),21)*2/10; ELSE PRINT USING "##";A(1,B1(1,I1),2)*2/10;
	IF J<=0 AND (H=1 OR H=2 AND T>120) THEN COLOR 12
	PRINT USING "### ";J;
	COLOR 15
	IF FA%(1,B1(1,I1))*-1>=5 AND (H=1 OR H=2 AND T>120) THEN COLOR 12
	PRINT USING "## ";FA%(1,B1(1,I1))*-1;
	COLOR 15
	PRINT USING "##";A(1,B1(1,I1),4);
	PRINT USING "###  ";A(1,B1(1,I1),8)*2+A(1,B1(1,I1),10)+W%(1,B1(1,I1),0);
	IF A(1,B1(1,I1),12)>=4 THEN COLOR 12
	PRINT USING "#";A(1,B1(1,I1),12)
	COLOR 15
	NEXT I1
	COLOR 9,0:FOR I=1 TO 9:LOCATE 14+I,39:PRINT CHR$(186):NEXT
	COLOR 9,0
	LOCATE 16,1:PRINT STRING$(79,205)
	LOCATE 16,39:PRINT CHR$(206):COLOR 7,0
END SUB

SUB COLCNG ()
	IF TR%(1,0)=15 AND TR%(1,1)=4 THEN TR%(1,0)=4:TR%(1,1)=7
	IF TR%(1,0)=15 AND TR%(1,1)=1 THEN TR%(1,0)=1:TR%(1,1)=7
	IF TR%(1,0)=0 AND TR%(1,1)=4 THEN TR%(1,0)=12:TR%(1,1)=0
	IF TR%(1,0)=1 AND TR%(1,1)=7 THEN TR%(1,0)=15:TR%(1,1)=1
	IF TR%(1,0)=4 AND TR%(1,1)=7 THEN TR%(1,0)=15:TR%(1,1)=4
END SUB

SUB LOADSTATS
	IF TR%(1,0)=TR%(0,0) AND TR%(1,1)=TR%(0,1) THEN CALL COLCNG
	COLOR 15,0
	FOR I=0 TO 1
	CLS
	CALL DRAWBOX
	U$="ENTER STATS DISK FOR "+B$(I)
	LOCATE ,(80-LEN(U$))/2
	PRINT U$
	PRINT
	IF UCASE$(LEFT$(P$(1),1))<>"A" AND UCASE$(LEFT$(P$(1),1))<>"B" THEN 64
	LOCATE ,12:PRINT "HIT ANY KEY TO CONTINUE";
63 I$=GetKeyPress$

64 COLOR 15,0
	Y$(I)=B$(I)
	Q=I
	CALL STATCONVERT (Q,QQ)
	M$=MID$(B$(I),4,QQ)
	R$=M$+"."+LEFT$(B$(I),2)
	R$=R$+"S"
	IF NOT _FILEEXISTS(P$(1)+R$) THEN 66

OPEN P$(1)+R$ FOR INPUT AS #2
	INPUT #2,YY%
	FOR I1=1 TO 100:INPUT #2,O%(I1):NEXT
	FOR I1=1 TO 100:INPUT #2,HO$(I1):NEXT
	FOR I1=1 TO 100:INPUT #2,HT%(I1):NEXT
	FOR I1=1 TO 100:INPUT #2,HO$(I1):NEXT
	FOR I1 = 1 TO 100
	FOR I2 = 0 TO 1: INPUT #2, APT%(I1, I2): NEXT: NEXT
	FOR I1 = 1 TO 100: INPUT #2, CRD(I1): NEXT I1
	FOR I1 = 1 TO 100: INPUT #2, SITE$(I1): NEXT I1
CLOSE 2

	FOR I1=1 TO YY%
	IF O%(I1)>HT%(I1) THEN Z5(I)=Z5(I)+1
	IF O%(I1)<HT%(I1) THEN Z6(I)=Z6(I)+1
	NEXT

66 B$(I)=Y$(I)
	NEXT
END SUB

SUB OFFREBOUND ()
	RB=0:FOR I=0 TO 4:RB(I)=0
	XZ=A(P,B1(P,I),21)
	IF H>2 OR H=2 AND T<=120 THEN 793
	IF A(P,B1(P,I),3)-A(P,B1(P,I),7)-A(P,B1(P,I),11)-A(P,B1(P,I),12)<=0 THEN XZ=INT(XZ*.5 + .5)

793 IF FA%(P,B1(P,I))<=-5 THEN XZ=INT(XZ*.9 + .5)
	RB(I)=RB(I)+XZ:RB=RB+XZ
	NEXT
	RN=RND(1)*RB
	FOR B=0 TO 4
	IF RN<=RB(B) THEN 794
	RB(B+1)=RB(B+1)+RB(B)
	NEXT
	B=INT(RND(1)*5)

794 END SUB

SUB DEFREBOUND ()
	RB=0:FOR I=0 TO 4:RB(I)=0
	XZ=A(1-P,B1(1-P,I),2)
	IF H>2 OR H=2 AND T<=120 THEN 798
	IF A(1-P,B1(1-P,I),3)-A(1-P,B1(1-P,I),7)-A(1-P,B1(1-P,I),11)-A(1-P,B1(1-P,I),12)<=0 THEN XZ=INT(XZ*.5+.5)

798 IF FA%(1-P,B1(1-P,I))<=-5 THEN XZ=INT(XZ*.9 + .5)
	RB(I)=RB(I)+XZ:RB=RB+XZ
	NEXT
	RN=RND(1)*RB
	FOR B=0 TO 4
	IF RN<=RB(B) THEN 799
	RB(B+1)=RB(B+1)+RB(B)
	NEXT
	B=INT(RND(1)*5)

799 END SUB

SUB EDITCX()

9300 IF AP=1 AND U5=2 THEN 9499
	COLOR 15,0:CLS
	PRINT "EDIT CONTRIBUTION PERCENTAGES OF PLAYERS FROM:"
	PRINT
	COLOR 14:PRINT"(0) - ";:COLOR TR%(0,0),TR%(0,1):PRINT B$(0):COLOR ,0
	PRINT
	COLOR 14:PRINT"(1) - ";:COLOR TR%(1,0),TR%(1,1):PRINT B$(1):COLOR ,0
	PRINT
	COLOR 14:PRINT "(2) - ";:COLOR 3:PRINT "PROCEED TO GAME":COLOR 15,0
	PRINT
	PRINT "NOTE:: THE CONTRIBUTION RATING CONSISTS OF THE PLAYER'S"
	PRINT "       FREQUENCY TO SHOOT, REBOUND, AND COMMIT FOULS."

9301 I$=GetKeyPress$
	I=VAL(I$):IF I<0 OR I>2 THEN 9301
	IF I=2 THEN 9499
	CLS
	TX=0:FOR I1=0 TO 13:TX=TX+A(I,I1,3):NEXT
	FOR I1=0 TO 13:A(I,I1,3)=A(I,I1,3)/TX*100:NEXT

9305 LOCATE 2,1:PRINT "CONTRIBUTION RATINGS FOR ";:COLOR TR%(I,0),TR%(I,1):PRINT B$(I):COLOR 15,0
	PRINT:PRINT " #  PLAYER             CX"
	TY%=0:FOR I1=0 TO 13:TY%=TY%+A(I,I1,3)
	IF B%(I,I1,18)=-1 THEN COLOR TR%(I,0),TR%(I,1)
	PRINT USING "## ";I1+1;:PRINT AA$(I,I1);:LOCATE ,24:PRINT USING "##";A(I,I1,3)
	COLOR 15,0
	NEXT
	LOCATE ,23:PRINT USING "###";TY%
	INPUT "SELECT PLAYER TO CHANGE (0 TO CONTINUE)";I1:I1=I1-1
	IF I1>13 OR I1<0 THEN 9310
	LOCATE 22,1:PRINT "ENTER NEW CX RATING FOR "AA$(I,I1)" ";:INPUT A(I,I1,3)

9306 LOCATE 22,1:PRINT "                                                    ":GOTO 9305

9310 IF TY%=100 THEN 9320
	LOCATE 22,1:PRINT "TOTAL MUST ADD UP TO 100%! PRESS ANY KEY"

9311 I$=GetKeyPress$
	GOTO 9306

9320 FOR I1=0 TO 13:A(I,I1,3)=A(I,I1,3)/100*TX:NEXT
	GOTO 9300

9499 X=0
END SUB

SUB DELAY ()
	IF U6=0 THEN 2300
	U!=TIMER:WHILE TIMER<U!+U6:WEND

2300 REM
END SUB

SUB CLEARPBP ()
	IF U6=0 OR PB%=1 THEN 9750
	NL%=1:A1$="":B1$="":C1$="":D1$="":E1$="":F1$="":G1$="":H1$="":J$=""

9750 REM
END SUB

SUB ZONECHANGE ()
	IF U5=1 AND CT=D OR U5=2 THEN 8155
	IF DT%(D)<>2 OR DT%(D)<>7 OR DT%(D)<>12 THEN 8155
	IF OF%(P)>8 OR OF%(P)<4 THEN 8155
	JJ=8:CALL FRAME
	PRINT B$(D)" SELECT STRATEGY:"
	LOCATE 12,14
	LOCATE ,14:PRINT "0 - SOLID MAN TO MAN"
	LOCATE ,14:PRINT "1 - PRESSURE MAN TO MAN"
	LOCATE ,14:PRINT "2 - 1-3-1 TRAPPING ZONE"

8103 I$=GetKeyPress$
	I1=VAL(I$):IF I1<0 OR I1>2 THEN 8103
	IF I1=2 THEN I1=3
	IF DT%(D)<=3 THEN DT%(D)=I1
	IF DT%(D)=7 THEN DT%(D)=I+8
	IF DT%(D)=10 THEN DT%(D)=3
	IF DT%(D)=12 THEN DT%(D)=I+10
	IF DT%(D)=12 THEN DT%(D)=13
	P9=D
	IF DT%(P9)<=3 THEN P7(P9)=0
	IF DT%(P9)=4 THEN P7(P9)=1
	IF DT%(P9)=5 OR DT%(P9)=6 THEN P7(P9)=2
	IF DT%(P9)>6 AND DT%(P9)<=10 THEN P7(P9)=3
	IF DT%(P9)>9 AND DT%(P9)<14 THEN P7(P9)=4
	IF DT%(P9)=14 THEN P7(P9)=5
	IF DT%(P9)=0 OR DT%(P9)=4 OR DT%(P9)=5 OR DT%(P9)=8 OR DT%(P9)=10 THEN D2(P9)=0
	IF DT%(P9)=1 OR DT%(P9)=6 OR DT%(P9)=9 OR DT%(P9)=11 THEN D2(P9)=1
	IF DT%(P9)=2 OR DT%(P9)=7 OR DT%(P9)=12 THEN D2(P9)=2
	IF DT%(P9)=3 OR DT%(P9)=13 THEN D2(P9)=3
	COLOR 15,0

8155 COLOR 7,0

END SUB

SUB DEFENSEMENU ()

110 CLS
	PRINT TAB(33) "DEFENSIVE STYLE":PRINT
	FOR I=0 TO 14
	LOCATE ,5:PRINT USING "# ";I;
	IF I=10 THEN LOCATE,5:PRINT "A ";
	IF I=11 THEN LOCATE,5:PRINT "B ";
	IF I=12 THEN LOCATE ,5:PRINT "C ";
	IF I=13 THEN LOCATE ,5:PRINT "D ";
	IF I=14 THEN LOCATE ,5:PRINT "E ";
	PRINT D$(I)
	NEXT
	PRINT
	LOCATE 19,5:PRINT "SELECT DEFENSIVE STYLE FOR "B$(P9)

107 I$=GetKeyPress$
	I1=VAL(I$)
	IF UCASE$(I$)="A" THEN I1=10
	IF UCASE$(I$)="B" THEN I1=11
	IF UCASE$(I$)="C" THEN I1=12
	IF UCASE$(I$)="D" THEN I1=13
	IF UCASE$(I$)="E" THEN I1=14
	IF I1<0 OR I1>14 THEN 107
	DT%(P9)=I1
	IF DT%(P9)<=3 THEN P7(P9)=0
	IF DT%(P9)=4 THEN P7(P9)=1
	IF DT%(P9)=5 OR DT%(P9)=6 THEN P7(P9)=2
	IF DT%(P9)>6 AND DT%(P9)<=10 THEN P7(P9)=3
	IF DT%(P9)>9 AND DT%(P9)<14 THEN P7(P9)=4
	IF DT%(P9)=14 THEN P7(P9)=5
	IF DT%(P9)=14 AND (H<2 OR H>=2 AND T>180) THEN BEEP:LOCATE 23,1:PRINT "CAN ONLY USE LAST 3 MIN OF 2ND HALF OR OT":i$ = GetKeyPress$
	IF DT%(P9)=0 OR DT%(P9)=4 OR DT%(P9)=5 OR DT%(P9)=8 OR DT%(P9)=10 THEN D2(P9)=0
	IF DT%(P9)=1 OR DT%(P9)=6 OR DT%(P9)=9 OR DT%(P9)=11 THEN D2(P9)=1
	IF DT%(P9)=2 OR DT%(P9)=7 OR DT%(P9)=12 THEN D2(P9)=2
	IF DT%(P9)=3 OR DT%(P9)=13 THEN D2(P9)=3
	COLOR 15,0
END SUB

SUB SETSTAMINA ()
	SQ%=0
	FOR I=0 TO 13
	IF TR%(P9,5)=0 AND C(P9,I,0)=0 AND B%(P9,I,18)=0 THEN SQ%=SQ%+A(P9,I,3)

108 IF TR%(P9,5)<>0 AND C(P9,I,0)<>0 AND B%(P9,I,18)=0 THEN SQ%=SQ%+A(P9,I,3)*TR%(P9,5)/C(P9,I,0):A(P9,I,3)=A(P9,I,3)*TR%(P9,5)/C(P9,I,0)

117 NEXT
	FOR I=0 TO 13

116 IF TR%(P9,5)=0 AND C(P9,I,0)=0 AND B%(P9,I,18)=0 THEN A(P9,I,3)=INT(A(P9,I,3)/SQ%*S9+.5)

118 IF TR%(P9,5)<>0 AND C(P9,I,0)<>0 AND B%(P9,I,18)=0 THEN A(P9,I,3)=INT(A(P9,I,3)/SQ%*S9+.5)

112 IF A(P9,I,3)<1 THEN A(P9,I,3)=1
	NEXT I
	SQ%=0:FOR I=0 TO 13

113 IF B%(P9,I,18)=0 THEN SQ%=SQ%+A(P9,I,3)
	NEXT
	FOR I=0 TO 13

114 IF S9>120 AND F5%(P9,8)<>99 THEN A(P9,I,16)=A(P9,I,16)*(120/S9):A(P9,I,16)=INT(A(P9,I,16)+.5)
	NEXT I
	DY=7

115 IF S9>114 THEN DY=(114/S9)*DY:DY=INT(DY+.5)
END SUB

SUB FRAME ()
	SN=1:LOCATE 8,8:COLOR TR%(TS%,0),TR%(TS%,1)
	PRINT " Ö"; STRING$(61,196);"· ";:FOR II=1 TO JJ:LOCATE 8+II,8
	PRINT " º"; STRING$(61,32); "º ";:NEXT
	LOCATE 9+JJ,8
	PRINT " Ó";STRING$(61,196); "½ ";:LOCATE 10,15
END SUB

SUB COMPUTERSUB ()

930 IF H>=2 AND T<=60 AND X3%=1 AND (S(P9,0)-S(1-P9,0)=-3 OR S(P9,0)-S(1-P9,0)=-6) THEN OF%(P9)=9
	M1=0:M2=0:M3=0:M4=0
	IF U5=1 AND P9=CT AND X=50 OR U5=2 AND P9=P AND X=50 THEN 939
	FOR I1=0 TO 13
	M6=A(P9,I1,3)-A(P9,I1,7)-A(P9,I1,11)-A(P9,I1,12)
	IF H<2 AND M6<=0 OR H=2 AND T>120 AND M6<=0 THEN M1=M1+1
	IF A(P9,I1,12)>=NF% OR AA$(P9,I1)="XXX" OR B%(P9,I1,18)<>0 THEN M2=M2+1
	IF I1>4 THEN 937
	M6=A(P9,B1(P9,I1),3)-A(P9,B1(P9,I1),7)-A(P9,B1(P9,I1),11)-A(P9,B1(P9,I1),12)
	IF H=1 AND M6/A(P9,B1(P9,I1),3)<.5 THEN M3=M3+1
	IF H=1 AND T>=600 AND M6/A(P9,B1(P9,I1),3)<.75 THEN M3=M3+1
	IF H=2 AND T>=600 AND M6/A(P9,B1(P9,I1),3)<.25 THEN M3=M3+1
	IF H=2 AND T>=300 AND T<600 AND M6/A(P9,B1(P9,I1),3)<.13 THEN M3=M3+1
	IF H=2 AND T<300 AND M6/A(P9,B1(P9,I1),3)<T/2400 THEN M3=M3+1
	IF M6<=0 AND H<2 OR M6<=0 AND H=2 AND T>120 THEN M3=M3+1
	IF A(P9,B1(P9,I1),12)>=NF% OR A(P9,B1(P9,I1),12)>=NF%-2 AND H=1 OR H=2 AND T>720 AND A(P9,B1(P9,I1),12)>=NF%-1 THEN M4=M4+1

937 NEXT
	IF M3>=1 AND 5-M3<14-M1 OR H=2 AND T<120 AND XS=0 AND G9%(P9)=0 OR M4>=1 AND M2<13 OR CTO%=1 THEN CTO%=0:XM=1:CALL COMCOACH:GOTO 940

939 IF H=2 AND T<=120 THEN G9%(P9)=1

940 END SUB

SUB FATIGUE ()
	'COMPUTER DEFENSE FOR FATIGUE
	FD%=0:FQ%=0
	FOR I=0 TO 4
	FD%=FD%+FA%(P9,B1(P9,I))
	IF FA%(P9,B1(P9,I))<=-4 THEN FQ%=1
	NEXT
	IF FD%<-15 OR FQ%=1 THEN D2(P9)=2:P7(P9)=0:DT%(P9)=2
END SUB

SUB AUTOSETUP ()
	X3%=NG%(3):U5=NG%(8):NF%=NG%(5):C7=NG%(7):N=NG%(2):U6=NG%(4)/10:CM%=NG%(9)
	ST%=NG%(12)
	TB%=NG%(6):TF%=NG%(10):N7%=NG%(14)
	FOR P9=0 TO 1:I1=NG%(P9):YN$=YN$(P9):CALL GETATEAM (I1,YN$):CALL TEAMSETUP:NEXT P9
	IF TOU <> 1 THEN 1305

1302 IF RIGHT$(FF$, 1) = " " THEN FF$ = LEFT$(FF$, LEN(FF$) - 1):GOTO 1302

1303 IF RIGHT$(YN$(0), 1) = " " THEN YN$(0) = LEFT$(YN$(0), LEN(YN$(0)) - 1):GOTO 1303

1304 IF RIGHT$(YN$(1), 1) = " " THEN YN$(1) = LEFT$(YN$(1), LEN(YN$(1)) - 1):GOTO 1304
	  OPEN P$(0) + FF$ + ".INF" FOR INPUT AS #2
	INPUT #2, X$
	INPUT #2, X$: ' NUMBER OF REGIONS
	FOR I = 1 TO 16
	INPUT #2, X$: ' NUMBER OF TEAMS IN REGION
	INPUT #2, X$: ' NAME OF REGION
	NEXT
	FOR I = 1 TO 16
	FOR I1 = 1 TO 16
	FOR I2 = 0 TO 3
	INPUT #2, N$(I, I1, I2): ' SEED SLOT NAME
	INPUT #2, N%(I, I1, I2): ' REGION, SEED NUMBER, MODE PLAY/TM#
	NEXT: NEXT: NEXT
CLOSE 2
	  TOU = 0
	FOR I = 1 TO 16
	FOR I1 = 1 TO 16
	'PRINT LEN(YN$(0)),LEN(YN$(1)),LEN( N$(I,I1,1) )
	IF NG%(0) = N%(I, I1, 0) AND YN$(0) = N$(I, I1, 1) AND N%(I, I1, 1) = 0 THEN TOU = 1:GOTO 1305
	IF NG%(1) = N%(I, I1, 0) AND YN$(1) = N$(I, I1, 1) AND N%(I, I1, 1) = 0 THEN TOU = 1:GOTO 1305
	NEXT:NEXT

1305 END SUB

SUB INITIALIZE ()
NL%=1
PA%=-1
TR%(0,0)=15:TR%(0,1)=1
TR%(1,0)=15:TR%(1,1)=1
DATA L,1,1,1,1,1,1,H,H,2,2,2,2,2,F
FOR I=0 TO 14:READ R$(I):NEXT
DATA 0,1,1,2,2,2,-1,-1,-1,-1,-2,-3
FOR I=0 TO 1:FOR I1=1 TO 6:READ HF%(I,I1):NEXT:NEXT
DATA 1,4,2,5,15,29,22,36,7,9,7,12
FOR I=0 TO 2:FOR I1=1 TO 4:READ DP(I,I1):NEXT:NEXT
DATA -7,-10,-4,-10,70,100,20,100,-1,1,-2,2,15,22,8,29,5,7,3,9
FOR I=0 TO 4:FOR I1=0 TO 3:READ D8(I,I1):NEXT:NEXT
OPEN "DEV.BAS" FOR INPUT AS #2:INPUT #2,P$(0):INPUT #2,P$(1):CLOSE 2
OPEN "DEFAULT" FOR INPUT AS #1
INPUT #1,U5:INPUT #1,X3%:INPUT #1,C7:INPUT #1,N:INPUT #1,NF%:INPUT #1,U6:INPUT #1,CM%:INPUT #1,TB%:INPUT #1,TF%:INPUT #1,N7%:INPUT #1,PB%:CLOSE 1
	IF NOT _FILEEXISTS("TICKER") THEN TMT=0:GOTO 5
OPEN "TICKER" FOR INPUT AS #2
	FOR I=1 TO 32:FOR I1=0 TO 1:FOR I2=1 TO 14
	INPUT #2,SX%(I,I1,I2):NEXT:NEXT:NEXT
	FOR I=1 TO 32:FOR I1=0 TO 1:INPUT #2,SX$(I,I1):NEXT:NEXT
	FOR I=1 TO 32:INPUT #2,ST%(I):NEXT
CLOSE 2
	TMT=1

5  IF NOT _FILEEXISTS("GAME82") THEN 6

OPEN "GAME82" FOR INPUT AS #2
INPUT #2,FF$
FOR I=0 TO 2:INPUT #2,AP%(I):NEXT
CLOSE 2
OPEN P$(0) + FF$ FOR RANDOM AS #1 LEN = 48
	FOR X = 0 TO 18
	FIELD #1, X * 2 AS X$, 2 AS Q$(X + 1), 48 - 2 - 2 * X AS X$
	NEXT
	FIELD #1, 38 AS X$, 2 AS Q$(22), 2 AS Q$(23), 3 AS Q$(20), 3 AS Q$(21)
	GET #1, AP%(0) + AP%(2)
	FOR X = 0 TO 18: NG%(X) = CVI(Q$(X + 1)): NEXT
	FOR X = 0 TO 1: YN$(X) = Q$(20 + X): NEXT
	VS% = CVI(Q$(22)): HS% = CVI(Q$(23))
CLOSE 1
AP=1

6 IF NOT _FILEEXISTS("TOURNEY") THEN 10
OPEN "TOURNEY" FOR INPUT AS #2
INPUT #2,FF$
FOR I=0 TO 2:INPUT #2,AP%(I):NEXT
CLOSE 2
IF AP%(2) = AP%(1) THEN KILL "TOURNEY":END
OPEN P$(0) + FF$ + ".TOU" AS #1 LEN=90
	FOR X=0 TO 14
	FIELD #1,X*2 AS X$,2 AS Q$(X+1),90-2-2*X AS X$
	NEXT
	FIELD #1,30 AS X$,2 AS Q$(16),2 AS Q$(17),15 AS Q$(18),15 AS Q$(19),26 AS X$
	FIELD #1,64 AS X$,3 AS Q$(20),3 AS Q$(21),6 AS Q$(22),8 AS Q$(23),6 AS X$
	FIELD #1,84 AS X$,2 AS Q$(24),2 AS Q$(25),2 AS Q$(26)
	GET #1,AP%(0)+AP%(2)
	VS%=CVI(Q$(16)):HS%=CVI(Q$(17))
	VT$=Q$(18):W$=Q$(19)
	FOR X=0 TO 14:NG%(X)=CVI(Q$(X+1)):NEXT
	FOR X=0 TO 3:YN$(X)=Q$(20+X):NEXT
	FOR X=1 TO 3:NG%(X+14)=CVI(Q$(X+23)):NEXT
CLOSE 1
	AP=1:TOU = 1

10 T=1200:H=1:T1(1)=5:T1(0)=5:X$(0)="A ":X$(1)="B ":X$(2)="C ":X$(3)="D "
	C7$(0)="NO SHOT CLOCK    ":C7$(1)="45 SEC SHOT CLOCK":C7$(2)="35 SEC SHOT CLOCK"
	DATA "NORMAL"
	DATA "AGGRESSIVE"
	DATA "SAFE"
	DATA "QUICK OFFENSE (LAST 3 MIN)"
	DATA "DELAY OFFENSE (LAST 3 MIN)"
	DATA "MILK CLOCK TO 15 SEC (IF USING SHOT CLOCK)"
	DATA "STALL-ONLY REAL GOOD SHOT (MUST BE WITHIN 10 POINTS)"
	DATA "TOTAL STALL (LAST 3 MIN)"
	DATA "HOLD BALL VS PASSIVE ZONE (MUST BE AHEAD, WITH NO SHOT CLOCK)"
	DATA "SHOOT ONLY THREE POINTERS (LAST 3 MIN)"
	FOR I=0 TO 9:READ O$(I):NEXT
	TS$(0)="N":TS$(1)="Y"
	CM$(0)="COACH AND SELECT SHOTS           "
	CM$(1)="COACH ONLY AND LET COMPUTER SHOOT"
	U5$(0)="HUMAN OPPONENT           "
	U5$(1)="COMPUTER IS VISITING TEAM"
	U5$(2)="COMPUTER IS HOME TEAM    "
	U5$(3)="COMPUTER VS COMPUTER     "
	LC$(0)="@ TEAM 1    "
	LC$(1)="HOME COURT ADVANTAGE"
	LC$(2)="NEUTRAL SITE        "
	TB$(0)="SHOOT 1+1":TB$(1)="SHOOT 2  "
	PB$(0)="VERBOSE        "
	PB$(1)="HAFFNER CLASSIC"
	DATA "SOLID MAN TO MAN"
	DATA "PRESSURE MAN TO MAN"
	DATA "PASSIVE 2-3 ZONE"
	DATA "1-3-1 TRAPPING ZONE"
	DATA "FULL COURT MAN TO MAN PRESS/SOLID MAN TO MAN"
	DATA "FULL COURT MAN TO MAN (RUN & JUMP) PRESS/SOLID MAN TO MAN"
	DATA "FULL COURT MAN TO MAN (RUN & JUMP) PRESS/PRESSURE MAN TO MAN"
	DATA "PASSIVE 2-2-1 ZONE PRESS/2-3 ZONE"
	DATA "PASSIVE 2-2-1 ZONE PRESS/SOLID MAN TO MAN"
	DATA "PASSIVE 2-2-1 ZONE PRESS/PRESSURE MAN TO MAN"
	DATA "TRAPPING 1-2-1-1 ZONE PRESS/SOLID MAN TO MAN"
	DATA "TRAPPING 1-2-1-1 ZONE PRESS/PRESSURE MAN TO MAN"
	DATA "TRAPPING 1-2-1-1 ZONE PRESS/2-3 ZONE  "
	DATA "TRAPPING 1-2-1-1 ZONE PRESS/1-3-1 TRAPPING ZONE"
	DATA "FULL COURT M-M DENIAL & FOUL (LAST 3 MIN WHEN DOWN)"
	FOR I=0 TO 14:READ D$(I):NEXT I
	DATA "NORMAL                            "
	DATA "AGGRESSIVE                        "
	DATA "SAFE                              "
	DATA "QUICK OFFENSE (LAST 3 MIN)        "
	DATA "DELAY OFFENSE (LAST 3 MIN)        "
	DATA "MILK CLOCK TO 15 SEC-IF USING S.C."
	DATA "STALL-GOOD SHOT-MUST BE WITHIN 10 "
	DATA "TOTAL STALL (LAST 3 MIN)          "
	DATA "HOLD BALL VS PASS.ZN-AHEAD-NO S.C."
	DATA "SHOOT ONLY THREES (LAST 3 MIN)    "
	FOR I=0 TO 9:READ OB$(I):NEXT
	DATA "SOLID MAN TO MAN                  "
	DATA "PRESSURE MAN TO MAN               "
	DATA "PASSIVE 2-3 ZONE                  "
	DATA "1-3-1 TRAPPING ZONE               "
	DATA "FULL COURT M-M PRESS/SOLID M-M    "
	DATA "M-M (RUN & JUMP) PRESS/SOLID M-M  "
	DATA "M-M (RUN & JMP) PRESS/PRESSURE M-M"
	DATA "PASSIVE 2-2-1 ZONE PRESS/2-3 ZONE "
	DATA "PASSIVE 2-2-1 ZONE PRESS/SOLID M-M"
	DATA "PASSIVE 2-2-1 ZN PRSS/PRESSURE M-M"
	DATA "TRAP 1-2-1-1 ZONE PRESS/SOLID M-M "
	DATA "TRAP 1-2-1-1 ZN PRESS/PRESSURE M-M"
	DATA "TRAP 1-2-1-1 ZONE PRESS/2-3 ZONE  "
	DATA "TRAP 1-2-1-1 ZN PRSS/1-3-1 TRAP ZN"
	DATA "DENIAL & FOUL-LAST 3 MIN WHEN DOWN"
	FOR I=0 TO 14:READ DB$(I):NEXT I
	FOR I=0 TO 1:FOR I1=0 TO 4:B1(I,I1)=-1
	NEXT I1:NEXT I
END SUB

SUB LINEUPS ()
	CLS
	COLOR TR%(P9,0),TR%(P9,1):PRINT B$(P9);:COLOR 15,0:PRINT " TEAM ROSTER    COACH: "C$(P9);
	PRINT "  RECORD: ";:PRINT USING "##";TR%(P9, 7);:PRINT "-";:PRINT USING "##";TR%(P9, 8)
	COLOR 14:PRINT "# NAME         POS FG  FT 3FG %3A ORB DRB RB PA  S  B CX EF  PT  F  FC  PTS/G"
	LOCATE 3,1
	FOR R1=0 TO 13
	IF B%(P9,R1,18)<>0 OR AA$(P9,R1)="XXX" OR AA$(P9,R1)="" THEN 71
	COLOR 2
	IF R1<=9 THEN PRINT USING "# ";R1;
	IF R1>9 THEN PRINT X$(R1-10);
	COLOR 15
	PRINT LEFT$(AA$(P9,R1),12);
	LOCATE ,16:PRINT PO$(P9, R1);
	LOCATE ,20
	L=0:L=A(P9,R1,3)-A(P9,R1,7)-A(P9,R1,11)-A(P9,R1,12):IF L<=0 THEN L=0
	PRINT USING "## ###  ##  ##  ##  ## ## ";A(P9,R1,0),A(P9,R1,1),A(P9,R1,20),A(P9,R1,19),A(P9,R1,21)*2/10,A(P9,R1,2)*2/10,(A(P9,R1,2)+A(P9,R1,21))/5;
	PRINT USING "## ## ##";A(P9,R1,4),A(P9,R1,5),A(P9,R1,6);
	IF L<=0 AND (H=1 OR H=2 AND T>120) THEN COLOR 12
	PRINT USING "### ";L;
	COLOR 15
	IF FA%(P9,R1)*-1>=5 AND (H=1 OR H=2 AND T>120) THEN COLOR 12
	PRINT USING "##";FA%(P9,R1)*-1;
	COLOR 15
	LOCATE ,61:PRINT USING"###  ";A(P9,R1,8)*2+A(P9,R1,10)+W%(P9,R1,0);
	IF A(P9,R1,12)>=4 THEN COLOR 12
	PRINT USING "# ";A(P9,R1,12);
	COLOR 15
	PRINT USING "###   ";A(P9,R1,17);
	IF RS(P9,R1,0) = 0 THEN
	 PRINT "--.-"
	ELSE
	 PRINT USING "##.#";(RS(P9,R1,3)*2+RS(P9,R1,5)+RS(P9,R1,13))/RS(P9,R1,0)
	END IF

71 NEXT R1
	LOCATE 18,1:COLOR 9,0:PRINT STRING$(27,205);CHR$(203);STRING$(51,205)
	FOR R1=1 TO 7:LOCATE R1+18,28:PRINT CHR$(186);:NEXT
	LOCATE 19,1:COLOR 14,0:PRINT "STARTING LINEUP"
	IF C1=1 THEN
	 FOR M=0 TO 4
	LOCATE M+20,1
	 COLOR 2,0
	 PRINT USING "# ";M;
	 COLOR 15,0
	 PRINT "ENTER "PS$(M);" # ";
	 Z=B1(P9,M)
	 GOSUB 90
	 PRINT AA$(P9,Z);:LOCATE Z+3-CV%,3
	 COLOR TR%(P9,0),TR%(P9,1)
	 PRINT LEFT$(AA$(P9,Z),12)
	 COLOR 15,0
	 NEXT
	 GOTO 73
	END IF
	FOR I=0 TO 4
	LOCATE I+20,1
	COLOR 2,0:PRINT USING "# ";I;:COLOR 15:PRINT "ENTER "PS$(I);" # ";

72 I$=GetKeyPress$
	CALL ALPHANUM (I$, J)
	IF J<0 OR J>13 OR A(P9,J,12)>=NF% OR AA$(P9,J)="XXX" OR B%(P9,J,18)<>0 THEN 72
	FOR I2=0 TO 4:IF B1(P9,I2)=J THEN 72
	NEXT I2
	B1(P9,I)=J
	Z=J
	GOSUB 90
	PRINT AA$(P9,J);
	LOCATE J+3-CV%,3:COLOR TR%(P9,0),TR%(P9,1)
	PRINT LEFT$(AA$(P9,J),12)
	COLOR 15,0
	NEXT

73 LOCATE 25,1:COLOR 12,0:PRINT "# TO CHANGE (0-4) 6=NONE";
	LOCATE 1,1

74 I$=GetKeyPress$
	I1=VAL(I$):IF I1=6 THEN 100
	IF I1<0 OR I1>4 THEN 73
	IF X=50 AND I1=B AND P9=P THEN LOCATE 20,29:COLOR 14,0:PRINT AA$(P9,B1(P9,I1))" IS AT THE FT LINE":GOTO 73
	LOCATE 25,1:PRINT "                         ";
	J=B1(P9,I1):Z=J:TM%(P9,J)=T:GOSUB 90:LOCATE J+3-CV%,3:COLOR 15,0:PRINT LEFT$(AA$(P9,J),12)
	LOCATE I1+20,1:PRINT "                          ";
	B1(P9,I1)=-1
	LOCATE ,1:COLOR 2:PRINT USING"# ";I1;:COLOR 15:PRINT "ENTER "PS$(I1);" # ";

75 I$=GetKeyPress$
	CALL ALPHANUM (I$, J)
	IF J<0 OR J>13 OR A(P9,J,12)>=NF% OR AA$(P9,J)="XXX" OR B%(P9,J,18)<>0 THEN 75
	FOR I2=0 TO 4:IF B1(P9,I2)=J THEN 75
	NEXT I2
	B1(P9,I1)=J:Z=J:GOSUB FATIGUE:GOSUB 90:PRINT AA$(P9,J);:LOCATE J+3-CV%,3:COLOR TR%(P9,0),TR%(P9,1):PRINT LEFT$(AA$(P9,J),12):COLOR 15,0
	GOTO 73

FATIGUE:
	IF TM%(P9,J)-T>60 AND TM%(P9,J)<120 THEN FA%(P9,J)=FA%(P9,J)+1
	IF TM%(P9,J)-T>=120 THEN FA%(P9,J)=FA%(P9,J)+4
	IF FA%(P9,J)>0 THEN FA%(P9,J)=0
	RETURN

90  CV%=0:FOR IP%=0 TO Z
	IF B%(P9,IP%,18)<>0 OR AA$(P9,IP%)="" OR AA$(P9,IP%)="XXX" THEN CV%=CV%+1
	NEXT
	RETURN

100 CV%=0
	FOR I1=0 TO 13
	IF B%(P9,I1,18)<>0 OR AA$(P9,I1)="XXX" OR A(P9,I1,12)>=NF% THEN CV%=CV%+1
	NEXT
	IF 14-CV%<5 THEN GOTO MENUS
	FOR I1=0 TO 4
	IF A(P9,B1(P9,I1),12)>=NF% THEN LOCATE 20,29:COLOR 14,0:PRINT AA$(P9,B1(P9,I1))" HAS FOULED OUT":GOTO 73
	NEXT
MENUS:
	CALL OFFENSE
END SUB

SUB OFFENSE ()
OFFENSE:

109 COLOR TR%(P9,0),TR%(P9,1):CLS
	PRINT TAB(33) "OFFENSIVE STYLE":PRINT
	FOR I=0 TO 9
	LOCATE ,5:PRINT USING "# ";I;:PRINT O$(I)
	NEXT
	PRINT
	LOCATE 14,5:PRINT "SELECT OFFENSIVE STYLE FOR "B$(P9)

106 I$=GetKeyPress$
	I1=VAL(I$):IF I1<0 OR I1>9 THEN 106
	IF (I1=3 OR I1=4 OR I1=7 OR I1=9) AND (H<2 OR H>=2 AND T>180) THEN BEEP:LOCATE 18,1:PRINT "CAN ONLY USE LAST 3 MIN OF 2ND HALF OR OT":I$ = GetKeyPress$
	IF I1=8 AND D2(1-P9)<>2 THEN BEEP:LOCATE 18,1:PRINT "DEFENSE NOT IN PASSIVE ZONE":I$ = GetKeyPress$
	IF I1=4 AND S(P9,0)-S(1-P9,0)>-11 THEN BEEP:LOCATE 18,1:PRINT "ILLEGAL SELECTION":I$ = GetKeyPress$
	IF I1=9 AND X3%=0 THEN BEEP:LOCATE 18,1:PRINT "NOT USING 3 POINT SHOT":I$ = GetKeyPress$
	IF I1=5 AND C7=0 THEN BEEP:LOCATE 18,1:PRINT "NOT USING SHOT CLOCK":I$ = GetKeyPress$
	IF I1=7 AND S(P9,0)-S(1-P9,0)<=0 THEN BEEP:LOCATE 18,1:PRINT "ILLEGAL SELECTION":I$ = GetKeyPress$
	OF%(P9)=I1
	CZ%(P9)=0
	IF H<2 OR H>=2 AND T>120 THEN GOTO DEFENSE
	PRINT "CRASH OFFENSIVE BOARDS (LAST 2 MIN) (YN)";

111 I$=GetKeyPress$
	IF UCASE$(I$)="Y" THEN CZ%(P9)=1

DEFENSE:
	CALL DEFENSEMENU
END SUB

SUB FOULSAFE ()

1200 CLS:COLOR 15:A=0:S2=1:S3=1:SW=0:FOR ZZ=0 TO 4
	IF A(P9,B1(P9,ZZ),22)=50 THEN A=A+1:IF SW=0 THEN PRINT:PRINT "THE FOLLOWING PLAYER(S) ARE PLAYING SAFE BUT CAN NOW PLAY NORMAL IF YOU WISH":SW=1
	IF A(P9,B1(P9,ZZ),22)=50 AND SW=1 AND S2<6 THEN LOCATE S2+3,1:PRINT S2;"-";AA$(P9,B1(P9,ZZ)):P5(A)=S2:P4(A)=ZZ:S2=S2+1:S3=S3+1
	NEXT ZZ:IF SW=0 THEN 1214
	A=1:PRINT:PRINT "Z - CONTINUE"

1206 I$=GetKeyPress$
	IF UCASE$(I$)="Z" AND MJ=0 THEN 1214
	IF UCASE$(I$)="Z" AND MJ=25 THEN 1230
	P6=VAL(I$):IF P6<1 OR P6>(S2+1) THEN 1206
	A=P6:IF P6=P5(P6) THEN A(P9,B1(P9,P4(A)),17)=A(P9,B1(P9,P4(A)),17)*3:A(P9,B1(P9,P4(A)),22)=0:LOCATE P5(A)+3,20:PRINT AA$(P9,B1(P9,P4(A)))" WILL NOW PLAY NORMAL DEFENSE!":CALL STEALADJ:D1(P9)=D1(P9)-1:A=A+1:MJ=25:GOTO 1206

1214 A=0:S2=1:FOR ZZ=0 TO 4
	IF H<=1 AND A(P9,B1(P9,ZZ),12)>=NF%-3 AND A(P9,B1(P9,ZZ),22)=0 OR A(P9,B1(P9,ZZ),12)=NF%-1 AND A(P9,B1(P9,ZZ),22)=0 THEN A=A+1:IF S2=1 THEN CLS:PRINT:PRINT "THE FOLLOWING PLAYER(S) CAN ME MADE TO PLAY SAFE IF YOU WISH":PRINT
	IF A=0 AND ZZ>3 THEN 1230
	IF S2=A AND S2<6 THEN PRINT S2;"- ";AA$(P9,B1(P9,ZZ)):P5(A)=S2:P4(A)=ZZ:S2=S2+1:S3=S3+1
	NEXT ZZ
	A=1:PRINT:PRINT "Z - CONTINUE"

1220 I$=GetKeyPress$
	IF UCASE$(I$)="Z" THEN 1230
	P6=VAL(I$):IF P6<1 OR P6>(S2+1) THEN 1220
	A=P6:IF P6=P5(P6) THEN A(P9,B1(P9,P4(A)),17)=INT((A(P9,B1(P9,P4(A)),17)+1)/3):A(P9,B1(P9,P4(A)),22)=50:LOCATE P5(A)+3,20:PRINT AA$(P9,B1(P9,P4(A)))" WILL NOW PLAY SAFE!":CALL STEALADJ:D1(P9)=D1(P9)+1:A=A+1:S3=S3+1:GOTO 1220

1230 MJ=0
	FO=99:IF H=1 AND T=1200 THEN FO=0
END SUB

SUB FOULHARD ()
	FOR I=0 TO 1:FOR I1=0 TO 13
	IF A(I,I1,22)=50 THEN A(I,I1,22)=0:A(I,I1,17)=A(I,I1,17)*3:D1(I)=D1(I)-1:MJ=50
	NEXT I1
	IF MJ=50 THEN MJ=0:F5%(I,0)=0:FOR I1=0 TO 4:F5%(I,0)=F5%(I,0)+A(I,B1(I,I1),17):NEXT I1
	NEXT I
END SUB

SUB STEALADJ ()
	FOR I=0 TO 1
	F5%(I,0)=0
	F5%(I,1)=0
	FOR I1=0 TO 4
	F5%(I,0)=F5%(I,0)+A(I,B1(I,I1),17)
	F5%(I,1)=F5%(I,1)+A(I,B1(I,I1),18)
	NEXT I1
	NEXT I
END SUB

SUB ALPHANUM (I$,J)
	J = VAL (I$)
	IF UCASE$(I$)="A" THEN J=10
	IF UCASE$(I$)="B" THEN J=11
	IF UCASE$(I$)="C" THEN J=12
	IF UCASE$(I$)="D" THEN J=13
	IF UCASE$(I$)="E" THEN J=14
END SUB

SUB BOXSCREEN ()
	FOR I=0 TO 1:COLOR TR%(I,0),TR%(I,1)
	PRINT B$(I):COLOR 14,0
	PRINT "NAME" TAB(14) " MIN   FG- A 3FG- A  FT- A ORB  RB  PT  F   A   B   S  TO"
	FOR I1=0 TO 13
	IF AA$(I,I1)="XXX" OR ZZ(I,I1)=0 THEN 8529
	COLOR 15:PRINT AA$(I,I1);TAB(14)
	IF ZZ(I,I1)<>0 THEN PRINT USING "##";INT(ZZ(I,I1)/60);:PRINT ":";:IF ZZ(I,I1)-INT(ZZ(I,I1)/60)*60>9 THEN PRINT USING "##";ZZ(I,I1)-INT(ZZ(I,I1)/60)*60; ELSE PRINT "0";:PRINT USING "#";ZZ(I,I1)-INT(ZZ(I,I1)/60)*60;
	LOCATE ,21:PRINT USING "##";A(I,I1,8);:PRINT "-";:PRINT USING"##";A(I,I1,7);:PRINT USING"  ##";W%(I,I1,0);:PRINT"-";:PRINT USING "##";W%(I,I1,1);:PRINT USING"  ##";A(I,I1,10);:PRINT"-";:PRINT USING"##";A(I,I1,9);
	PRINT USING "  ##  ## ###  #  ##  ##  ##  ##  ##  ##";A(I,I1,24),A(I,I1,11),A(I,I1,8)*2+A(I,I1,10)+W%(I,I1,0),A(I,I1,12),A(I,I1,14),A(I,I1,15),A(I,I1,13),A(I,I1,23);
	IF ZZ(I,I1)=0 THEN LOCATE ,15:PRINT"DNP" ELSE PRINT
	V9(0)=V9(0)+A(I,I1,8)
	V9(1)=V9(1)+A(I,I1,7)
	V9(2)=V9(2)+A(I,I1,10)
	V9(3)=V9(3)+A(I,I1,9)
	V9(4)=V9(4)+A(I,I1,11)
	V9(5)=V9(5)+(A(I,I1,8)*2)+A(I,I1,10)+W%(I,I1,0)
	V9(13)=V9(13)+W%(I,I1,0)
	V9(14)=V9(14)+W%(I,I1,1)
	V9(6)=V9(6)+A(I,I1,12)
	V9(7)=V9(7)+A(I,I1,14)
	V9(8)=V9(8)+A(I,I1,15)
	V9(9)=V9(9)+A(I,I1,13)
	V9(11)=V9(11)+A(I,I1,24)
	V9(12)=V9(12)+A(I,I1,23)
	V9(10)=V9(10)+ZZ(I,I1)

8529 NEXT I1
	IF V9(3)=0 THEN V9(3)=1
	PRINT:COLOR 14:PRINT "TOTALS";:COLOR 15:PRINT TAB(14) INT(V9(10)/60);:LOCATE ,21:PRINT USING"##";V9(0);:PRINT "-";:PRINT USING "###";V9(1);
	LOCATE ,28:PRINT USING "##";V9(13);:PRINT "-";:PRINT USING "##";V9(14);
	LOCATE ,35:PRINT USING "##";V9(2);:PRINT "-";:PRINT USING "##";V9(3);
	LOCATE ,42:PRINT USING "##  ## ### ##  ##  ##  ##  ##";V9(11),V9(4),V9(5),V9(6),V9(7),V9(8),V9(9),V9(12)
	PRINT TAB(22);
	IF V9(1)<>0 THEN PRINT INT(((V9(0)/V9(1))*100)+.5);"%";
	PRINT TAB(35);
	IF V9(3)<>0 THEN PRINT INT(((V9(2)/V9(3))*100)+.5);"%"
	PRINT
	COLOR 14:PRINT"TOTAL TURNOVERS -";:COLOR 15:PRINT T0(I)
	COLOR 14:PRINT"TOTAL REBOUNDS  -";:COLOR 15:PRINT R3(I)
	FOR I2=0 TO 14:V9(I2)=0:NEXT I2
	I$ = GetKeyPress$
	NEXT I
END SUB

SUB SHOTPERCENT ()
	FX%=A(P,B1(P,B),0)+TP%(D)+TP%(P)
	TP%(D)=0:TP%(P)=0
	IF FA%(P,B1(P,B))<=-5 THEN FX%=FX%-10
	F=FX%+D1(D)+D8(0,D2(D)):J8%=0
	IF N=P THEN F=F+HF%(0,TR%(P,6))
	IF N<>P AND N<>2 THEN F=F+HF%(1,TR%(P,6))
	F3S%=INT(RND(1)*100)+1
	TPA%=0
	IF DT%(D)=2 OR DT%(D)=7 OR DT%(D)=12 THEN TPA%=3
	IF DT%(D)=1 OR DT%(D)=6 OR DT%(D)=9 OR DT%(D)=11 THEN TPA%=-5
	IF OF%(P)=9 AND (F3S%>A(P,B1(P,B),19)+F5%(D,3)+TPA% OR A(P,B1(P,B),19)=0) THEN F3S%=INT(RND(1)*5)+11:J8%=1:GOTO 925
	IF OF%(P)=9 THEN 924
	IF F3S%>A(P,B1(P,B),19)+F5%(D,3)+TPA% OR A(P,B1(P,B),19)=0 THEN F3S%=INT(RND(1)*5)+3:GOTO 925

924 FX%=A(P,B1(P,B),20)
	IF FA%(P,B1(P,B))<=-5 THEN FX%=INT(FX%*.67 + .5)
	F3S%=FX%+F5%(D,2):J8%=1
	IF A(P,B1(P,B),3)-A(P,B1(P,B),7)-A(P,B1(P,B),11)-A(P,B1(P,B),12)<=0 AND (H=1 OR H=2 AND T>120) THEN F3S%=INT(RND(1)*5)+3:J8%=0

925 REM
END SUB

SUB THREEFT ()
	A(P,B1(P,B),10)=A(P,B1(P,B),10)+1
	RN=INT(RND(1)*100)+1
	IF F3=1 AND RN<=50 THEN U$="FREE THROW IS GOOD"
	IF F3=1 AND RN>50 THEN U$="FREE THROW IS GOOD"
	RN=INT(RND(1)*100)+1
	IF F3=2 AND RN<=50 THEN U$="SECOND FREE THROW IS GOOD"
	IF F3=2 AND RN>50 THEN U$="HE HITS THE SECOND ONE"
	 RN=INT(RND(1)*100)+1
	IF F3=3 AND RN<=50 THEN U$="THIRD FREE THROW IS GOOD"
	IF F3=3 AND RN>50 THEN U$="HE HITS THE LAST ONE"
	CALL PBP:S(P,H)=S(P,H)+1:S(P,0)=S(P,0)+1:CALL MAINSCREEN
END SUB

SUB MADEFT ()
	A(P,B1(P,B),10)=A(P,B1(P,B),10)+1
	IF U6<>0 THEN LOCATE F3+9,1:CALL DELAY:PRINT F3;" GOOD"
	S(P,H)=S(P,H)+1:S(P,0)=S(P,0)+1
	CALL MAINSCREEN:CALL DELAY
END SUB

SUB MISSFT ()
	IF U6=0 THEN 3699
	CALL DELAY
	LOCATE F3+9,1
	PRINT F3;" MISSED"
	CALL DELAY

3699 REM
END SUB

SUB BADFT ()
	IF F3=1 THEN U$="FIRST FREE THROW IS MISSED"
	IF F3=2 THEN U$="SECOND FREE THROW IS MISSED"
	IF F3=3 THEN U$="THIRD FREE THROW IS MISSED"
	CALL PBP
END SUB

SUB PRELOAD ()

1100 NT = 0
OPEN P$(0) + "BASK." + YN$ FOR RANDOM AS #1 LEN = 655
	Y2 = LOF(1)
	FIELD #1, 15 AS Q$(0)
	FOR I1 = 1 TO Y2 / 655
	GET #1, I1
	FOR I2 = 1 TO 15
	IF ASC(MID$(Q$(0), I2, 1)) < 32 OR ASC(MID$(Q$(0), I2, 1)) > 123 OR UCASE$(LEFT$(Q$(0), 3)) = "NOT" OR UCASE$(LEFT$(Q$(0), 3)) = "UN" THEN 1105
	NEXT I2
	NT = NT + 1
	V$(NT) = Q$(0): V%(NT) = I1

1105 NEXT I1
CLOSE 1
	CALL TEAMSELECT
END SUB

SUB TEAMSELECT ()

1102 SELECTION% = 1
	Count% = NT
	Start% = 1
	FileFGColr% = 15:FileBGColr% = 4
	HiLiteFGColr% = 0:HiLiteBGColr% = 7
	Rows% = 20
	Columns% = 4
	Spacing% = 6
	Row% = 4
	Column% = 1
	COLOR , 4: CLS : LOCATE , 33: COLOR 14
	PRINT "TEAM SELECTION": COLOR 15
	LOCATE 25, 1: COLOR 14: PRINT "ESC"; : COLOR 15
	PRINT "-SELECT NEW ID  PGDN  PGUP  "; : COLOR 14
	PRINT "ENTER"; : COLOR 15: PRINT "-SELECTS TEAM";
	
_MouseShow "DEFAULT"
20   MAMenu V$(), SELECTION%, Start%, Count%, EXITCODE%, FileFGColr%, FileBGColr%, HiLiteFGColr%, HiLiteBGColr%, Rows%, Columns%, Spacing%, Row%, Column%
_MouseHide

	IF EXITCODE% = 27 THEN BO% = 1: GOTO 21
	IF EXITCODE% = -71 THEN Start% = 1: EXITCODE% = 3: SELECTION% = 1: GOTO 20
	IF EXITCODE% = -79 THEN Start% = NT: EXITCODE% = 3: SELECTION% = NT: GOTO 20
	IF EXITCODE% = -73 THEN Start% = Start% - 80: IF Start% < 1 THEN Start% = 1
	IF EXITCODE% = -81 THEN Start% = Start% + 80: IF Start% > NT THEN Start% = NT
	IF EXITCODE% = -81 OR EXITCODE% = -73 THEN EXITCODE% = 3: SELECTION% = Start%: GOTO 20
	I1 = V%(SELECTION%)
	CALL GETATEAM (I1,YN$)

21   END SUB

SUB SELECTID ()

56 COLOR 15,0:CLS
	JJ=9
	SN=1:LOCATE 6,8:COLOR 15,4
	PRINT " Ö"; STRING$(61,196);"· ";:FOR II=1 TO JJ:LOCATE 6+II,8
	PRINT " º"; STRING$(61,32); "º ";:NEXT
	LOCATE 7+JJ,8
	PRINT " Ó";STRING$(61,196); "½ ";:LOCATE 7,32
	LOCATE ,12:PRINT "ENTER DISK ID: ":PRINT
	LOCATE ,12:PRINT "THE DISK ID IS USUALLY THE LAST TWO DIGITS OF THE"
	LOCATE ,12:PRINT "SEASON DISK YOU ARE PLAYING FROM (IE. 89, 76, 67)."
	PRINT
	LOCATE ,12:PRINT "MAKE SURE NUM LOCK KEY IS OFF TO USE ARROW KEYS"
	LOCATE ,12:PRINT "AND PG UP/PG DN KEYS"
	PRINT
	LOCATE ,12:PRINT "(JUST HIT ENTER TO USE PREVIOUS ID, IF SAME)"
	LOCATE 7,27:INPUT NY$
	COLOR 15,0

61 IF NY$="" THEN CALL TEAMSELECT:GOTO 60
	YN$=NY$
	FOR I=1 TO 500:V$(I)="":NEXT
	CALL PRELOAD

60 IF BO%=1 THEN BO%=0:GOTO 56

58 LOCATE 2,33:COLOR TR%(P9,0),TR%(P9,1):PRINT B$(P9):COLOR 15,4:LOCATE ,33:PRINT "ANY CHANGE (YN)";:I$=GetKeyPress$
	IF UCASE$(I$)="Y" THEN 56
	COLOR 15,0
	CALL TEAMSETUP
	CALL DISABLEPLAYER
END SUB

SUB PRDFAT ()
	'FATIGUE DUE TO PRESSURE DEFENSE ON THE DEFENSE
	FOR I=0 TO 4
	R0=INT(RND(1)*100)+1
	IF R0<=X0% THEN FA%(D,B1(D,I))=FA%(D,B1(D,I))+X1%
	IF R0>X0% THEN FA%(D,B1(D,I))=FA%(D,B1(D,I))+X1%+1
	IF FA%(D,B1(D,I))>0 THEN FA%(D,B1(D,I))=0
	IF FA%(D,B1(D,I))<-5 THEN FA%(D,B1(D,I))=-5
	NEXT
END SUB

SUB PRPFAT ()
	'FATIGUE AGAINST OFFENSIVE PLAYERS SUBJECT TO PRESS
	FOR I=0 TO 4
	R0=INT(RND(1)*100)+1
	IF R0<=X0% THEN FA%(P,B1(P,I))=FA%(P,B1(P,I))+X1%
	IF R0>X0% THEN FA%(P,B1(P,I))=FA%(P,B1(P,I))+X1%+1
	IF FA%(P,B1(P,I))>0 THEN FA%(P,B1(P,I))=0
	IF FA%(P,B1(P,I))<-5 THEN FA%(P,B1(P,I))=-5
	NEXT
END SUB

SUB WHOGETSBALL ()

1040 cnt%=0

1041 cnt%=cnt%+1
	if cnt%=4 then 1047
	M9=0:B=INT(RND(1)*5):X=INT(RND(1)*100)+1
	IF X<=25 THEN 1046
	FOR I=0 TO 4
	M8=INT(C(P,B1(P,I),1)/C(P,B1(P,I),0)+.5)-A(P,B1(P,I),7)
	IF M8<=0 THEN M8=0
	'IF M8<=0 AND A(P,B1(P,I),3)-A(P,B1(P,I),7)-A(P,B1(P,I),11)-A(P,B1(P,I),12)>0 THEN M8=A(P,B1(P,I),3)-A(P,B1(P,I),7)-A(P,B1(P,I),11)-A(P,B1(P,I),12)
	IF M8>=M9 THEN B=I:M9=M8
	NEXT I

1046 M8=A(P,B1(P,B),3)-A(P,B1(P,B),7)-A(P,B1(P,B),11)-A(P,B1(P,B),12)
	IF A(P,B1(P,B),4)>=5 AND M8/A(P,B1(P,B),3)<=0.4 AND H=1 THEN 1041
	IF A(P,B1(P,B),4)>=5 AND M8/A(P,B1(P,B),3)<=0.2 AND H=2 AND T>120 THEN 1041
	IF A(P,B1(P,B),3)<10 AND A(P,B1(P,B),4)>=5 AND M8/A(P,B1(P,B),3)<=0.75 AND H=1 THEN 1041
	IF A(P,B1(P,B),3)<10 AND A(P,B1(P,B),4)>=5 AND M8/A(P,B1(P,B),3)<=0.5 AND H=2 AND T>120 THEN 1041
	GOTO 1041

1047 REM
END SUB

SUB BALLDISTRIBUTE ()
	R0=INT(RND(1)*100)+1
	IF U5=0 AND CM%=1 OR U5=1 AND D=CT AND CM%=1 OR U5=1 AND P=CT OR U5=2 THEN CALL WHOGETSBALL:GOTO 427
	IF D2(D)=2 OR D2(D)=3 THEN 415
	IF S9<=90 AND R0<=15 THEN 424
	IF S9<=100 AND R0<=20 THEN 424
	IF S9<=110 AND R0<=25 THEN 424
	IF S9<=120 AND R0<=30 THEN 424
	IF S9<=130 AND R0<=38 THEN 424
	IF S9<=140 AND R0<=53 THEN 424
	IF S9<=150 AND R0<=60 THEN 424
	IF S9>150 AND R0<=67 THEN 424
	GOTO 423

415 IF S9<=90 AND R0<=8 THEN 424
	IF S9<=100 AND R0<=10 THEN 424
	IF S9<=110 AND R0<=13 THEN 424
	IF S9<=120 AND R0<=15 THEN 424
	IF S9<=130 AND R0<=18 THEN 424
	IF S9<=140 AND R0<=53 THEN 424
	IF S9<=150 AND R0<=60 THEN 424
	IF S9>150 AND R0<=67 THEN 424

423 B=INT(RND(1)*5):GOTO 427

424 IF U6<>0 AND PB%=0 THEN U$="PASS TO CHOICE (0-4)":CALL PBP
	IF U6<>0 AND PB%=1 THEN
	  'IF AP=1 AND U5=2 OR U6=0 THEN 425
	  IF U6=0 THEN 425
	  FOR I=8 TO 15
	  LOCATE I,1
	  CALL BLANKLINE
	  NEXT I
	  LOCATE 8,1
	  PRINT "PASS TO CHOICE (0-4)"
	  CALL DELAY
	END IF

425 I$=GetKeyPress$
	IF UCASE$(I$)="T" THEN CALL TICKER:CALL SCOREBOARD:GOTO 425
	B=VAL(I$):IF B<0 OR B>4 THEN 424

427 END SUB

SUB PLAYINGTIME ()
	'*** INCREMENT MINUTES ***
	FOR I3=0 TO 1:FOR I4=0 TO 4
	ZZ(I3,B1(I3,I4))=ZZ(I3,B1(I3,I4))+TE
	NEXT:NEXT
END SUB

SUB CLOCKOVER ()
	IF T<=0 THEN TE=T:CALL PLAYINGTIME:T=0
END SUB

SUB BLANKLINE ()
	PRINT "                                      "
END SUB

SUB CLEARPBPBOX ()
	'IF AP=1 AND U5=2 OR U6=0 THEN 4096
	IF U6=0 THEN 4096
	FOR I=8 TO 15:LOCATE I,1:CALL BLANKLINE:NEXT I

4096 LOCATE 10
END SUB

SUB DEADBALLOPTIONS ()

220 PB$=""
	CALL CLEARPBP
	IF U5=2 THEN P9=0:CALL COMPUTERSUB:CALL FATIGUE:P9=1:CALL COMPUTERSUB:CALL FATIGUE
	IF U5=1 THEN P9=CT:CALL COMPUTERSUB:CALL FATIGUE
	FO=0
	XM=0
	CALL CLEARPBPBOX
	IF U5=2 THEN S2=0:P9=P:C1=2:CALL CLOCKOVER:CALL STEALADJ:GOTO 222
	LOCATE 9,1:COLOR 14,0
	PRINT "<ENTER>-CONTINUE"
	PRINT "1-SUB ";B$(P)
	PRINT "2-SUB ";B$(D)
	PRINT "3-CHANGE STRATEGY ";B$(P)
	PRINT "4-CHANGE STRATEGY ";B$(D)
	PRINT "5-TIME OUT ";B$(P)
	PRINT "6-TIME OUT ";B$(D)

221 I$=GetKeyPress$
	P3=VAL(I$)
	IF P3<1 OR P3>6 OR U5=1 AND (P3=1 OR P3=3 OR P3=5 AND T1(P)<=0) AND P=CT OR U5=1 AND (P3=2 OR P3=4 OR P3=6 AND T1(D)<=0) AND D=CT THEN S2=0:P9=P:C1=2:CALL CLOCKOVER:CALL STEALADJ:GOTO 227
	IF P3=5 AND T1(P)<=0 OR P3=6 AND T1(D)<=0 THEN 221
	IF P3=1 THEN S2=P
	IF P3=2 THEN S2=D
	IF P3=3 THEN P9=P:CALL OFFENSE:CALL SCOREBOARD:GOTO 220
	IF P3=4 THEN P9=D:CALL OFFENSE:CALL SCOREBOARD:GOTO 220
	IF P3=5 THEN T1(P)=T1(P)-1:CALL RESETFATIGUE:CALL SCOREBOARD:GOTO 220
	IF P3=6 THEN T1(D)=T1(D)-1:CALL RESETFATIGUE:CALL SCOREBOARD:GOTO 220
	C1=1:P9=S2:CALL LINEUPS:CALL FOULSAFE:P9=P:LC%=1:GOTO 220

227 IF LC%=1 THEN LC%=0:CALL CLOCKOVER:CALL SCOREBOARD
	'IF AP=1 AND U5=2 OR U6=0 THEN 222
	IF U6=0 THEN 222
	FOR I=8 TO 15:LOCATE I,1:CALL BLANKLINE:NEXT I

222 END SUB

SUB LASTFIVEMENU ()
	JJ=12
	LOCATE 8,8:COLOR TR%(P,0),TR%(P,1)
	PRINT " Ö"; STRING$(61,196);"· ";:FOR II=1 TO JJ:LOCATE 8+II,8
	PRINT " º"; STRING$(61,32); "º ";:NEXT
	LOCATE 9+JJ,8
	PRINT " Ó";STRING$(61,196); "½ ";:LOCATE 10,15
	PRINT B$(P)" LAST 5 SEC STRATEGY:"
	LOCATE 12,14
	LOCATE ,14:PRINT USING "TIME REMAINING #.#";T
	LOCATE ,14:PRINT "                                     TIME REQD"
	LOCATE ,14:PRINT "0 - FULL COURT PASS (SHOOT A 2)      0.1 - 3.0"
	LOCATE ,14:PRINT "1 - FULL COURT PASS (SHOOT A 3)      0.1 - 3.0"
	LOCATE ,14:PRINT "2 - SHOOT FROM BACKCOURT             0.1 - 0.5"
	LOCATE ,14:PRINT "3 - GET TO HALF COURT, CALL TIME OUT 1.5 - 2.5"
	LOCATE ,14:PRINT "4 - WORK DOWN THE FLOOR FOR A 3      3.0 - 4.0"
	LOCATE ,14:PRINT "5 - WORK DOWN THE FLOOR FOR A 2      3.0 - 5.0"
END SUB

SUB RESETFATIGUE ()

295  FOR I=0 TO 1:FOR I1=0 TO 1:PR%(I,I1)=0:NEXT:NEXT
	FOR I=0 TO 1:FOR I1=0 TO 13:FA%(I,I1)=FA%(I,I1)+1
	IF FA%(I,I1)>0 THEN FA%(I,I1)=0
	NEXT:NEXT
END SUB

SUB WINDEX ()
	  'IF AP=1 AND U5=2 OR U6=0 THEN 4090
	  IF U6=0 THEN 4090
	  FOR I=8 TO 15
	  LOCATE I,1
	  PRINT "                                      "
	  NEXT I
	  LOCATE 8,1

4090 REM
END SUB


SUB BOXTOP ()
	IF N<>2 THEN COLOR TR%(N,0),TR%(N,1):PRINT "@ ";B$(N):PRINT:COLOR 14,0
	FOR I=0 TO 1:PRINT B$(I) TAB(17) STR$(S(I,1)) TAB(20) STR$(S(I,2));
	IF S(0,1)+S(0,2)=S(1,1)+S(1,2) THEN PRINT TAB(23) STR$(S(I,3));
	IF S(0,1)+S(0,2)<> S(1,1)+S(1,2) THEN PRINT TAB(23) "- ";S(I,0): GOTO 8513
	IF S(0,1)+S(0,2)+S(0,3)=S(1,1)+S(1,2)+S(1,3) THEN PRINT TAB(26) STR$(S(I,4));
	IF S(0,1)+S(0,2)+S(0,3)<>S(1,1)+S(1,2)+S(1,3) THEN PRINT TAB(26) "- ";S(I,0):GOTO 8513
	IF S(0,1)+S(0,2)+S(0,3)+S(0,4)=S(1,1)+S(1,2)+S(1,3)+S(1,4) THEN PRINT TAB(29) STR$(S(I,5));
	IF S(0,1)+S(0,2)+S(0,3)+S(0,4)<> S(1,1)+S(1,2)+S(1,3)+S(1,4) THEN PRINT TAB(29) "- "; STR$(S(I,0)):GOTO 8513
	IF S(0,1)+S(0,2)+S(0,3)+S(0,4)+S(0,5)=S(1,1)+S(1,2)+S(1,3)+S(1,4)+S(1,5) THEN LPRINT TAB(32) STR$(S(I,6));
	IF S(0,1)+S(0,2)+S(0,3)+S(0,4)+S(0,5)<>S(1,1)+S(1,2)+S(1,3)+S(1,4)+S(1,5) THEN PRINT TAB(32) "- ";STR$(S(I,0)):GOTO 8513
	IF S(0,1)+S(0,2)+S(0,3)+S(0,4)+S(0,5)+S(0,6)=S(1,1)+S(1,2)+S(1,3)+S(1,4)+S(1,5)+S(1,6) THEN PRINT TAB(35) STR$(S(I,7)) TAB(38) STR$(S(I,0)):GOTO 8513
	IF S(0,1)+S(0,2)+S(0,3)+S(0,4)+S(0,5)+S(0,6)<>S(1,1)+S(1,2)+S(1,3)+S(1,4)+S(1,5)+S(1,6) THEN PRINT TAB(35) "- ";STR$(S(I,0)):GOTO 8513

8513 NEXT I
END SUB

SUB STOPPAGE ()

810 CALL CLEARPBP
	IF U5 = 0 THEN 811
	IF U5=2 THEN P9=0:CALL COMPUTERSUB:CALL FATIGUE:P9=1:CALL COMPUTERSUB:CALL FATIGUE
	IF U5=1 THEN P9=CT:CALL COMPUTERSUB:CALL FATIGUE
	XM=0

811 IF U5=2 THEN S2=0:P9=P:C1=2:CALL CLOCKOVER:GOTO 820
	IF PB%=0 THEN CALL CLEARPBPBOX
	IF PB%=1 AND U6<>0 THEN LOCATE 11,1
	COLOR 14,0
	PRINT "<ENTER>-CONTINUE"
	PRINT "1-TIME OUT ";B$(P)
	PRINT "2-TIME OUT ";B$(D)
	PRINT "3-CHANGE STRATEGY ";B$(P)
	PRINT "4-CHANGE STRATEGY ";B$(D)

813 I$=GetKeyPress$
	P3=VAL(I$):IF P3<1 OR P3>4 THEN S2=0:P9=P:C1=2:CALL CLOCKOVER:GOTO 818
	IF P3=1 AND T1(P)<=0 OR P3=2 AND T1(D)<=0 OR (P3=1 OR P3=3) AND P=CT AND U5=1 OR (P3=2 OR P3=4) AND D=CT AND U5=1 THEN 813
	IF P3=3 THEN P9=P:CALL OFFENSE:CALL SCOREBOARD:GOTO 810
	IF P3=4 THEN P9=D:CALL OFFENSE:CALL SCOREBOARD:GOTO 810
	FOR I=0 TO 1:FOR I1=0 TO 1
	PR%(I,I1)=0
	NEXT:NEXT
	IF P3=1 THEN T1(P)=T1(P)-1:COLOR 14,0:CALL SCOREBOARD:CALL DEADBALLOPTIONS
	IF P3=2 THEN T1(D)=T1(D)-1:COLOR 14,0:CALL SCOREBOARD:CALL DEADBALLOPTIONS
	FOR I=0 TO 1:FOR I1=0 TO 13:FA%(I,I1)=FA%(I,I1)+1
	IF FA%(I,I1)>0 THEN FA%(I,I1)=0
	NEXT:NEXT

818 CALL CLEARPBPBOX

820 END SUB

SUB LASTSHOT ()

210 M5 = 0: IF T <= 2 OR IN = 99 THEN M5 = 1: GOTO 214
	IF T > 2 AND T <= 4 THEN M5 = 2
	IF T > 4 AND T <= 16 THEN M5 = INT(RND(1) * 2) + 3
	IF T > 16 THEN M5 = INT(RND(1) * 3) + 5

214 TE = M5: CALL PLAYINGTIME: T = T - M5: IN = 0: IF C7 >= 1 THEN X8 = X8 - M5
	CALL ZEROCHECK
END SUB
	

SUB ZEROCHECK ()

215 IF T <= .001 THEN TE = T: CALL PLAYINGTIME: T = 0
	IF X8 <= 0 THEN X8 = X8 - X8: T = T - X8: TE = X8: CALL PLAYINGTIME
	CALL MAINSCREEN
END SUB

SUB SELECTPBP ()
	IF PB% = 0 THEN CALL PBP
	IF PB% = 1 AND U6 <> 0 THEN CALL WINDEX: PRINT U$: CALL DELAY
END SUB

SUB PRESSGUARD ()

260 CALL WINDEX
	IF U6 = 0 THEN 264
	IF P7(D) > 0 THEN U$ = B$(D) + " IS PRESSING": CALL SELECTPBP

264 IF P7(D) = 0 OR P7(D) > 2 THEN 263
	IF U5 = 2 OR U5 = 1 AND P = CT THEN
	  ' COMPUTER GUARD FOR PRESS
	  BU% = 1
	  IF A(P, B1(P, 0), 4) >= A(P, B1(P, 1), 4) AND FA%(P, B1(P, 0)) <= 3 THEN BU% = 0
	  GOTO 263
	END IF
	TS% = P: JJ = 8: CALL FRAME: PRINT B$(P); " SELECT GUARD TO HANDLE BALL:"
	LOCATE 12, 14
	LOCATE , 14: PRINT "#   NAME"; TAB(35); "PA"; TAB(38); "FA"
	LOCATE , 14: PRINT "0 - "; AA$(P, B1(P, 0)); TAB(35); A(P, B1(P, 0), 4); TAB(38); abs(FA%(P, B1(P, 0)))
	LOCATE , 14: PRINT "1 - "; AA$(P, B1(P, 1)); TAB(35); A(P, B1(P, 1), 4); TAB(38); abs(FA%(P, B1(P, 1)))
262 I$ = GetKeyPress$
	I1 = VAL(I$): IF I1 < 0 OR I1 > 1 THEN 262
	BU% = I1: COLOR 15, 0
	CALL SCOREBOARD

263 END SUB

SUB SAVESTATS

6000 IF NOT _FILEEXISTS("GAME82") THEN 6035
OPEN "GAME82" FOR INPUT AS #2
	INPUT #2,FF$
	FOR I=0 TO 2:INPUT #2,AP%(I):NEXT:CLOSE 2
	IF AP%(2)>31 THEN 6011
	FOR X=0 TO 1:SX$(AP%(2)+1,X)=B$(X):NEXT
OPEN "TICKER" FOR OUTPUT AS #2
	FOR I=1 TO 32:FOR I1=0 TO 1:FOR I2=1 TO 14
	PRINT #2,SX%(I,I1,I2):NEXT:NEXT:NEXT
	FOR I=1 TO 32:FOR I1=0 TO 1:PRINT #2,SX$(I,I1):NEXT:NEXT
	FOR I=1 TO 32:PRINT #2,ST%(I):NEXT
CLOSE 2

6011 OPEN P$(0) + FF$ FOR RANDOM AS #1 LEN = 48
	FOR X = 0 TO 18
	FIELD #1, X * 2 AS X$, 2 AS Q$(X + 1), 48 - 2 - 2 * X AS X$
	NEXT
	FIELD #1, 38 AS X$, 2 AS Q$(22), 2 AS Q$(23), 3 AS Q$(20), 3 AS Q$(21)
	NG%(13) = 1
	FOR X = 0 TO 18: LSET Q$(X + 1) = MKI$(NG%(X)): NEXT
	FOR X = 0 TO 1: LSET Q$(20 + X) = YN$(X): NEXT
	LSET Q$(22) = MKI$(S(0,0)): LSET Q$(23) = MKI$(S(1,0))
	PUT #1, AP%(0) + AP%(2)
CLOSE 1
	AP%(2)=AP%(2)+1
	AP=1
	IF AP%(1)<AP%(0)+AP%(2) THEN KILL"GAME82":AD=1:GOTO 6065
OPEN "GAME82" FOR OUTPUT AS #2
	PRINT #2,FF$
	FOR I=0 TO 2
	PRINT #2,AP%(I)
	NEXT
CLOSE 2
	GOTO 6065

6035 IF NOT _FILEEXISTS("TOURNEY") THEN 6065
OPEN "TOURNEY" FOR INPUT AS #2
	INPUT #2 ,FF$
	FOR I=0 TO 2
	INPUT #2,AP%(I)
	NEXT
CLOSE 2
OPEN P$(0) + FF$ + ".TOU" AS #1 LEN=90
	FOR X=0 TO 14
	FIELD #1,X*2 AS X$,2 AS Q$(X+1),90-2-2*X AS X$
	NEXT
	FIELD #1,30 AS X$,2 AS Q$(16),2 AS Q$(17),15 AS Q$(18),15 AS Q$(19),26 AS X$
	FIELD #1,64 AS X$,3 AS Q$(20),3 AS Q$(21),6 AS Q$(22),8 AS Q$(23),6 AS X$
	FIELD #1,84 AS X$,2 AS Q$(24),2 AS Q$(25),2 AS Q$(26)
	NG%(13)=1
	FOR X=0 TO 14:LSET Q$(X+1)=MKI$(NG%(X)):NEXT
	FOR X=0 TO 3:LSET Q$(20+X)=YN$(X):NEXT
	FOR X=1 TO 3:LSET Q$(X+23)=MKI$(NG%(X+14)):NEXT
	LSET Q$(16)=MKI$(S(0,0)):LSET Q$(17)=MKI$(S(1,0))
	LSET Q$(18)=VT$:LSET Q$(19)=W$
	PUT #1,AP%(0)+AP%(2)
CLOSE 1
	AP%(2)=AP%(2)+1
	AP=1
OPEN "TOURNEY" FOR OUTPUT AS #2
	PRINT #2,FF$
	FOR I=0 TO 2
	PRINT #2,AP%(I)
	NEXT
CLOSE 2
	CALL TOURNEY
	IF AP%(1)<AP%(0)+AP%(2) THEN KILL "TOURNEY":AD=1:GOTO 6065
	IF AP%(1)<AP%(0)+AP%(2) THEN END

6065 CLS
	H%=N
	FOR PX=0 TO 1
	FOR J=0 TO 13
	A(PX,J,16)=ZZ(PX,J):A(PX,J,17)=A(PX,J,23):A(PX,J,18)=A(PX,J,24)
	NEXT:NEXT
	FOR PX=0 TO 1
	FOR I=0 TO 13
	FOR J=1 TO 12
	A(PX,I,J)=A(PX,I,J+6)
	NEXT
	W0(PX,I)=W%(PX,I,0):W1(PX,I)=W%(PX,I,1)
	NEXT
	Y$(PX)=B$(PX)
	NEXT
	Q=0

6115 C%=0
	CLS
	COLOR 15,0
	CLS:I=Q:CALL DRAWBOX
	U$="COMPILE STATS FOR "+B$(Q)+" (YN)"
	LOCATE ,(80-LEN(U$))/2
	PRINT U$
	COLOR 15,0
	IF AP=1 THEN 6355

6325 I$=GetKeyPress$
	IF UCASE$(I$)="N" THEN C%=1:GOTO 6355
	CLS
	
6355 IF C%=1 THEN 6290
	Y$(Q)=B$(Q):CALL STATCONVERT (Q,QQ):FG$=MID$(B$(Q),4,QQ):R$=FG$+"."+LEFT$(B$(Q),2)
	IF NOT _FILEEXISTS(P$(1)+R$) THEN 6185
OPEN P$(1)+R$ FOR INPUT AS #2
	INPUT #2,B$(Q)
	FOR I=0 TO 13:INPUT #2,AA$(Q,I)
	FOR J=0 TO 13:INPUT #2,Z2(I,J):NEXT J
	INPUT #2,W2(Q,I):INPUT #2,W3(Q,I):NEXT I
	FOR L=0 TO 15:INPUT #2,Z(L):NEXT L
	FOR L=0 TO 15:INPUT #2,Z1(L):NEXT L
CLOSE #2

6185 TG=0
	FOR I=0 TO 13
	IF A(Q,I,2)*2+A(Q,I,4)+W0(Q,I)>Z2(I,13) THEN Z2(I,13)=A(Q,I,2)*2+A(Q,I,4)+W0(Q,I)
	IF A(Q,I,10)>0 THEN Z2(I,0)=Z2(I,0)+1
	FOR J=1 TO 12
	Z2(I,J)=Z2(I,J)+A(Q,I,J)
	IF J=5 OR J=10 OR J=11 THEN 6215
	Z(J)=Z(J)+A(Q,I,J):Z1(J)=Z1(J)+A(1-Q,I,J)

6215 NEXT J
	Z(0)=Z(0)+A(Q,I,10)
	TG=TG+A(Q,I,10)
	NEXT I
	FOR I=0 TO 1:V9(I)=0:FOR I1=0 TO 13:V9(I)=V9(I)+A(I,I1,5):NEXT:NEXT
	Z(15)=Z(15)+R3(Q)-V9(Q):Z1(15)=Z1(15)+R3(1-Q)-V9(1-Q)
	Z(5)=Z(5)+R3(Q):Z1(5)=Z1(5)+R3(1-Q):Z(11)=Z(11)+T0(Q):Z1(11)=Z1(11)+T0(1-Q)
	FOR J=0 TO 13:Z(13)=Z(13)+W0(Q,J):Z(14)=Z(14)+W1(Q,J)
	Z1(13)=Z1(13)+W0(1-Q,J):Z1(14)=Z1(14)+W1(1-Q,J)
	W2(Q,J)=W2(Q,J)+W0(Q,J):W3(Q,J)=W3(Q,J)+W1(Q,J):NEXT J
	Z(10)=Z(10)+S(Q,0):Z1(10)=Z1(10)+S(1-Q,0)
	I=Q:CALL DRAWBOX
	U$="SAVING STATS FOR "+B$(Q)
	LOCATE ,(80-LEN(U$))/2
	PRINT U$
	COLOR 15,0
OPEN P$(1)+R$ FOR OUTPUT AS #1
	PRINT #1,Y$(Q)
	FOR I=0 TO 13:PRINT #1,AA$(Q,I)
	FOR J=0 TO 13:PRINT #1,Z2(I,J):NEXT J
	PRINT #1,W2(Q,I):PRINT #1,W3(Q,I):NEXT I
	FOR L=0 TO 15:PRINT #1,Z(L):NEXT L
	FOR L=0 TO 15:PRINT #1,Z1(L):NEXT L
CLOSE #1
	PRINT
	YY%=0:R$=R$+"S"
	IF NOT _FILEEXISTS(P$(1)+R$) THEN 6405
OPEN P$(1)+R$ FOR INPUT AS #1
	INPUT #1,YY%
	FOR I=1 TO 100:INPUT #1,O%(I):NEXT I
	FOR I=1 TO 100:INPUT #1,HO$(I):NEXT I
	FOR I=1 TO 100:INPUT #1,HT%(I):NEXT I
	FOR I=1 TO 100:INPUT #1,H$(I):NEXT I
	FOR I = 1 TO 100
	FOR I1 = 0 TO 1
	INPUT #1, APT%(I, I1)
	NEXT: NEXT
	FOR I = 1 TO 100: INPUT #1, CRD(I): NEXT I
	FOR I = 1 TO 100: INPUT #1, SITE$(I): NEXT I
CLOSE #1

6405 IF YY%<100 THEN YY%=YY%+1
	IF H%=2 AND TG<12100 THEN H$(YY%)="N": GOTO 6540
	IF H%<>Q AND TG<12100 THEN H$(YY%)="V": GOTO 6540
	IF H%=Q AND TG<12100 THEN H$(YY%)="H": GOTO 6540
	IF H%=Q AND TG<13600 THEN H$(YY%)="H1": GOTO 6540
	IF H%=Q AND TG<15100 THEN H$(YY%)="H2": GOTO 6540
	IF H%=Q AND TG<16600 THEN H$(YY%)="H3": GOTO 6540
	IF H%=Q AND TG<18100 THEN H$(YY%)="H4": GOTO 6540
	IF H%=2 AND TG<13600 THEN H$(YY%)="N1": GOTO 6540
	IF H%=2 AND TG<15100 THEN H$(YY%)="N2": GOTO 6540
	IF H%=2 AND TG<16600 THEN H$(YY%)="N3": GOTO 6540
	IF H%=2 AND TG<18100 THEN H$(YY%)="N4": GOTO 6540
	IF H%<>Q AND TG<13600 THEN H$(YY%)="V1": GOTO 6540
	IF H%<>Q AND TG<15100 THEN H$(YY%)="V2": GOTO 6540
	IF H%<>Q AND TG<16600 THEN H$(YY%)="V3": GOTO 6540
	IF H%<>Q AND TG<18100 THEN H$(YY%)="V4": GOTO 6540

6540 O%(YY%)=S(Q,0)
	HO$(YY%)=Y$(1-Q)
	HT%(YY%)=S(1-Q,0)
	CRD(YY%) = Y3
	IF TR%(0, 9) = 0 THEN TR%(0, 9) = 78
	IF TR%(1, 9) = 0 THEN TR%(1, 9) = 78
	APT%(YY%, 0) = TR%(Q, 9)
	APT%(YY%, 1) = TR%(1 - Q, 9)
	IF S$(1) = "" THEN S$(1) = "MEMORIAL COLISEUM"
	IF N = 2 THEN
		SITE$(YY%) = "NEUTRAL SITE"
	ELSE
		SITE$(YY%) = S$(1)
	END IF
	  OPEN P$(1)+R$ FOR OUTPUT AS #1
	PRINT #1,YY%
	  FOR I=1 TO 100: PRINT #1,O%(I):NEXT I
	FOR I=1 TO 100: PRINT #1,HO$(I):NEXT I
	FOR I=1 TO 100:PRINT #1,HT%(I):NEXT I
	FOR I=1 TO 100:PRINT #1,H$(I):NEXT I
	FOR I = 1 TO 100
	FOR I1 = 0 TO 1
	PRINT #1, APT%(I, I1)
	NEXT: NEXT
	FOR I = 1 TO 100: PRINT #1, CRD(I): NEXT I
	FOR I = 1 TO 100: PRINT #1, SITE$(I): NEXT I
CLOSE #1
	FOR I=1 TO 100
	O%(I)=0:HT%(I)=0:HO$(I)="":H$(I)="":CRD(I)=0:SITE$(I)=""
	FOR I1 = 0 TO 1
	APT%(I, I1) = 0
	NEXT
	NEXT I
	FOR J=0 TO 13:FOR K=0 TO 13
	Z2(J,K)=0:NEXT K:NEXT J
	FOR L=0 TO 15:Z(L)=0:Z1(L)=0:NEXT L

6290 Q=Q+1:Z(12)=0
	IF Q<2 THEN 6115
	IF AP=1 AND AD<>1 THEN 6292
	IF AD=1 THEN END

6292 END SUB

SUB EVENTS (COUNT, SPECIAL)
IF NOT _FILEEXISTS("EVENTS.BOX") THEN 8450
OPEN "EVENTS.BOX" FOR INPUT AS #1
	FOR X = 1 TO 13
	INPUT #1, E%(X)
	NEXT
CLOSE 1

102 IF H - 3 > E%(1) THEN GOSUB 7100: GOTO 8450
	IF S(1, 0) + S(0, 0) > E%(2) THEN GOSUB 7100: GOTO 8450
	IF R3(0) + R3(1) > E%(3) THEN GOSUB 7100: GOTO 8450
	IF S(1, 0) > E%(4) OR S(0, 0) > E%(4) THEN GOSUB 7100: GOTO 8450
	IF R3(1) > E%(5) OR R3(0) > E%(5) THEN GOSUB 7100: GOTO 8450
	 FOR I = 0 TO 1
	FOR I1 = 0 TO 13
	IF A(I, I1, 8) * 2 + A(I, I1, 10) + W%(I, I1, 0) > E%(6) THEN GOSUB 7100: GOTO 8450
	IF A(I, I1, 11) > E%(7) THEN GOSUB 7100: GOTO 8450
	IF A(I, I1, 14) > E%(8) THEN GOSUB 7100: GOTO 8450
	IF A(I, I1, 15) > E%(9) THEN GOSUB 7100: GOTO 8450
	IF A(I, I1, 13) > E%(10) THEN GOSUB 7100: GOTO 8450
	IF W%(I, I1, 0) > E%(11) THEN GOSUB 7100: GOTO 8450
	NEXT
	NEXT
	GOTO 8450

7100 Spec$ = P$(1) + "*.SPC"
	COUNT = FCount%(Spec$)
	COUNT = COUNT + 1
	SPECIAL = 1
	RETURN

8450 END SUB

SUB BOX2SPC (NM$)
OPEN P$(1) + NM$ FOR OUTPUT AS #2
	IF H - 3 > E%(1) THEN PRINT #2, USING "MORE THAN ## OVERTIMES"; E%(1)
	IF S(1, 0) + S(0, 0) > E%(2) THEN PRINT #2, USING "MORE THAN ### COMBINED POINTS"; E%(2)
	IF R3(0) + R3(1) > E%(3) THEN PRINT #2, USING "MORE THAN ### COMBINED REBOUNDS"; E%(3)
	IF S(0, 0) > E%(4) THEN PRINT #2, B$(0); : PRINT #2, USING " SCORED MORE THAN ### POINTS"; E%(4)
	IF S(1, 0) > E%(4) THEN PRINT #2, B$(1); : PRINT #2, USING " SCORED MORE THAN ### POINTS"; E%(4)
	IF R3(0) > E%(5) THEN PRINT #2, B$(0); : PRINT #2, USING " HAD MORE THAN ### REBOUNDS"; E%(5)
	IF R3(1) > E%(5) THEN PRINT #2, B$(1); : PRINT #2, USING " HAD MORE THAN ### REBOUNDS"; E%(5)
	 FOR I = 0 TO 1
	FOR I1 = 0 TO 13
	IF A(I, I1, 8) * 2 + A(I, I1, 10) + W%(I, I1, 0) > E%(6) THEN PRINT #2, AA$(I, I1); : PRINT #2, USING " SCORED MORE THAN ### POINTS"; E%(6)
	IF A(I, I1, 11) > E%(7) THEN PRINT #2, AA$(I, I1); : PRINT #2, USING " HAD MORE THAN ### REBOUNDS"; E%(7)
	IF A(I, I1, 14) > E%(8) THEN PRINT #2, AA$(I, I1); : PRINT #2, USING " HAD MORE THAN ### ASSISTS"; E%(8)
	IF A(I, I1, 15) > E%(9) THEN PRINT #2, AA$(I, I1); : PRINT #2, USING " BLOCKED MORE THAN ### SHOTS"; E%(9)
	IF A(I, I1, 13) > E%(10) THEN PRINT #2, AA$(I, I1); : PRINT #2, USING " HAD MORE THAN ### STEALS"; E%(10)
	IF W%(I, I1, 0) > E%(11) THEN PRINT #2, AA$(I, I1); : PRINT #2, USING " MADE MORE THAN ### 3-PT FIELD GOALS"; E%(11)
	NEXT
	NEXT
	IF N<>2 THEN PRINT #2, "@ ";B$(N):PRINT #2,
	FOR I=0 TO 1
	PRINT #2, B$(I) TAB(17) STR$(S(I,1)) TAB(20) STR$(S(I,2));
	IF S(0,1)+S(0,2)=S(1,1)+S(1,2) THEN PRINT #2, TAB(23) STR$(S(I,3));
	IF S(0,1)+S(0,2)<>S(1,1)+S(1,2) THEN PRINT #2, TAB(23) "- ";S(I,0):GOTO 8963
	IF S(0,1)+S(0,2)+S(0,3)=S(1,1)+S(1,2)+S(1,3) THEN PRINT #2, TAB(26) STR$(S(I,4));
	IF S(0,1)+S(0,2)+S(0,3)<>S(1,1)+S(1,2)+S(1,3) THEN PRINT #2, TAB(26) "- ";S(I,0):GOTO 8963
	IF S(0,1)+S(0,2)+S(0,3)+S(0,4)=S(1,1)+S(1,2)+S(1,3)+S(1,4) THEN PRINT #2, TAB(29) STR$(S(I,5));
	IF S(0,1)+S(0,2)+S(0,3)+S(0,4)<>S(1,1)+S(1,2)+S(1,3)+S(1,4) THEN PRINT #2, TAB(29) "- "; STR$(S(I,0)):GOTO 8963
	IF S(0,1)+S(0,2)+S(0,3)+S(0,4)+S(0,5)=S(1,1)+S(1,2)+S(1,3)+S(1,4)+S(1,5) THEN PRINT #2, TAB(32) STR$(S(I,6));
	IF S(0,1)+S(0,2)+S(0,3)+S(0,4)+S(0,5)<>S(1,1)+S(1,2)+S(1,3)+S(1,4)+S(1,5) THEN PRINT #2, TAB(32) "- ";STR$(S(I,0)):GOTO 8963
	IF S(0,1)+S(0,2)+S(0,3)+S(0,4)+S(0,5)+S(0,6)=S(1,1)+S(1,2)+S(1,3)+S(1,4)+S(1,5)+S(1,6) THEN PRINT #2, TAB(35) STR$(S(I,7)) TAB(38) STR$(S(I,0)):GOTO 8963
	IF S(0,1)+S(0,2)+S(0,3)+S(0,4)+S(0,5)+S(0,6)<>S(1,1)+S(1,2)+S(1,3)+S(1,4)+S(1,5)+S(1,6) THEN PRINT #2, TAB(35) "- ";STR$(S(I,0)):GOTO 8963

8963 NEXT I
	FOR I=0 TO 1:PRINT #2,:PRINT #2, B$(I)
	PRINT #2, "NAME" TAB(14) " MIN   FG- A 3FG- A  FT- A ORB  RB  PT  F   A   B   S  TO"
	FOR I1=0 TO 13
	IF AA$(I,I1)="XXX" THEN 8970
	PRINT #2, AA$(I,I1); TAB(14);
	IF ZZ(I,I1)=0 THEN PRINT #2, TAB(15) "DNP";:GOTO 8968
	PRINT #2, USING "##";INT(ZZ(I,I1)/60);:PRINT #2, ":";
	IF ZZ(I,I1)-INT(ZZ(I,I1)/60)*60>9 THEN PRINT #2, USING "##";ZZ(I,I1)-INT(ZZ(I,I1)/60)*60; ELSE PRINT #2, "0";:PRINT #2, USING "#";ZZ(I,I1)-INT(ZZ(I,I1)/60)*60;

8968 PRINT #2, TAB(21);:PRINT #2, USING "##";A(I,I1,8);
	PRINT #2, "-";:PRINT #2, USING"##";A(I,I1,7);:PRINT #2, USING"  ##";W%(I,I1,0);:PRINT #2,"-";:PRINT #2, USING "##";W%(I,I1,1);:PRINT #2, USING"  ##";A(I,I1,10);:PRINT #2,"-";:PRINT #2, USING"##";A(I,I1,9);
	PRINT #2, USING "  ##  ## ###  #  ##  ##  ##  ##  ##  ##";A(I,I1,24),A(I,I1,11),A(I,I1,8)*2+A(I,I1,10)+W%(I,I1,0),A(I,I1,12),A(I,I1,14),A(I,I1,15),A(I,I1,13),A(I,I1,23)
	V9(0)=V9(0)+A(I,I1,8):V9(1)=V9(1)+A(I,I1,7):V9(2)=V9(2)+A(I,I1,10):V9(3)=V9(3)+A(I,I1,9):V9(4)=V9(4)+A(I,I1,11):V9(5)=V9(5)+(A(I,I1,8)*2)+A(I,I1,10)+W%(I,I1,0):V9(13)=V9(13)+W%(I,I1,0):V9(14)=V9(14)+W%(I,I1,1)
	V9(6)=V9(6)+A(I,I1,12)
	V9(7)=V9(7)+A(I,I1,14):V9(8)=V9(8)+A(I,I1,15):V9(9)=V9(9)+A(I,I1,13):V9(11)=V9(11)+A(I,I1,24):V9(12)=V9(12)+A(I,I1,23)
	V9(10)=V9(10)+ZZ(I,I1)

8970 NEXT I1:IF V9(3)=0 THEN V9(3)=1
	PRINT #2,:PRINT #2, "TOTALS"; TAB(14) INT(V9(10)/60) TAB(21);:PRINT #2, USING"##";V9(0);:PRINT #2, "-";:PRINT #2, USING "###";V9(1);
	PRINT #2, TAB(28) USING "##";V9(13);:PRINT #2, "-";:PRINT #2, USING "##";V9(14);
	PRINT #2, TAB(35) USING "##";V9(2);:PRINT #2, "-";:PRINT #2, USING "##";V9(3);
	PRINT #2, TAB(42) USING "##  ## ### ##  ##  ##  ##  ##";V9(11),V9(4),V9(5),V9(6),V9(7),V9(8),V9(9),V9(12)
	PRINT #2, TAB(22) INT(((V9(0)/V9(1))*100)+.5);"%";TAB(35) INT(((V9(2)/V9(3))*100)+.5);"%":PRINT #2,:PRINT #2,"TOTAL TURNOVERS -"T0(I):PRINT #2,"TOTAL REBOUNDS  -"R3(I)
	FOR I2=0 TO 14:V9(I2)=0:NEXT I2
	NEXT I
	PRINT #2, CHR$(12):CLOSE 2
	END SUB

SUB QUARTERTOTAL ()

FOR I = 0 TO 1
FOR I2 = 0 TO 14: V9(I2) = 0: NEXT
	FOR I1 = 0 TO 13
	V9(0) = V9(0) + A(I, I1, 8)
	V9(1) = V9(1) + A(I, I1, 7)
	V9(2) = V9(2) + A(I, I1, 10)
	V9(3) = V9(3) + A(I, I1, 9)
	V9(4) = V9(4) + A(I, I1, 11)
	V9(5) = V9(5) + (A(I, I1, 8) * 2) + A(I, I1, 10) + W%(I, I1, 0)
	V9(13) = V9(13) + W%(I, I1, 0)
	V9(14) = V9(14) + W%(I, I1, 1)
	V9(6) = V9(6) + A(I, I1, 12)
	V9(7) = V9(7) + A(I, I1, 14)
	V9(8) = V9(8) + A(I, I1, 15)
	V9(9) = V9(9) + A(I, I1, 13)
	V9(11) = V9(11) + A(I, I1, 24)
	V9(12) = V9(12) + A(I, I1, 23)
	NEXT
		IF H = 1 OR H = 2 THEN
	FOR I2 = 0 TO 14
	QR(I, H, I2) = V9(I2) - QR(I, H - 1, I2)
	NEXT
		FOR I1 = 0 TO 13
	 FOR I2 = 7 TO 15
	 QQ(I, H, I1, I2 - 6) = A(I, I1, I2) - QQ(I, H - 1, I1, I2 - 6)
	 NEXT
	 QQ(I, H, I1, 10) = W%(I, I1, 0) - QQ(I, H - 1, I1, 10)
	 QQ(I, H, I1, 11) = W%(I, I1, 1) - QQ(I, H - 1, I1, 11)
	 QQ(I, H, I1, 12) = A(I, I1, 24) - QQ(I, H - 1, I1, 12)
	 QQ(I, H, I1, 13) = A(I, I1, 8) * 2 + A(I, I1, 10) + W%(I, I1, 0) - QQ(I, H - 1, I1, 13)
	 QQ(I, H, I1, 14) = A(I, I1, 23) - QQ(I, H - 1, I1, 14)
	 NEXT
	 END IF
		IF H = 3 THEN
	FOR I2 = 0 TO 14
	QR(I, H, I2) = V9(I2) - QR(I, H - 1, I2) - QR(I, H - 2, I2)
	NEXT
	 FOR I1 = 0 TO 13
	 FOR I2 = 7 TO 15
	 QQ(I, H, I1, I2 - 6) = A(I, I1, I2) - QQ(I, H - 1, I1, I2 - 6) - QQ(I, H - 2, I1, I2 - 6)
	 NEXT
	 QQ(I, H, I1, 10) = W%(I, I1, 0) - QQ(I, H - 1, I1, 10) - QQ(I, H - 2, I1, 10)
	 QQ(I, H, I1, 11) = W%(I, I1, 1) - QQ(I, H - 1, I1, 11) - QQ(I, H - 2, I1, 11)
	 QQ(I, H, I1, 12) = A(I, I1, 24) - QQ(I, H - 1, I1, 12) - QQ(I, H - 2, I1, 12)
	 QQ(I, H, I1, 13) = A(I, I1, 8) * 2 + A(I, I1, 10) + W%(I, I1, 0) - QQ(I, H - 1, I1, 13) - QQ(I, H - 2, I1, 13)
	 QQ(I, H, I1, 14) = A(I, I1, 23) - QQ(I, H - 1, I1, 14) - QQ(I, H - 2, I1, 14)
	 NEXT
	 END IF
		IF H = 4 THEN
	FOR I2 = 0 TO 14
	QR(I, H, I2) = V9(I2) - QR(I, H - 1, I2) - QR(I, H - 2, I2) - QR(I, H - 3, I2)
	NEXT
	 FOR I1 = 0 TO 13
	 FOR I2 = 7 TO 15
	 QQ(I, H, I1, I2 - 6) = A(I, I1, I2) - QQ(I, H - 1, I1, I2 - 6) - QQ(I, H - 2, I1, I2 - 6) - QQ(I, H - 3, I1, I2 - 6)
	 NEXT
	 QQ(I, H, I1, 10) = W%(I, I1, 0) - QQ(I, H - 1, I1, 10) - QQ(I, H - 2, I1, 10) - QQ(I, H - 3, I1, 10)
	 QQ(I, H, I1, 11) = W%(I, I1, 1) - QQ(I, H - 1, I1, 11) - QQ(I, H - 2, I1, 11) - QQ(I, H - 3, I1, 11)
	 QQ(I, H, I1, 12) = A(I, I1, 24) - QQ(I, H - 1, I1, 12) - QQ(I, H - 2, I1, 12) - QQ(I, H - 3, I1, 12)
	 QQ(I, H, I1, 13) = A(I, I1, 8) * 2 + A(I, I1, 10) + W%(I, I1, 0) - QQ(I, H - 1, I1, 13) - QQ(I, H - 2, I1, 13) - QQ(I, H - 3, I1, 13)
	 QQ(I, H, I1, 14) = A(I, I1, 23) - QQ(I, H - 1, I1, 14) - QQ(I, H - 2, I1, 14) - QQ(I, H - 3, I1, 14)
	 NEXT
	 END IF
		IF H = 5 THEN
	FOR I2 = 0 TO 14
	QR(I, H, I2) = V9(I2) - QR(I, H - 1, I2) - QR(I, H - 2, I2) - QR(I, H - 3, I2) - QR(I, H - 4, I2)
	NEXT
	 FOR I1 = 0 TO 13
	 FOR I2 = 7 TO 15
	 QQ(I, H, I1, I2 - 6) = A(I, I1, I2) - QQ(I, H - 1, I1, I2 - 6) - QQ(I, H - 2, I1, I2 - 6) - QQ(I, H - 3, I1, I2 - 6) - QQ(I, H - 4, I1, I2 - 6)
	 NEXT
	 QQ(I, H, I1, 10) = W%(I, I1, 0) - QQ(I, H - 1, I1, 10) - QQ(I, H - 2, I1, 10) - QQ(I, H - 3, I1, 10) - QQ(I, H - 4, I1, 10)
	 QQ(I, H, I1, 11) = W%(I, I1, 1) - QQ(I, H - 1, I1, 11) - QQ(I, H - 2, I1, 11) - QQ(I, H - 3, I1, 11) - QQ(I, H - 4, I1, 11)
	 QQ(I, H, I1, 12) = A(I, I1, 24) - QQ(I, H - 1, I1, 12) - QQ(I, H - 2, I1, 12) - QQ(I, H - 3, I1, 12) - QQ(I, H - 4, I1, 12)
	 QQ(I, H, I1, 13) = A(I, I1, 8) * 2 + A(I, I1, 10) + W%(I, I1, 0) - QQ(I, H - 1, I1, 13) - QQ(I, H - 2, I1, 13) - QQ(I, H - 3, I1, 13) - QQ(I, H - 4, I1, 13)
	 QQ(I, H, I1, 14) = A(I, I1, 23) - QQ(I, H - 1, I1, 14) - QQ(I, H - 2, I1, 14) - QQ(I, H - 3, I1, 14) - QQ(I, H - 4, I1, 14)
	 NEXT
	 END IF
		IF H = 6 THEN
	FOR I2 = 0 TO 14
	QR(I, H, I2) = V9(I2) - QR(I, H - 1, I2) - QR(I, H - 2, I2) - QR(I, H - 3, I2) - QR(I, H - 4, I2) - QR(I, H - 5, I2)
	NEXT
	 FOR I1 = 0 TO 13
	 FOR I2 = 7 TO 15
	 QQ(I, H, I1, I2 - 6) = A(I, I1, I2) - QQ(I, H - 1, I1, I2 - 6) - QQ(I, H - 2, I1, I2 - 6) - QQ(I, H - 3, I1, I2 - 6) - QQ(I, H - 4, I1, I2 - 6) - QQ(I, H - 5, I1, I2 - 6)
	 NEXT
	 QQ(I, H, I1, 10) = W%(I, I1, 0) - QQ(I, H - 1, I1, 10) - QQ(I, H - 2, I1, 10) - QQ(I, H - 3, I1, 10) - QQ(I, H - 4, I1, 10) - QQ(I, H - 5, I1, 10)
	 QQ(I, H, I1, 11) = W%(I, I1, 1) - QQ(I, H - 1, I1, 11) - QQ(I, H - 2, I1, 11) - QQ(I, H - 3, I1, 11) - QQ(I, H - 4, I1, 11) - QQ(I, H - 5, I1, 11)
	 QQ(I, H, I1, 12) = A(I, I1, 24) - QQ(I, H - 1, I1, 12) - QQ(I, H - 2, I1, 12) - QQ(I, H - 3, I1, 12) - QQ(I, H - 4, I1, 12) - QQ(I, H - 5, I1, 12)
	 QQ(I, H, I1, 13) = A(I, I1, 8) * 2 + A(I, I1, 10) + W%(I, I1, 0) - QQ(I, H - 1, I1, 13) - QQ(I, H - 2, I1, 13) - QQ(I, H - 3, I1, 13) - QQ(I, H - 4, I1, 13) - QQ(I, H - 5, I1, 13)
	 QQ(I, H, I1, 14) = A(I, I1, 23) - QQ(I, H - 1, I1, 14) - QQ(I, H - 2, I1, 14) - QQ(I, H - 3, I1, 14) - QQ(I, H - 4, I1, 14) - QQ(I, H - 5, I1, 14)
	 NEXT
	 END IF
		IF H = 7 THEN
	FOR I2 = 0 TO 14
	QR(I, H, I2) = V9(I2) - QR(I, H - 1, I2) - QR(I, H - 2, I2) - QR(I, H - 3, I2) - QR(I, H - 4, I2) - QR(I, H - 5, I2) - QR(I, H - 6, I2)
	NEXT
	 FOR I1 = 0 TO 13
	 FOR I2 = 7 TO 15
	 QQ(I, H, I1, I2 - 6) = A(I, I1, I2) - QQ(I, H - 1, I1, I2 - 6) - QQ(I, H - 2, I1, I2 - 6) - QQ(I, H - 3, I1, I2 - 6) - QQ(I, H - 4, I1, I2 - 6) - QQ(I, H - 5, I1, I2 - 6) - QQ(I, H - 6, I1, I2 - 6)
	 NEXT
	 QQ(I, H, I1, 10) = W%(I, I1, 0) - QQ(I, H - 1, I1, 10) - QQ(I, H - 2, I1, 10) - QQ(I, H - 3, I1, 10) - QQ(I, H - 4, I1, 10) - QQ(I, H - 5, I1, 10) - QQ(I, H - 6, I1, 10)
	 QQ(I, H, I1, 11) = W%(I, I1, 1) - QQ(I, H - 1, I1, 11) - QQ(I, H - 2, I1, 11) - QQ(I, H - 3, I1, 11) - QQ(I, H - 4, I1, 11) - QQ(I, H - 5, I1, 11) - QQ(I, H - 6, I1, 11)
	 QQ(I, H, I1, 12) = A(I, I1, 24) - QQ(I, H - 1, I1, 12) - QQ(I, H - 2, I1, 12) - QQ(I, H - 3, I1, 12) - QQ(I, H - 4, I1, 12) - QQ(I, H - 5, I1, 12) - QQ(I, H - 6, I1, 12)
	 QQ(I, H, I1, 13) = A(I, I1, 8) * 2 + A(I, I1, 10) + W%(I, I1, 0) - QQ(I, H - 1, I1, 13) - QQ(I, H - 2, I1, 13) - QQ(I, H - 3, I1, 13) - QQ(I, H - 4, I1, 13) - QQ(I, H - 5, I1, 13) - QQ(I, H - 6, I1, 13)
	 QQ(I, H, I1, 14) = A(I, I1, 23) - QQ(I, H - 1, I1, 14) - QQ(I, H - 2, I1, 14) - QQ(I, H - 3, I1, 14) - QQ(I, H - 4, I1, 14) - QQ(I, H - 5, I1, 14) - QQ(I, H - 6, I1, 14)
	 NEXT
	 END IF

NEXT
FOR I = 0 TO 14: V9(I) = 0: NEXT
END SUB

SUB AICOMCOACH
	IF P9=0 THEN I6=1
	IF P9=1 THEN I6=0
	IF S(P9,0)-S(I6,0)<0 THEN I5=S(I6,0)-S(P9,0):GOTO 8867
	R0=INT(RND(1)*100)+1:DT%(P9)=0:D2(P9)=0:P7(P9)=0
	IF R0>=37 THEN DT%(P9)=0:D2(P9)=0:P7(P9)=0
	IF R0>10 AND R0<=36 THEN D2(P9)=2:DT%(P9)=2:P7(P9)=0
	IF R0<=10 THEN D2(P9)=1:DT%(P9)=1:P7(P9)=0
	R0=INT(RND(1)*100)+1
	IF R0<=5 THEN P7(P9)=1:DT%(P9)=4:D2(P9)=0
	IF R0>5 AND R0<=9 THEN P7(P9)=3:DT%(P9)=8:D2(P9)=0
	IF R0=10 THEN P7(P9)=3:DT%(P9)=7:D2(P9)=2
	  GOTO 8880

8867 R0=INT(RND(1)*100)+1
	IF H=1 AND R0>37 THEN D2(P9)=0:P7(P9)=0:DT%(P9)=0
	IF H=1 AND R0>10 AND R0<=36 THEN D2(P9)=2:P7(P9)=0:DT%(P9)=2
	IF H=1 AND R0>5 AND R0<=10 THEN D2(P9)=3:P7(P9)=0:DT%(P9)=3
	IF H=1 AND R0<=5 THEN D2(P9)=1:P7(P9)=0:DT%(P9)=1
	R0=INT(RND(1)*100)+1
	IF H=1 AND R0<=15 THEN D2(P9)=0:P7(P9)=1:DT%(P9)=4
	IF H=1 AND R0>9 AND R0<=12 THEN D2(P9)=0:P7(P9)=3:DT%(P9)=8
	IF H=1 AND R0>6 AND R0<=9 THEN D2(P9)=2:P7(P9)=3:DT%(P9)=7
	IF H=1 AND R0>3 AND R0<=6 THEN D2(P9)=1:P7(P9)=3:DT%(P9)=9
	IF H=1 AND R0<=3 THEN D2(P9)=0:P7(P9)=4:DT%(P9)=10
	R0=INT(RND(1)*100)+1
	IF H=2 AND T>=600 AND I5>20 AND R0<=60 THEN D2(P9)=0:P7(P9)=0:DT%(P9)=0
	IF H=2 AND T>=600 AND I5>20 AND R0>60 AND R0<=80 THEN D2(P9)=1:P7(P9)=0:DT%(P9)=1
	IF H=2 AND T>=600 AND I5>20 AND R0>80 AND R0<=90 THEN D2(P9)=1:P7(P9)=2:DT%(P9)=6
	IF H=2 AND T>=600 AND I5>20 AND R0>90 AND R0<=95 THEN D2(P9)=0:P7(P9)=4:DT%(P9)=10
	IF H=2 AND T>=600 AND I5>20 AND R0>95 THEN D2(P9)=1:P7(P9)=4:DT%(P9)=11
	IF H=2 AND T>=600 AND I5>=10 AND I5<20 AND R0<=75 THEN D2(P9)=0:P7(P9)=0:DT%(P9)=0
	IF H=2 AND T>=600 AND I5>=10 AND I5<20 AND R0>75 AND R0<=83 THEN D2(P9)=0:P7(P9)=1:DT%(P9)=4
	IF H=2 AND T>=600 AND I5>=10 AND I5<20 AND R0>83 AND R0<=91 THEN D2(P9)=1:P7(P9)=0:DT%(P9)=1
	IF H=2 AND T>=600 AND I5>=10 AND I5<20 AND R0>91 AND R0<=96 THEN D2(P9)=0:P7(P9)=4:DT%(P9)=10
	IF H=2 AND T>=600 AND I5>=10 AND I5<20 AND R0>96 THEN D2(P9)=1:P7(P9)=4:DT%(P9)=11
	IF H=2 AND T>=600 AND I5<10 AND R0<=70 THEN D2(P9)=0:P7(P9)=0:DT%(P9)=0
	IF H=2 AND T>=600 AND I5<10 AND R0>70 AND R0<=75 THEN D2(P9)=1:P7(P9)=0:DT%(P9)=1
	IF H=2 AND T>=600 AND I5<10 AND R0>76 AND R0<=85 THEN D2(P9)=2:P7(P9)=0:DT%(P9)=2
	IF H=2 AND T>=600 AND I5<10 AND R0>85 AND R0<=93 THEN D2(P9)=0:P7(P9)=2:DT%(P9)=5
	IF H=2 AND T>=600 AND I5<10 AND R0>93 AND R0<=97 THEN D2(P9)=3:P7(P9)=0:DT%(P9)=3
	IF H=2 AND T>=600 AND I5<10 AND R0>97 THEN D2(P9)=2:P7(P9)=4:DT%(P9)=12
	IF H=2 AND T>=120 AND T<600 AND I5>20 AND R0<=70 THEN D2(P9)=0:P7(P9)=0:DT%(P9)=0
	IF H=2 AND T>=120 AND T<600 AND I5>20 AND R0>70 AND R0<=80 THEN D2(P9)=0:P7(P9)=2:DT%(P9)=5
	IF H=2 AND T>=120 AND T<600 AND I5>20 AND R0>80 AND R0<=90 THEN D2(P9)=0:P7(P9)=4:DT%(P9)=10
	IF H=2 AND T>=120 AND T<600 AND I5>20 AND R0>90 THEN D2(P9)=3:P7(P9)=4:DT%(P9)=13
	IF H=2 AND T>=120 AND T<600 AND I5>10 AND I5<20 AND R0<=70 THEN D2(P9)=0:P7(P9)=0:DT%(P9)=0
	IF H=2 AND T>=120 AND T<600 AND I5>10 AND I5<20 AND R0>70 AND R0<=80 THEN D2(P9)=0:P7(P9)=2:DT%(P9)=5
	IF H=2 AND T>=120 AND T<600 AND I5>10 AND I5<20 AND R0>80 AND R0<=90 THEN D2(P9)=1:P7(P9)=4:DT%(P9)=12
	IF H=2 AND T>=120 AND T<600 AND I5>10 AND I5<20 AND R0>90 THEN D2(P9)=1:P7(P9)=0:DT%(P9)=1
	IF H=2 AND T>=120 AND T<600 AND I5<=10 AND R0<=70 THEN D2(P9)=0:P7(P9)=0:DT%(P9)=0
	IF H=2 AND T>=120 AND T<600 AND I5<=10 AND R0>70 AND R0<=90 THEN D2(P9)=2:P7(P9)=0:DT%(P9)=2
	IF H=2 AND T>=120 AND T<600 AND I5<=10 AND R0>90 AND R0<=96 THEN D2(P9)=1:P7(P9)=0:DT%(P9)=1
	IF H=2 AND T>=120 AND T<600 AND I5<=10 AND R0>96 THEN D2(P9)=0:P7(P9)=4:DT%(P9)=10
	IF H=2 AND T<120 AND I5>10 AND R0<=50 THEN D2(P9)=1:P7(P9)=4:DT%(P9)=11
	IF H=2 AND T<120 AND I5>10 AND R0>50 THEN D2(P9)=3:P7(P9)=4:DT%(P9)=13
	IF H=2 AND T<120 AND I5<=10 AND I5>4 THEN D2(P9)=3:P7(P9)=5:DT%(P9)=14
	IF H=2 AND T<120 AND I5<=4 AND R0<=25 THEN D2(P9)=0:P7(P9)=2:DT%(P9)=5
	IF H=2 AND T<120 AND I5<=4 AND R0>25 AND R0<=50 THEN D2(P9)=1:P7(P9)=2:DT%(P9)=6
	IF H=2 AND T<120 AND I5<=4 AND R0>50 AND R0<=75 THEN D2(P9)=1:P7(P9)=4:DT%(P9)=11
	IF H=2 AND T<120 AND I5<=4 AND R0>75 THEN D2(P9)=3:P7(P9)=4:DT%(P9)=13
	IF H>2 AND R0<=50 THEN D2(P9)=0:P7(P9)=0:DT%(P9)=0
	IF H>2 AND R0>50 THEN D2(P9)=2:P7(P9)=0:DT%(P9)=2

8880 R0=INT(RND(1)*100)+1
	IF H=1 AND R0<=80 THEN OF%(P9)=0
	IF H=1 AND R0>80 AND R0<=90 THEN OF%(P9)=1
	IF H=1 AND R0>90 THEN OF%(P9)=2
	IF H>=2 AND S(P9,0)-S(I6,0)<0 AND R0<=80 THEN OF%(P9)=0
	IF H>=2 AND S(P9,0)-S(I6,0)<0 AND R0>80 THEN OF%(P9)=1
	IF H>=2 AND S(P9,0)-S(I6,0)>=0 AND R0<=80 THEN OF%(P9)=0
	IF H>=2 AND S(P9,0)-S(I6,0)>=0 AND R0>80 THEN OF%(P9)=2
	IF H>=2 AND T<=180 AND S(P9,0)-S(I6,0)<0 AND R0<=30 THEN OF%(P9)=3
	IF H>=2 AND T<=180 AND S(P9,0)-S(I6,0)>=0 AND R0<=30 THEN OF%(P9)=4
	IF H>=2 AND T<=60 AND X3%=1 AND (S(P9,0)-S(1-P9,0)=-3 OR S(P9,0)-S(1-P9,0)=-6) THEN OF%(P9)=9
END SUB


SUB RECORDSCHECK ()
DIM RC$(50, 4), REC(50, 2) AS SINGLE, TRC$(125, 3), TREC(125, 2) AS SINGLE
DIM V8(1, 14)
DIM VERSUS$(1)
	VERSUS$(0) = "AT": VERSUS$(1) = "VS."
	IF NOT _FILEEXISTS(P$(1) + "RECORDS.GAM") THEN
	 TREC(2, 0) = 999
	 TREC(4, 0) = 999
	 TREC(7, 0) = 999
	 TREC(9, 0) = 999
	 TREC(11, 0) = 999
	 TREC(13, 0) = 999
	 TREC(15, 0) = 999
	 TREC(17, 0) = 999
	 TREC(19, 0) = 999
	 TREC(21, 0) = 999
	 TREC(23, 0) = 999
	 TREC(25, 0) = 999
	 TREC(27, 0) = 999
	 TREC(29, 0) = 999
	 TREC(31, 0) = 999
	 TREC(33, 0) = 999
	 TREC(35, 0) = 999
	 TREC(37, 0) = 999
	 TREC(43, 0) = 999
	 TREC(45, 0) = 999
	 TREC(61, 0) = 999
	 TREC(63, 0) = 999
	 TREC(65, 0) = 999
	 TREC(67, 0) = 999
	 TREC(73, 0) = 999
	 TREC(75, 0) = 999
	 TREC(81, 0) = 999
	 TREC(83, 0) = 999
	 TREC(87, 0) = 999
	 TREC(89, 0) = 999
	 TREC(92, 0) = 999
	 TREC(94, 0) = 999
	 TREC(97, 0) = 999
	 TREC(99, 0) = 999
	 TREC(105, 0) = 999
	 TREC(107, 0) = 999
	 TREC(113, 0) = 999
	 TREC(115, 0) = 999
	 TREC(120, 0) = 999
	 TREC(123, 0) = 999
	 TREC(125, 0) = 999
	 GOTO 505
	END IF
OPEN P$(1) + "RECORDS.GAM" FOR INPUT AS #1
	FOR I = 0 TO 48
	FOR I1 = 0 TO 2
	INPUT #1, REC(I, I1)
	NEXT
	FOR I1 = 0 TO 4
	INPUT #1, RC$(I, I1)
	NEXT
	NEXT
FOR I = 0 TO 125
FOR I1 = 0 TO 2
INPUT #1, TREC(I, I1)
NEXT
FOR I1 = 0 TO 3
INPUT #1, TRC$(I, I1)
NEXT
NEXT
CLOSE 1

505 'CHECK THE INDIVIDUAL RECORDS
	 FOR I = 0 TO 1
	FOR I1 = 0 TO 13

' SCORING RECORDS FOR POINTS IN A GAME, HALF, QUARTER AND OVERTIME PERIOD
	IF A(I, I1, 8) * 2 + A(I, I1, 10) + W%(I, I1, 0) > REC(0, 0) THEN
	  REC(0, 0) = A(I, I1, 8) * 2 + A(I, I1, 10) + W%(I, I1, 0) ' POINTS
	  REC(0, 1) = 1                                             ' TIMES DONE
	  REC(0, 2) = 0                                             ' GAME
	  RC$(0, 0) = AA$(I, I1)                                 ' NAME
	  RC$(0, 1) = B$(I)                                      ' TEAM
	  RC$(0, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(0, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(0, 4) = DATE$                                         ' DATE
	END IF
	IF QQ(I, 1, I1, 13) > REC(1, 0) THEN
	  REC(1, 0) = QQ(I, 1, I1, 13)                              ' POINTS
	  REC(1, 1) = 1                                             ' TIMES DONE
	  REC(1, 2) = 1                                             ' HALF
	  RC$(1, 0) = AA$(I, I1)                                 ' NAME
	  RC$(1, 1) = B$(I)                                      ' TEAM
	  RC$(1, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(1, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(1, 4) = DATE$                                         ' DATE
	END IF
	 IF QQ(I, 2, I1, 13) > REC(1, 0) THEN
	  REC(1, 0) = QQ(I, 2, I1, 13)                           ' POINTS
	  REC(1, 1) = 1                                             ' TIMES DONE
	  REC(1, 2) = 2                                             ' HALF
	  RC$(1, 0) = AA$(I, I1)                                 ' NAME
	  RC$(1, 1) = B$(I)                                      ' TEAM
	  RC$(1, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(1, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(1, 4) = DATE$                                         ' DATE
	END IF
	 FOR I2 = 3 TO 8
	IF QQ(I, I2, I1, 13) > REC(3, 0) THEN
	  REC(3, 0) = QQ(I, I2, I1, 13)  ' POINTS
	  REC(3, 1) = 1                                             ' TIMES DONE
	  REC(3, 2) = I2                                             ' QTR
	  RC$(3, 0) = AA$(I, I1)                                 ' NAME
	  RC$(3, 1) = B$(I)                                      ' TEAM
	  RC$(3, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(3, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(3, 4) = DATE$                                         ' DATE
	END IF
	NEXT I2

' FIELD GOAL PERCENTAGE RECORDS FOR HIGH %, MOST W/NO MISSES, MOST W/NONE MADE
	IF A(I, I1, 8) < 15 OR A(I, I1, 7) = 0 THEN 900
	IF A(I, I1, 8) / A(I, I1, 7) > REC(4, 0) THEN
	  REC(4, 0) = A(I, I1, 8) / A(I, I1, 7)                     ' PCTG
	  REC(4, 1) = A(I, I1, 8)                                   ' FGM
	  REC(4, 2) = A(I, I1, 7)                                   ' FGA
	  RC$(4, 0) = AA$(I, I1)                                 ' NAME
	  RC$(4, 1) = B$(I)                                      ' TEAM
	  RC$(4, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(4, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(4, 4) = DATE$                                         ' DATE
	END IF

900
	IF A(I, I1, 8) = A(I, I1, 7) AND A(I, I1, 7) > REC(5, 0) THEN
	  REC(5, 0) = A(I, I1, 7)                                   ' MOST FGM
	  RC$(5, 0) = AA$(I, I1)                                 ' NAME
	  RC$(5, 1) = B$(I)                                      ' TEAM
	  RC$(5, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(5, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(5, 4) = DATE$                                         ' DATE
	END IF
	IF A(I, I1, 8) = 0 AND A(I, I1, 7) > REC(6, 0) THEN
	  REC(6, 0) = A(I, I1, 7)                                   ' 0 FGM /FGA
	  RC$(6, 0) = AA$(I, I1)                                 ' NAME
	  RC$(6, 1) = B$(I)                                      ' TEAM
	  RC$(6, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(6, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(6, 4) = DATE$                                         ' DATE
	END IF

' FIELD GOALS MADE IN A GAME, HALF, QUARTER AND OVERTIME PERIOD
	IF A(I, I1, 8) > REC(7, 0) THEN
	  REC(7, 0) = A(I, I1, 8)                                   ' FGM
	  REC(7, 1) = 1                                             ' TIMES DONE
	  REC(7, 2) = 0                                             ' GAME
	  RC$(7, 0) = AA$(I, I1)                                 ' NAME
	  RC$(7, 1) = B$(I)                                      ' TEAM
	  RC$(7, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(7, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(7, 4) = DATE$                                         ' DATE
	END IF
	IF QQ(I, 1, I1, 2)  > REC(8, 0) THEN
	  REC(8, 0) = QQ(I, 1, I1, 2)                            ' FGM
	  REC(8, 1) = 1                                             ' TIMES DONE
	  REC(8, 2) = 1                                             ' HALF
	  RC$(8, 0) = AA$(I, I1)                                 ' NAME
	  RC$(8, 1) = B$(I)                                      ' TEAM
	  RC$(8, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(8, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(8, 4) = DATE$                                         ' DATE
	END IF
	IF QQ(I, 2, I1, 2)  > REC(8, 0) THEN
	  REC(8, 0) = QQ(I, 2, I1, 2)                          ' FGM
	  REC(8, 1) = 1                                             ' TIMES DONE
	  REC(8, 2) = 2                                             ' HALF
	  RC$(8, 0) = AA$(I, I1)                                 ' NAME
	  RC$(8, 1) = B$(I)                                      ' TEAM
	  RC$(8, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(8, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(8, 4) = DATE$                                         ' DATE
	END IF
	 FOR I2 = 3 TO 8
	IF QQ(I, I2, I1, 2) > REC(10, 0) THEN
	  REC(10, 0) = QQ(I, I2, I1, 2)                              ' FGM
	  REC(10, 1) = 1                                             ' TIMES DONE
	  REC(10, 2) = I2                                             ' QTR
	  RC$(10, 0) = AA$(I, I1)                                 ' NAME
	  RC$(10, 1) = B$(I)                                      ' TEAM
	  RC$(10, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(10, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(10, 4) = DATE$                                         ' DATE
	END IF
	NEXT I2

' FIELD GOAL ATTEMPTS MADE IN A GAME, HALF, QUARTER AND OVERTIME PERIOD
	IF A(I, I1, 7) > REC(11, 0) THEN
	  REC(11, 0) = A(I, I1, 7)                                   ' FGA
	  REC(11, 1) = 1                                             ' TIMES DONE
	  REC(11, 2) = 0                                             ' GAME
	  RC$(11, 0) = AA$(I, I1)                                 ' NAME
	  RC$(11, 1) = B$(I)                                      ' TEAM
	  RC$(11, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(11, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(11, 4) = DATE$                                         ' DATE
	END IF
	 IF QQ(I, 1, I1, 1)  > REC(12, 0) THEN
	  REC(12, 0) = QQ(I, 1, I1, 1)                    ' FGA
	  REC(12, 1) = 1                                             ' TIMES DONE
	  REC(12, 2) = 1                                             ' HALF
	  RC$(12, 0) = AA$(I, I1)                                 ' NAME
	  RC$(12, 1) = B$(I)                                      ' TEAM
	  RC$(12, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(12, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(12, 4) = DATE$                                         ' DATE
	END IF
	IF QQ(I, 2, I1, 1) > REC(12, 0) THEN
	  REC(12, 0) = QQ(I, 2, I1, 1)                          ' FGA
	  REC(12, 1) = 1                                             ' TIMES DONE
	  REC(12, 2) = 2                                             ' HALF
	  RC$(12, 0) = AA$(I, I1)                                 ' NAME
	  RC$(12, 1) = B$(I)                                      ' TEAM
	  RC$(12, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(12, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(12, 4) = DATE$                                         ' DATE
	END IF
	 FOR I2 = 3 TO 8
	IF QQ(I, I2, I1, 1) > REC(14, 0) THEN
	  REC(14, 0) = QQ(I, I2, I1, 1)                              ' FGA
	  REC(14, 1) = 1                                             ' TIMES DONE
	  REC(14, 2) = I2                                             ' QTR
	  RC$(14, 0) = AA$(I, I1)                                 ' NAME
	  RC$(14, 1) = B$(I)                                      ' TEAM
	  RC$(14, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(14, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(14, 4) = DATE$                                         ' DATE
	END IF
	NEXT I2

' THREE-POINT FIELD GOALS MOST MADE NO MISSES, MOST ATT NONE MADE
	IF W%(I, I1, 0) = W%(I, I1, 1) AND W%(I, I1, 0) > REC(15, 0) THEN
	  REC(15, 0) = W%(I, I1, 0)                                  ' MOST 3-FGM
	  RC$(15, 0) = AA$(I, I1)                                 ' NAME
	  RC$(15, 1) = B$(I)                                      ' TEAM
	  RC$(15, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(15, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(15, 4) = DATE$                                         ' DATE
	END IF
	IF W%(I, I1, 0) = 0 AND W%(I, I1, 1) > REC(16, 0) THEN
	  REC(16, 0) = W%(I, I1, 1)                                   ' 0 3FGM /3FGA
	  RC$(16, 0) = AA$(I, I1)                                 ' NAME
	  RC$(16, 1) = B$(I)                                      ' TEAM
	  RC$(16, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(16, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(16, 4) = DATE$                                         ' DATE
	END IF

' 3-FIELD GOALS MADE IN A GAME, HALF, QUARTER AND OVERTIME PERIOD
	IF W%(I, I1, 0) > REC(17, 0) THEN
	  REC(17, 0) = W%(I, I1, 0)                                   ' 3FGM
	  REC(17, 1) = 1                                             ' TIMES DONE
	  REC(17, 2) = 0                                             ' GAME
	  RC$(17, 0) = AA$(I, I1)                                 ' NAME
	  RC$(17, 1) = B$(I)                                      ' TEAM
	  RC$(17, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(17, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(17, 4) = DATE$                                         ' DATE
	END IF
	IF QQ(I, 1, I1, 10) > REC(18, 0) THEN
	  REC(18, 0) = QQ(I, 1, I1, 10)              ' 3FGM
	  REC(18, 1) = 1                                             ' TIMES DONE
	  REC(18, 2) = 1                                             ' HALF
	  RC$(18, 0) = AA$(I, I1)                                 ' NAME
	  RC$(18, 1) = B$(I)                                      ' TEAM
	  RC$(18, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(18, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(18, 4) = DATE$                                         ' DATE
	END IF
	IF QQ(I, 2, I1, 10) > REC(18, 0) THEN
	  REC(18, 0) = QQ(I, 2, I1, 10)                ' 3FGM
	  REC(18, 1) = 1                                             ' TIMES DONE
	  REC(18, 2) = 2                                             ' HALF
	  RC$(18, 0) = AA$(I, I1)                                 ' NAME
	  RC$(18, 1) = B$(I)                                      ' TEAM
	  RC$(18, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(18, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(18, 4) = DATE$                                         ' DATE
	END IF
	 FOR I2 = 3 TO 8
	IF QQ(I, I2, I1, 10) > REC(20, 0) THEN
	  REC(20, 0) = QQ(I, I2, I1, 10)                              ' 3FGM
	  REC(20, 1) = 1                                             ' TIMES DONE
	  REC(20, 2) = I2                                             ' QTR
	  RC$(20, 0) = AA$(I, I1)                                 ' NAME
	  RC$(20, 1) = B$(I)                                      ' TEAM
	  RC$(20, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(20, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(20, 4) = DATE$                                         ' DATE
	END IF
	NEXT I2

' 3-FIELD GOALS ATT IN A GAME, HALF
	IF W%(I, I1, 1) > REC(21, 0) THEN
	  REC(21, 0) = W%(I, I1, 1)                                   ' 3FGA
	  REC(21, 1) = 1                                             ' TIMES DONE
	  REC(21, 2) = 0                                             ' GAME
	  RC$(21, 0) = AA$(I, I1)                                 ' NAME
	  RC$(21, 1) = B$(I)                                      ' TEAM
	  RC$(21, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(21, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(21, 4) = DATE$                                         ' DATE
	END IF
	IF QQ(I, 1, I1, 11) > REC(22, 0) THEN
	  REC(22, 0) = QQ(I, 1, I1, 11)                     ' 3FGA
	  REC(22, 1) = 1                                             ' TIMES DONE
	  REC(22, 2) = 1                                             ' HALF
	  RC$(22, 0) = AA$(I, I1)                                 ' NAME
	  RC$(22, 1) = B$(I)                                      ' TEAM
	  RC$(22, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(22, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(22, 4) = DATE$                                         ' DATE
	END IF
	IF QQ(I, 2, I1, 11) > REC(22, 0) THEN
	  REC(22, 0) = QQ(I, 2, I1, 10)                         ' 3FGA
	  REC(22, 1) = 1                                             ' TIMES DONE
	  REC(22, 2) = 2                                             ' HALF
	  RC$(22, 0) = AA$(I, I1)                                 ' NAME
	  RC$(22, 1) = B$(I)                                      ' TEAM
	  RC$(22, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(22, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(22, 4) = DATE$                                         ' DATE
	END IF
' FREE THROWS -  MOST MADE NO MISSES, MOST ATT NONE MADE
	IF A(I, I1, 9) = A(I, I1, 10) AND A(I, I1, 10) > REC(23, 0) THEN
	  REC(23, 0) = A(I, I1, 10)                                  ' MOST FTM
	  RC$(23, 0) = AA$(I, I1)                                 ' NAME
	  RC$(23, 1) = B$(I)                                      ' TEAM
	  RC$(23, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(23, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(23, 4) = DATE$                                         ' DATE
	END IF
	IF A(I, I1, 10) = 0 AND A(I, I1, 9) > REC(24, 0) THEN
	  REC(24, 0) = A(I, I1, 9)                                   ' 0 FTM /FTA
	  RC$(24, 0) = AA$(I, I1)                                 ' NAME
	  RC$(24, 1) = B$(I)                                      ' TEAM
	  RC$(24, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(24, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(24, 4) = DATE$                                         ' DATE
	END IF

' MADE FREE THROWS IN A GAME, HALF, QUARTER
	IF A(I, I1, 10) > REC(25, 0) THEN
	  REC(25, 0) = A(I, I1, 10)  ' FTM
	  REC(25, 1) = 1                                             ' TIMES DONE
	  REC(25, 2) = 0                                             ' GAME
	  RC$(25, 0) = AA$(I, I1)                                 ' NAME
	  RC$(25, 1) = B$(I)                                      ' TEAM
	  RC$(25, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(25, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(25, 4) = DATE$                                         ' DATE
	END IF
	IF QQ(I, 1, I1, 4)  > REC(26, 0) THEN
	  REC(26, 0) = QQ(I, 1, I1, 4)  ' FTM
	  REC(26, 1) = 1                                             ' TIMES DONE
	  REC(26, 2) = 1                                             ' HALF
	  RC$(26, 0) = AA$(I, I1)                                 ' NAME
	  RC$(26, 1) = B$(I)                                      ' TEAM
	  RC$(26, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(26, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(26, 4) = DATE$                                         ' DATE
	END IF
	IF QQ(I, 2, I1, 4)  > REC(26, 0) THEN
	  REC(26, 0) = QQ(I, 2, I1, 4)    ' FTM
	  REC(26, 1) = 1                                             ' TIMES DONE
	  REC(26, 2) = 2                                             ' HALF
	  RC$(26, 0) = AA$(I, I1)                                 ' NAME
	  RC$(26, 1) = B$(I)                                      ' TEAM
	  RC$(26, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(26, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(26, 4) = DATE$                                         ' DATE
	END IF

' FREE THROWS ATTEMPTS IN A GAME, HALF, QUARTER
	IF A(I, I1, 9) > REC(28, 0) THEN
	  REC(28, 0) = A(I, I1, 9)  ' FTA
	  REC(28, 1) = 1                                             ' TIMES DONE
	  REC(28, 2) = 0                                             ' GAME
	  RC$(28, 0) = AA$(I, I1)                                 ' NAME
	  RC$(28, 1) = B$(I)                                      ' TEAM
	  RC$(28, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(28, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(28, 4) = DATE$                                         ' DATE
	END IF
	IF QQ(I, 1, I1, 3) > REC(29, 0) THEN
	  REC(29, 0) = QQ(I, 1, I1, 3) ' FTA
	  REC(29, 1) = 1                                             ' TIMES DONE
	  REC(29, 2) = 1                                             ' HALF
	  RC$(29, 0) = AA$(I, I1)                                 ' NAME
	  RC$(29, 1) = B$(I)                                      ' TEAM
	  RC$(29, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(29, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(29, 4) = DATE$                                         ' DATE
	END IF
	IF QQ(I, 2, I1, 3) > REC(29, 0) THEN
	  REC(29, 0) = QQ(I, 2, I1, 3)  ' FTM
	  REC(29, 1) = 1                                             ' TIMES DONE
	  REC(29, 2) = 2                                             ' HALF
	  RC$(29, 0) = AA$(I, I1)                                 ' NAME
	  RC$(29, 1) = B$(I)                                      ' TEAM
	  RC$(29, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(29, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(29, 4) = DATE$                                         ' DATE
	END IF

' TOTAL REBOUNDS IN A GAME, HALF, QUARTER
	IF A(I, I1, 11) > REC(31, 0) THEN
	  REC(31, 0) = A(I, I1, 11)  ' FTA
	  REC(31, 1) = 1                                             ' TIMES DONE
	  REC(31, 2) = 0                                             ' GAME
	  RC$(31, 0) = AA$(I, I1)                                 ' NAME
	  RC$(31, 1) = B$(I)                                      ' TEAM
	  RC$(31, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(31, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(31, 4) = DATE$                                         ' DATE
	END IF
	IF QQ(I, 1, I1, 5) > REC(32, 0) THEN
	  REC(32, 0) = QQ(I, 1, I1, 5)  ' RB
	  REC(32, 1) = 1                                             ' TIMES DONE
	  REC(32, 2) = 1                                             ' HALF
	  RC$(32, 0) = AA$(I, I1)                                 ' NAME
	  RC$(32, 1) = B$(I)                                      ' TEAM
	  RC$(32, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(32, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(32, 4) = DATE$                                         ' DATE
	END IF
	IF QQ(I, 2, I1, 5) > REC(32, 0) THEN
	  REC(32, 0) = QQ(I, 2, I1, 5)  ' RB
	  REC(32, 1) = 1                                             ' TIMES DONE
	  REC(32, 2) = 2                                             ' HALF
	  RC$(32, 0) = AA$(I, I1)                                 ' NAME
	  RC$(32, 1) = B$(I)                                      ' TEAM
	  RC$(32, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(32, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(32, 4) = DATE$                                         ' DATE
	END IF

' TOTAL OFFENSIVE REBOUNDS IN A GAME, HALF, QUARTER
	IF A(I, I1, 24) > REC(34, 0) THEN
	  REC(34, 0) = A(I, I1, 24)  ' FTA
	  REC(34, 1) = 1                                             ' TIMES DONE
	  REC(34, 2) = 0                                             ' GAME
	  RC$(34, 0) = AA$(I, I1)                                 ' NAME
	  RC$(34, 1) = B$(I)                                      ' TEAM
	  RC$(34, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(34, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(34, 4) = DATE$                                         ' DATE
	END IF
	IF QQ(I, 1, I1, 12) > REC(35, 0) THEN
	  REC(35, 0) = QQ(I, 1, I1, 12)  ' RB
	  REC(35, 1) = 1                                             ' TIMES DONE
	  REC(35, 2) = 1                                             ' HALF
	  RC$(35, 0) = AA$(I, I1)                                 ' NAME
	  RC$(35, 1) = B$(I)                                      ' TEAM
	  RC$(35, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(35, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(35, 4) = DATE$                                         ' DATE
	END IF
	IF QQ(I, 2, I1, 12) > REC(35, 0) THEN
	  REC(35, 0) = QQ(I, 2, I1, 12)  ' RB
	  REC(35, 1) = 1                                             ' TIMES DONE
	  REC(35, 2) = 2                                             ' HALF
	  RC$(35, 0) = AA$(I, I1)                                 ' NAME
	  RC$(35, 1) = B$(I)                                      ' TEAM
	  RC$(35, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(35, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(35, 4) = DATE$                                         ' DATE
	END IF

' TOTAL DEFENSIVE REBOUNDS IN A GAME, HALF, QUARTER
	IF A(I, I1, 11) - A(I, I1, 24) > REC(37, 0) THEN
	  REC(37, 0) = A(I, I1, 11) - A(I, I1, 24)  ' FTA
	  REC(37, 1) = 1                                             ' TIMES DONE
	  REC(37, 2) = 0                                             ' GAME
	  RC$(37, 0) = AA$(I, I1)                                 ' NAME
	  RC$(37, 1) = B$(I)                                      ' TEAM
	  RC$(37, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(37, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(37, 4) = DATE$                                         ' DATE
	END IF
	IF QQ(I, 1, I1, 5) - QQ(I, 1, I1, 12) > REC(38, 0) THEN
	  REC(38, 0) = QQ(I, 1, I1, 5)  - QQ(I, 1, I1, 12)  ' RB
	  REC(38, 1) = 1                                             ' TIMES DONE
	  REC(38, 2) = 1                                             ' HALF
	  RC$(38, 0) = AA$(I, I1)                                 ' NAME
	  RC$(38, 1) = B$(I)                                      ' TEAM
	  RC$(38, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(38, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(38, 4) = DATE$                                         ' DATE
	END IF
	IF QQ(I, 2, I1, 5) - QQ(I, 2, I1, 12) > REC(38, 0) THEN
	  REC(38, 0) = QQ(I, 2, I1, 5) - QQ(I, 2, I1, 12) ' RB
	  REC(38, 1) = 1                                             ' TIMES DONE
	  REC(38, 2) = 2                                             ' HALF
	  RC$(38, 0) = AA$(I, I1)                                 ' NAME
	  RC$(38, 1) = B$(I)                                      ' TEAM
	  RC$(38, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(38, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(38, 4) = DATE$                                         ' DATE
	END IF

' ASSISTS IN A GAME, HALF, QUARTER
	IF A(I, I1, 14) > REC(40, 0) THEN
	  REC(40, 0) = A(I, I1, 14)  ' FTA
	  REC(40, 1) = 1                                             ' TIMES DONE
	  REC(40, 2) = 0                                             ' GAME
	  RC$(40, 0) = AA$(I, I1)                                 ' NAME
	  RC$(40, 1) = B$(I)                                      ' TEAM
	  RC$(40, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(40, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(40, 4) = DATE$                                         ' DATE
	END IF
	IF QQ(I, 1, I1, 8) > REC(41, 0) THEN
	  REC(41, 0) = QQ(I, 1, I1, 8)   ' FTA
	  REC(41, 1) = 1                                             ' TIMES DONE
	  REC(41, 2) = 1                                             ' HALF
	  RC$(41, 0) = AA$(I, I1)                                 ' NAME
	  RC$(41, 1) = B$(I)                                      ' TEAM
	  RC$(41, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(41, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(41, 4) = DATE$                                         ' DATE
	END IF
	IF QQ(I, 2, I1, 8) > REC(41, 0) THEN
	  REC(41, 0) = QQ(I, 2, I1, 8)                    ' FTM
	  REC(41, 1) = 1                                             ' TIMES DONE
	  REC(41, 2) = 2                                             ' HALF
	  RC$(41, 0) = AA$(I, I1)                                 ' NAME
	  RC$(41, 1) = B$(I)                                      ' TEAM
	  RC$(41, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(41, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(41, 4) = DATE$                                         ' DATE
	END IF

' STEALS IN A GAME, HALF, QUARTER
	IF A(I, I1, 13) > REC(43, 0) THEN
	  REC(43, 0) = A(I, I1, 13)  ' FTA
	  REC(43, 1) = 1                                             ' TIMES DONE
	  REC(43, 2) = 0                                             ' GAME
	  RC$(43, 0) = AA$(I, I1)                                 ' NAME
	  RC$(43, 1) = B$(I)                                      ' TEAM
	  RC$(43, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(43, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(43, 4) = DATE$                                         ' DATE
	END IF
	IF QQ(I, 1, I1, 7) > REC(44, 0) THEN
	  REC(44, 0) = QQ(I, 1, I1, 7)  ' FTA
	  REC(44, 1) = 1                                             ' TIMES DONE
	  REC(44, 2) = 1                                             ' HALF
	  RC$(44, 0) = AA$(I, I1)                                 ' NAME
	  RC$(44, 1) = B$(I)                                      ' TEAM
	  RC$(44, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(44, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(44, 4) = DATE$                                         ' DATE
	END IF
	IF QQ(I, 2, I1, 7) > REC(44, 0) THEN
	  REC(44, 0) = QQ(I, 2, I1, 7)    ' FTM
	  REC(44, 1) = 1                                             ' TIMES DONE
	  REC(44, 2) = 2                                             ' HALF
	  RC$(44, 0) = AA$(I, I1)                                 ' NAME
	  RC$(44, 1) = B$(I)                                      ' TEAM
	  RC$(44, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(44, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(44, 4) = DATE$                                         ' DATE
	END IF

' BLOCKS IN A GAME, HALF, QUARTER
	IF A(I, I1, 15) > REC(46, 0) THEN
	  REC(46, 0) = A(I, I1, 15)  ' FTA
	  REC(46, 1) = 1                                             ' TIMES DONE
	  REC(46, 2) = 0                                             ' GAME
	  RC$(46, 0) = AA$(I, I1)                                 ' NAME
	  RC$(46, 1) = B$(I)                                      ' TEAM
	  RC$(46, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(46, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(46, 4) = DATE$                                         ' DATE
	END IF
	IF QQ(I, 1, I1, 9) > REC(47, 0) THEN
	  REC(47, 0) = QQ(I, 1, I1, 9)  ' FTA
	  REC(47, 1) = 1                                             ' TIMES DONE
	  REC(47, 2) = 1                                             ' HALF
	  RC$(47, 0) = AA$(I, I1)                                 ' NAME
	  RC$(47, 1) = B$(I)                                      ' TEAM
	  RC$(47, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(47, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(47, 4) = DATE$                                         ' DATE
	END IF
	IF QQ(I, 2, I1, 9) > REC(47, 0) THEN
	  REC(47, 0) = QQ(I, 2, I1, 9)  ' FTM
	  REC(47, 1) = 1                                             ' TIMES DONE
	  REC(47, 2) = 2                                             ' HALF
	  RC$(47, 0) = AA$(I, I1)                                 ' NAME
	  RC$(47, 1) = B$(I)                                      ' TEAM
	  RC$(47, 2) = VERSUS$(I)                                      ' AT/VS
	  RC$(47, 3) = B$(1 - I)                                  ' OPPONENT
	  RC$(47, 4) = DATE$                                         ' DATE
	END IF
	 NEXT
	NEXT

' MOST OVERTIME PERIODS
IF H - 3 > TREC(0, 0) THEN
	TREC(0, 0) = H - 3
	TREC(0, 1) = S(0, 0)
	TREC(0, 2) = S(1, 0)
	TRC$(0, 0) = B$(0)
	TRC$(0, 1) = B$(1)
	TRC$(0, 2) = DATE$
END IF

FOR I = 0 TO 1

IF S(I, 0) > TREC(1, 0) THEN
	TREC(1, 0) = S(I, 0)
	TREC(1, 1) = 1
	TREC(1, 2) = 0
	TRC$(1, 0) = B$(I)
	TRC$(1, 1) = VERSUS$(I)
	TRC$(1, 2) = B$(1 - I)
	TRC$(1, 3) = DATE$
END IF

IF S(I, 0) < TREC(2, 0) THEN
	TREC(2, 0) = S(I, 0)
	TREC(2, 1) = 1
	TREC(2, 2) = 0
	TRC$(2, 0) = B$(I)
	TRC$(2, 1) = VERSUS$(I)
	TRC$(2, 2) = B$(1 - I)
	TRC$(2, 3) = DATE$
END IF

IF S(I, 0) + S(1 - I, 0) > TREC(3, 0) THEN
	TREC(3, 0) = S(I, 0) + S(1 - I, 0)
	TREC(3, 1) = S(I, 0)
	TREC(3, 2) = S(1 - I, 0)
	TRC$(3, 0) = B$(I)
	TRC$(3, 1) = VERSUS$(I)
	TRC$(3, 2) = B$(1 - I)
	TRC$(3, 3) = DATE$
END IF

IF S(I, 0) + S(1 - I, 0) < TREC(4, 0) THEN
	TREC(4, 0) = S(I, 0) + S(1 - I, 0)
	TREC(4, 1) = S(I, 0)
	TREC(4, 2) = S(1 - I, 0)
	TRC$(4, 0) = B$(I)
	TRC$(4, 1) = VERSUS$(I)
	TRC$(4, 2) = B$(1 - I)
	TRC$(4, 3) = DATE$
END IF

IF S(I, 1) > TREC(6, 0) THEN
	TREC(6, 0) = S(I, 1)
	TREC(6, 1) = 1
	TREC(6, 2) = 0
	TRC$(6, 0) = B$(I)
	TRC$(6, 1) = VERSUS$(I)
	TRC$(6, 2) = B$(1 - I)
	TRC$(6, 3) = DATE$
END IF

IF S(I, 1) < TREC(7, 0) THEN
	TREC(7, 0) = S(I, 1)
	TREC(7, 1) = 1
	TREC(7, 2) = 0
	TRC$(7, 0) = B$(I)
	TRC$(7, 1) = VERSUS$(I)
	TRC$(7, 2) = B$(1 - I)
	TRC$(7, 3) = DATE$
END IF

IF S(I, 1) + S(1 - I, 1) > TREC(8, 0) THEN
	TREC(8, 0) = S(I, 1) + S(1 - I, 1)
	TREC(8, 1) = S(I, 1)
	TREC(8, 2) = S(1 - I, 1)
	TRC$(8, 0) = B$(I)
	TRC$(8, 1) = VERSUS$(I)
	TRC$(8, 2) = B$(1 - I)
	TRC$(8, 3) = DATE$
END IF

IF S(I, 1) + S(1 - I, 1) < TREC(9, 0) THEN
	TREC(9, 0) = S(I, 1) + S(1 - I, 1)
	TREC(9, 1) = S(I, 1)
	TREC(9, 2) = S(1 - I, 1)
	TRC$(9, 0) = B$(I)
	TRC$(9, 1) = VERSUS$(I)
	TRC$(9, 2) = B$(1 - I)
	TRC$(9, 3) = DATE$
END IF

IF S(I, 2) > TREC(10, 0) THEN
	TREC(10, 0) = S(I, 2)
	TREC(10, 1) = 1
	TREC(10, 2) = 0
	TRC$(10, 0) = B$(I)
	TRC$(10, 1) = VERSUS$(I)
	TRC$(10, 2) = B$(1 - I)
	TRC$(10, 3) = DATE$
END IF

IF S(I, 2) < TREC(11, 0) THEN
	TREC(11, 0) = S(I, 2)
	TREC(11, 1) = 1
	TREC(11, 2) = 0
	TRC$(11, 0) = B$(I)
	TRC$(11, 1) = VERSUS$(I)
	TRC$(11, 2) = B$(1 - I)
	TRC$(11, 3) = DATE$
END IF

IF S(I, 2) + S(1 - I, 2) > TREC(12, 0) THEN
	TREC(12, 0) = S(I, 2) + S(1 - I, 2)
	TREC(12, 1) = S(I, 2)
	TREC(12, 2) = S(1 - I, 2)
	TRC$(12, 0) = B$(I)
	TRC$(12, 1) = VERSUS$(I)
	TRC$(12, 2) = B$(1 - I)
	TRC$(12, 3) = DATE$
END IF

IF S(I, 2) + S(1 - I, 2) < TREC(13, 0) THEN
	TREC(13, 0) = S(I, 2) + S(1 - I, 2)
	TREC(13, 1) = S(I, 2)
	TREC(13, 2) = S(1 - I, 2)
	TRC$(13, 0) = B$(I)
	TRC$(13, 1) = VERSUS$(I)
	TRC$(13, 2) = B$(1 - I)
	TRC$(13, 3) = DATE$
END IF

FOR I2 = 3 TO 8
IF S(I, I2) > TREC(14, 0) THEN
	TREC(14, 0) = S(I, I2)
	TREC(14, 1) = I2
	TREC(14, 2) = 0
	TRC$(14, 0) = B$(I)
	TRC$(14, 1) = VERSUS$(I)
	TRC$(14, 2) = B$(1 - I)
	TRC$(14, 3) = DATE$
END IF

IF S(I, I2) < TREC(15, 0) THEN
	TREC(15, 0) = S(I, I2)
	TREC(15, 1) = I2
	TREC(15, 2) = 0
	TRC$(15, 0) = B$(I)
	TRC$(15, 1) = VERSUS$(I)
	TRC$(15, 2) = B$(1 - I)
	TRC$(15, 3) = DATE$
END IF

IF S(I, I2) + S(1 - I, I2) > TREC(16, 0) THEN
	TREC(16, 0) = S(I, I2) + S(1 - I, I2)
	TREC(16, 1) = S(I, I2)
	TREC(16, 2) = S(1 - I, I2)
	TRC$(16, 0) = B$(I)
	TRC$(16, 1) = VERSUS$(I)
	TRC$(16, 2) = B$(1 - I)
	TRC$(16, 3) = DATE$
END IF

IF S(I, I2) + S(1 - I, I2) < TREC(17, 0) THEN
	TREC(17, 0) = S(I, I2) + S(1 - I, I2)
	TREC(17, 1) = S(I, I2)
	TREC(17, 2) = S(1 - I, I2)
	TRC$(17, 0) = B$(I)
	TRC$(17, 1) = VERSUS$(I)
	TRC$(17, 2) = B$(1 - I)
	TRC$(17, 3) = DATE$
END IF
NEXT I2
	' TEAM FIELD GOAL PERCENTAGES
FOR I1 = 0 TO 14: V8(I, I1) = 0: V8(1 - I, I1) = 0: NEXT
	FOR I2 = 0 TO 1
	FOR I1 = 0 TO 13
	V8(I2, 0) = V8(I2, 0) + A(I2, I1, 8)
	V8(I2, 1) = V8(I2, 1) + A(I2, I1, 7)
	V8(I2, 2) = V8(I2, 2) + A(I2, I1, 10)
	V8(I2, 3) = V8(I2, 3) + A(I2, I1, 9)
	V8(I2, 4) = V8(I2, 4) + A(I2, I1, 11)
	V8(I2, 5) = V8(I2, 5) + (A(I2, I1, 8) * 2) + A(I2, I1, 10) + W%(I2, I1, 0)
	V8(I2, 13) = V8(I2, 13) + W%(I2, I1, 0)
	V8(I2, 14) = V8(I2, 14) + W%(I2, I1, 1)
	V8(I2, 6) = V8(I2, 6) + A(I2, I1, 12)
	V8(I2, 7) = V8(I2, 7) + A(I2, I1, 14)
	V8(I2, 8) = V8(I2, 8) + A(I2, I1, 15)
	V8(I2, 9) = V8(I2, 9) + A(I2, I1, 13)
	V8(I2, 11) = V8(I2, 11) + A(I2, I1, 24)
	V8(I2, 12) = V8(I2, 12) + A(I2, I1, 23)
	V8(I2, 10) = V8(I2, 10) + ZZ(I2, I1)
	NEXT
	NEXT
	  IF V8(I, 1) = 0 THEN 101
IF V8(I, 0) / V8(I, 1) > TREC(30, 0) THEN
	TREC(30, 0) = V8(I, 0) / V8(I, 1)
	TREC(30, 1) = V8(I, 0)
	TREC(30, 2) = V8(I, 1)
	TRC$(30, 0) = B$(I)
	TRC$(30, 1) = VERSUS$(I)
	TRC$(30, 2) = B$(1 - I)
	TRC$(30, 3) = DATE$
END IF

IF V8(I, 0) / V8(I, 1) < TREC(31, 0) THEN
	TREC(31, 0) = V8(I, 0) / V8(I, 1)
	TREC(31, 1) = V8(I, 0)
	TREC(31, 2) = V8(I, 1)
	TRC$(31, 0) = B$(I)
	TRC$(31, 1) = VERSUS$(I)
	TRC$(31, 2) = B$(1 - I)
	TRC$(31, 3) = DATE$
END IF

101 IF V8(I, 1) + V8(1 - I, 1)  =0 THEN 102
	IF (V8(I, 0) + V8(1 - I, 0)) / (V8(I, 1) + V8(1 - I, 1)) > TREC(32, 0) THEN
	TREC(32, 0) = (V8(I, 0) + V8(1 - I, 0)) / (V8(I, 1) + V8(1 - I, 1))
	TREC(32, 1) = V8(I, 0) / V8(I, 1)
	TREC(32, 2) = V8(1 - I, 0) / (V8(1 - I, 1) + 0.01)
	TRC$(32, 0) = B$(I)
	TRC$(32, 1) = VERSUS$(I)
	TRC$(32, 2) = B$(1 - I)
	TRC$(32, 3) = DATE$
END IF

IF (V8(I, 0) + V8(1 - I, 0)) / (V8(I, 1) + V8(1 - I, 1)) < TREC(33, 0) THEN
	TREC(33, 0) = (V8(I, 0) + V8(1 - I, 0)) / (V8(I, 1) + V8(1 - I, 1))
	TREC(33, 1) = V8(I, 0) / V8(I, 1)
	TREC(33, 2) = V8(1 - I, 0) / (V8(1 - I, 1)+0.01)
	TRC$(33, 0) = B$(I)
	TRC$(33, 1) = VERSUS$(I)
	TRC$(33, 2) = B$(1 - I)
	TRC$(33, 3) = DATE$
END IF

102 ' TEAM FIELD GOALS MADE
IF V8(I, 0) > TREC(34, 0) THEN
	TREC(34, 0) = V8(I, 0)
	TREC(34, 1) = 0
	TREC(34, 2) = 0
	TRC$(34, 0) = B$(I)
	TRC$(34, 1) = VERSUS$(I)
	TRC$(34, 2) = B$(1 - I)
	TRC$(34, 3) = DATE$
END IF

IF V8(I, 0) < TREC(35, 0) THEN
	TREC(35, 0) = V8(I, 0)
	TREC(35, 1) = 0
	TREC(35, 2) = 0
	TRC$(35, 0) = B$(I)
	TRC$(35, 1) = VERSUS$(I)
	TRC$(35, 2) = B$(1 - I)
	TRC$(35, 3) = DATE$
END IF

IF V8(I, 0) + V8(1 - I, 0) > TREC(36, 0) THEN
	TREC(36, 0) = V8(I, 0) + V8(1 - I, 0)
	TREC(36, 1) = V8(I, 0)
	TREC(36, 2) = V8(1 - I, 0)
	TRC$(36, 0) = B$(I)
	TRC$(36, 1) = VERSUS$(I)
	TRC$(36, 2) = B$(1 - I)
	TRC$(36, 3) = DATE$
END IF

IF V8(I, 0) + V8(1 - I, 0) < TREC(37, 0) THEN
	TREC(37, 0) = V8(I, 0) + V8(1 - I, 0)
	TREC(37, 1) = V8(I, 0)
	TREC(37, 2) = V8(1 - I, 0)
	TRC$(37, 0) = B$(I)
	TRC$(37, 1) = VERSUS$(I)
	TRC$(37, 2) = B$(1 - I)
	TRC$(37, 3) = DATE$
END IF

IF QR(I, 1, 0) > TREC(38, 0) THEN
	TREC(38, 0) = QR(I, 1, 0)
	TREC(38, 1) = 1
	TREC(38, 2) = 0
	TRC$(38, 0) = B$(I)
	TRC$(38, 1) = VERSUS$(I)
	TRC$(38, 2) = B$(1 - I)
	TRC$(38, 3) = DATE$
END IF

IF QR(I, 2, 0) > TREC(38, 0) THEN
	TREC(38, 0) = QR(I, 2, 0)
	TREC(38, 1) = 2
	TREC(38, 2) = 0
	TRC$(38, 0) = B$(I)
	TRC$(38, 1) = VERSUS$(I)
	TRC$(38, 2) = B$(1 - I)
	TRC$(38, 3) = DATE$
END IF

IF QR(I, 1, 0) + QR(1 - I, 1, 0) > TREC(39, 0) THEN
	TREC(39, 0) = QR(I, 1, 0) + QR(1 - I, 1, 0)
	TREC(39, 1) = 1
	TREC(39, 2) = 0
	TRC$(39, 0) = B$(I)
	TRC$(39, 1) = VERSUS$(I)
	TRC$(39, 2) = B$(1 - I)
	TRC$(39, 3) = DATE$
END IF

IF QR(I, 2, 0) + QR(1 - I, 2, 0) > TREC(39, 0) THEN
	TREC(39, 0) = QR(I, 2, 0) + QR(1 - I, 2, 0)
	TREC(39, 1) = 2
	TREC(39, 2) = 0
	TRC$(39, 0) = B$(I)
	TRC$(39, 1) = VERSUS$(I)
	TRC$(39, 2) = B$(1 - I)
	TRC$(39, 3) = DATE$
END IF

'TEAM FIELD GOAL ATTEMPTS
IF V8(I, 1) > TREC(42, 0) THEN
	TREC(42, 0) = V8(I, 1)
	TREC(42, 1) = 0
	TREC(42, 2) = 0
	TRC$(42, 0) = B$(I)
	TRC$(42, 1) = VERSUS$(I)
	TRC$(42, 2) = B$(1 - I)
	TRC$(42, 3) = DATE$
END IF

IF V8(I, 1) < TREC(43, 0) THEN
	TREC(43, 0) = V8(I, 1)
	TREC(43, 1) = 0
	TREC(43, 2) = 0
	TRC$(43, 0) = B$(I)
	TRC$(43, 1) = VERSUS$(I)
	TRC$(43, 2) = B$(1 - I)
	TRC$(43, 3) = DATE$
END IF

IF V8(I, 1) + V8(1 - I, 1) > TREC(44, 0) THEN
	TREC(44, 0) = V8(I, 1) + V8(1 - I, 1)
	TREC(44, 1) = V8(I, 1)
	TREC(44, 2) = V8(1 - I, 1)
	TRC$(44, 0) = B$(I)
	TRC$(44, 1) = VERSUS$(I)
	TRC$(44, 2) = B$(1 - I)
	TRC$(44, 3) = DATE$
END IF

IF V8(I, 1) + V8(1 - I, 1) < TREC(45, 0) THEN
	TREC(45, 0) = V8(I, 1) + V8(1 - I, 1)
	TREC(45, 1) = V8(I, 1)
	TREC(45, 2) = V8(1 - I, 1)
	TRC$(45, 0) = B$(I)
	TRC$(45, 1) = VERSUS$(I)
	TRC$(45, 2) = B$(1 - I)
	TRC$(45, 3) = DATE$
END IF

IF QR(I, 1, 1) > TREC(46, 0) THEN
	TREC(46, 0) = QR(I, 1, 1)
	TREC(46, 1) = 1
	TREC(46, 2) = 0
	TRC$(46, 0) = B$(I)
	TRC$(46, 1) = VERSUS$(I)
	TRC$(46, 2) = B$(1 - I)
	TRC$(46, 3) = DATE$
END IF

IF QR(I, 2, 1) > TREC(46, 0) THEN
	TREC(46, 0) = QR(I, 2, 1)
	TREC(46, 1) = 2
	TREC(46, 2) = 0
	TRC$(46, 0) = B$(I)
	TRC$(46, 1) = VERSUS$(I)
	TRC$(46, 2) = B$(1 - I)
	TRC$(46, 3) = DATE$
END IF

IF QR(I, 1, 1) + QR(1 - I, 1, 1) > TREC(47, 0) THEN
	TREC(47, 0) = QR(I, 1, 1) + QR(1 - I, 1, 1)
	TREC(47, 1) = 1
	TREC(47, 2) = QR(I, 1, 1)
	TRC$(47, 0) = B$(I)
	TRC$(47, 1) = VERSUS$(I)
	TRC$(47, 2) = B$(1 - I)
	TRC$(47, 3) = DATE$
END IF

IF QR(I, 2, 1) + QR(1 - I, 2, 1) > TREC(47, 0) THEN
	TREC(47, 0) = QR(I, 2, 1) + QR(1 - I, 2, 1)
	TREC(47, 1) = 2
	TREC(47, 2) = QR(I, 2, 1)
	TRC$(47, 0) = B$(I)
	TRC$(47, 1) = VERSUS$(I)
	TRC$(47, 2) = B$(1 - I)
	TRC$(47, 3) = DATE$
END IF

'TEAM FIELD GOAL ATTEMPTS
IF V8(I, 13) = V8(I, 14) AND V8(I, 14) > TREC(50, 0) THEN
	TREC(50, 0) = V8(I, 13)
	TREC(50, 1) = 0
	TREC(50, 2) = 0
	TRC$(50, 0) = B$(I)
	TRC$(50, 1) = VERSUS$(I)
	TRC$(50, 2) = B$(1 - I)
	TRC$(50, 3) = DATE$
END IF

'TEAM FIELD GOAL ATTEMPTS MOST MADE
IF V8(I, 13) = V8(I, 14) AND V8(1 - I, 13) = V8(1 - I, 14) AND V8(I, 14) + V8(1 - I, 14) > TREC(51, 0) THEN
	TREC(51, 0) = V8(I, 13)
	TREC(51, 1) = V8(1 - I, 13)
	TREC(51, 2) = 0
	TRC$(51, 0) = B$(I)
	TRC$(51, 1) = VERSUS$(I)
	TRC$(51, 2) = B$(1 - I)
	TRC$(51, 3) = DATE$
END IF

'TEAM FIELD GOAL ATTEMPTS NONE MADE
IF V8(I, 13) = 0 AND V8(I, 14) > TREC(52, 0) THEN
	TREC(52, 0) = V8(I, 14)
	TREC(52, 1) = 0
	TREC(52, 2) = 0
	TRC$(52, 0) = B$(I)
	TRC$(52, 1) = VERSUS$(I)
	TRC$(52, 2) = B$(1 - I)
	TRC$(52, 3) = DATE$
END IF

'TEAM FIELD GOAL ATTEMPTS NONE MADE
IF V8(I, 13) > TREC(53, 0) THEN
	TREC(53, 0) = V8(I, 13)
	TREC(53, 1) = 0
	TREC(53, 2) = 0
	TRC$(53, 0) = B$(I)
	TRC$(53, 1) = VERSUS$(I)
	TRC$(53, 2) = B$(1 - I)
	TRC$(53, 3) = DATE$
END IF

'TEAM FIELD GOAL ATTEMPTS NONE MADE
IF V8(I, 13) + V8(1 - I, 13) > TREC(54, 0) THEN
	TREC(54, 0) = V8(I, 13) + V8(1 - I, 13)
	TREC(54, 1) = V8(I, 13)
	TREC(54, 2) = V8(1 - I, 13)
	TRC$(54, 0) = B$(I)
	TRC$(54, 1) = VERSUS$(I)
	TRC$(54, 2) = B$(1 - I)
	TRC$(54, 3) = DATE$
END IF

IF QR(I, 1, 13) > TREC(55, 0) THEN
	TREC(55, 0) = QR(I, 1, 13)
	TREC(55, 1) = 1
	TREC(55, 2) = 0
	TRC$(55, 0) = B$(I)
	TRC$(55, 1) = VERSUS$(I)
	TRC$(55, 2) = B$(1 - I)
	TRC$(55, 3) = DATE$
END IF

IF QR(I, 2, 13) > TREC(55, 0) THEN
	TREC(55, 0) = QR(I, 2, 13)
	TREC(55, 1) = 2
	TREC(55, 2) = 0
	TRC$(55, 0) = B$(I)
	TRC$(55, 1) = VERSUS$(I)
	TRC$(55, 2) = B$(1 - I)
	TRC$(55, 3) = DATE$
END IF

'TEAM FIELD GOAL ATTEMPTS NONE MADE
IF V8(I, 14) > TREC(57, 0) THEN
	TREC(57, 0) = V8(I, 14)
	TREC(57, 1) = 0
	TREC(57, 2) = 0
	TRC$(57, 0) = B$(I)
	TRC$(57, 1) = VERSUS$(I)
	TRC$(57, 2) = B$(1 - I)
	TRC$(57, 3) = DATE$
END IF

'TEAM FIELD GOAL ATTEMPTS NONE MADE
IF V8(I, 14) + V8(1 - I, 14) > TREC(58, 0) THEN
	TREC(58, 0) = V8(I, 14) + V8(1 - I, 14)
	TREC(58, 1) = V8(I, 14)
	TREC(58, 2) = V8(1 - I, 14)
	TRC$(58, 0) = B$(I)
	TRC$(58, 1) = VERSUS$(I)
	TRC$(58, 2) = B$(1 - I)
	TRC$(58, 3) = DATE$
END IF

IF QR(I, 1, 14) > TREC(59, 0) THEN
	TREC(59, 0) = QR(I, 1, 14)
	TREC(59, 1) = 1
	TREC(59, 2) = 0
	TRC$(59, 0) = B$(I)
	TRC$(59, 1) = VERSUS$(I)
	TRC$(59, 2) = B$(1 - I)
	TRC$(59, 3) = DATE$
END IF

IF QR(I, 2, 14) > TREC(59, 0) THEN
	TREC(59, 0) = QR(I, 2, 14)
	TREC(59, 1) = 2
	TREC(59, 2) = 0
	TRC$(59, 0) = B$(I)
	TRC$(59, 1) = VERSUS$(I)
	TRC$(59, 2) = B$(1 - I)
	TRC$(59, 3) = DATE$
END IF

' FREE THROW ATTEMPTS NO MISS
IF V8(I, 2) = V8(I, 3) AND V8(I, 2) > TREC(60, 0) THEN
	TREC(60, 0) = V8(I, 2)
	TREC(60, 1) = 0
	TREC(60, 2) = 0
	TRC$(60, 0) = B$(I)
	TRC$(60, 1) = VERSUS$(I)
	TRC$(60, 2) = B$(1 - I)
	TRC$(60, 3) = DATE$
END IF

' FREE THROW ATTEMPTS LOW %
	IF V8(I, 3) = 0 THEN 103
IF V8(I, 2) / V8(I, 3) < TREC(61, 0) THEN
	TREC(61, 0) = V8(I, 2) / V8(I, 3)
	TREC(61, 1) = V8(I, 2)
	TREC(61, 2) = V8(I, 3)
	TRC$(61, 0) = B$(I)
	TRC$(61, 1) = VERSUS$(I)
	TRC$(61, 2) = B$(1 - I)
	TRC$(61, 3) = DATE$
END IF

103 ' FREE THROW ATTEMPTS COMBINED HIGH %
IF V8(I, 3) + V8(1 - I, 3)=0 THEN 104
IF (V8(I, 2) + V8(1 - I, 2)) / (V8(I, 3) + V8(1 - I, 3)) > TREC(62, 0) THEN
	TREC(62, 0) = (V8(I, 2) + V8(1 - I, 2)) / (V8(I, 3) + V8(1 - I, 3))
	TREC(62, 1) = V8(I, 2) / V8(I, 3)
	TREC(62, 2) = V8(1 - I, 2) / (V8(1 - I, 3)+0.01)
	TRC$(62, 0) = B$(I)
	TRC$(62, 1) = VERSUS$(I)
	TRC$(62, 2) = B$(1 - I)
	TRC$(62, 3) = DATE$
END IF

' FREE THROW ATTEMPTS COMBINED LOW %
IF (V8(I, 2) + V8(1 - I, 2)) / (V8(I, 3) + V8(1 - I, 3)) < TREC(63, 0) THEN
	TREC(63, 0) = (V8(I, 2) + V8(1 - I, 2)) / (V8(I, 3) + V8(1 - I, 3))
	TREC(63, 1) = V8(I, 2) / V8(I, 3)
	TREC(63, 2) = V8(1 - I, 2) / (V8(1 - I, 3)+0.01)
	TRC$(63, 0) = B$(I)
	TRC$(63, 1) = VERSUS$(I)
	TRC$(63, 2) = B$(1 - I)
	TRC$(63, 3) = DATE$
END IF

' TEAM FREE THROWS MADE

104 IF V8(I, 2) > TREC(64, 0) THEN
	TREC(64, 0) = V8(I, 2)
	TREC(64, 1) = 0
	TREC(64, 2) = 0
	TRC$(64, 0) = B$(I)
	TRC$(64, 1) = VERSUS$(I)
	TRC$(64, 2) = B$(1 - I)
	TRC$(64, 3) = DATE$
END IF

IF V8(I, 2) < TREC(65, 0) THEN
	TREC(65, 0) = V8(I, 2)
	TREC(65, 1) = 0
	TREC(65, 2) = 0
	TRC$(65, 0) = B$(I)
	TRC$(65, 1) = VERSUS$(I)
	TRC$(65, 2) = B$(1 - I)
	TRC$(65, 3) = DATE$
END IF

IF V8(I, 2) + V8(1 - I, 2) > TREC(66, 0) THEN
	TREC(66, 0) = V8(I, 2) + V8(1 - I, 2)
	TREC(66, 1) = V8(I, 2)
	TREC(66, 2) = V8(1 - I, 2)
	TRC$(66, 0) = B$(I)
	TRC$(66, 1) = VERSUS$(I)
	TRC$(66, 2) = B$(1 - I)
	TRC$(66, 3) = DATE$
END IF

IF V8(I, 2) + V8(1 - I, 2) < TREC(67, 0) THEN
	TREC(67, 0) = V8(I, 2) + V8(1 - I, 2)
	TREC(67, 1) = V8(I, 2)
	TREC(67, 2) = V8(1 - I, 2)
	TRC$(67, 0) = B$(I)
	TRC$(67, 1) = VERSUS$(I)
	TRC$(67, 2) = B$(1 - I)
	TRC$(67, 3) = DATE$
END IF

IF QR(I, 1, 2) > TREC(68, 0) THEN
	TREC(68, 0) = QR(I, 1, 2)
	TREC(68, 1) = 1
	TREC(68, 2) = 0
	TRC$(68, 0) = B$(I)
	TRC$(68, 1) = VERSUS$(I)
	TRC$(68, 2) = B$(1 - I)
	TRC$(68, 3) = DATE$
END IF

IF QR(I, 2, 2) > TREC(68, 0) THEN
	TREC(68, 0) = QR(I, 2, 2)
	TREC(68, 1) = 2
	TREC(68, 2) = 0
	TRC$(68, 0) = B$(I)
	TRC$(68, 1) = VERSUS$(I)
	TRC$(68, 2) = B$(1 - I)
	TRC$(68, 3) = DATE$
END IF

' TEAM FREE THROWS ATTEMPTED
IF V8(I, 3) > TREC(72, 0) THEN
	TREC(72, 0) = V8(I, 3)
	TREC(72, 1) = 0
	TREC(72, 2) = 0
	TRC$(72, 0) = B$(I)
	TRC$(72, 1) = VERSUS$(I)
	TRC$(72, 2) = B$(1 - I)
	TRC$(72, 3) = DATE$
END IF

IF V8(I, 3) < TREC(73, 0) THEN
	TREC(73, 0) = V8(I, 3)
	TREC(73, 1) = 0
	TREC(73, 2) = 0
	TRC$(73, 0) = B$(I)
	TRC$(73, 1) = VERSUS$(I)
	TRC$(73, 2) = B$(1 - I)
	TRC$(73, 3) = DATE$
END IF

IF V8(I, 3) + V8(1 - I, 3) > TREC(74, 0) THEN
	TREC(74, 0) = V8(I, 3) + V8(1 - I, 3)
	TREC(74, 1) = V8(I, 3)
	TREC(74, 2) = V8(1 - I, 3)
	TRC$(74, 0) = B$(I)
	TRC$(74, 1) = VERSUS$(I)
	TRC$(74, 2) = B$(1 - I)
	TRC$(74, 3) = DATE$
END IF

IF V8(I, 3) + V8(1 - I, 3) < TREC(75, 0) THEN
	TREC(75, 0) = V8(I, 3) + V8(1 - I, 3)
	TREC(75, 1) = V8(I, 3)
	TREC(75, 2) = V8(1 - I, 3)
	TRC$(75, 0) = B$(I)
	TRC$(75, 1) = VERSUS$(I)
	TRC$(75, 2) = B$(1 - I)
	TRC$(75, 3) = DATE$
END IF

IF QR(I, 1, 3)  > TREC(76, 0) THEN
	TREC(76, 0) = QR(I, 1, 3)
	TREC(76, 1) = 1
	TREC(76, 2) = 0
	TRC$(76, 0) = B$(I)
	TRC$(76, 1) = VERSUS$(I)
	TRC$(76, 2) = B$(1 - I)
	TRC$(76, 3) = DATE$
END IF

IF QR(I, 2, 3) > TREC(76, 0) THEN
	TREC(76, 0) = QR(I, 2, 3)
	TREC(76, 1) = 2
	TREC(76, 2) = 0
	TRC$(76, 0) = B$(I)
	TRC$(76, 1) = VERSUS$(I)
	TRC$(76, 2) = B$(1 - I)
	TRC$(76, 3) = DATE$
END IF

IF QR(I, 1, 3) + QR(1 - I, 1, 3) > TREC(77, 0) THEN
	TREC(77, 0) = QR(I, 1, 3) + QR(1 - I, 1, 3)
	TREC(77, 1) = 1
	TREC(77, 2) = QR(I, 1, 3)
	TRC$(77, 0) = B$(I)
	TRC$(77, 1) = VERSUS$(I)
	TRC$(77, 2) = B$(1 - I)
	TRC$(77, 3) = DATE$
END IF

IF QR(I, 2, 3) + QR(1 - I, 2, 3) > TREC(77, 0) THEN
	TREC(77, 0) = QR(I, 2, 3) + QR(1 - I, 2, 3)
	TREC(77, 1) = 2
	TREC(77, 2) = QR(I, 2, 3)
	TRC$(77, 0) = B$(I)
	TRC$(77, 1) = VERSUS$(I)
	TRC$(77, 2) = B$(1 - I)
	TRC$(77, 3) = DATE$
END IF

IF R3(I) > TREC(80, 0) THEN
	TREC(80, 0) = R3(I)
	TREC(80, 1) = 0
	TREC(80, 2) = 0
	TRC$(80, 0) = B$(I)
	TRC$(80, 1) = VERSUS$(I)
	TRC$(80, 2) = B$(1 - I)
	TRC$(80, 3) = DATE$
END IF

IF R3(I) < TREC(81, 0) THEN
	TREC(81, 0) = R3(I)
	TREC(81, 1) = 0
	TREC(81, 2) = 0
	TRC$(81, 0) = B$(I)
	TRC$(81, 1) = VERSUS$(I)
	TRC$(81, 2) = B$(1 - I)
	TRC$(81, 3) = DATE$
END IF

IF R3(I) + R3(1 - I) > TREC(82, 0) THEN
	TREC(82, 0) = R3(I) + R3(1 - I)
	TREC(82, 1) = R3(I)
	TREC(82, 2) = R3(1 - I)
	TRC$(82, 0) = B$(I)
	TRC$(82, 1) = VERSUS$(I)
	TRC$(82, 2) = B$(1 - I)
	TRC$(82, 3) = DATE$
END IF

IF R3(I) + R3(1 - I) < TREC(83, 0) THEN
	TREC(83, 0) = R3(I) + R3(1 - I)
	TREC(83, 1) = R3(I)
	TREC(83, 2) = R3(1 - I)
	TRC$(83, 0) = B$(I)
	TRC$(83, 1) = VERSUS$(I)
	TRC$(83, 2) = B$(1 - I)
	TRC$(83, 3) = DATE$
END IF

IF QR(I, 1, 4) > TREC(84, 0) THEN
	TREC(84, 0) = QR(I, 1, 4)
	TREC(84, 1) = 1
	TREC(84, 2) = 0
	TRC$(84, 0) = B$(I)
	TRC$(84, 1) = VERSUS$(I)
	TRC$(84, 2) = B$(1 - I)
	TRC$(84, 3) = DATE$
END IF

IF QR(I, 2, 4) > TREC(84, 0) THEN
	TREC(84, 0) = QR(I, 2, 4)
	TREC(84, 1) = 2
	TREC(84, 2) = 0
	TRC$(84, 0) = B$(I)
	TRC$(84, 1) = VERSUS$(I)
	TRC$(84, 2) = B$(1 - I)
	TRC$(84, 3) = DATE$
END IF

IF V8(I, 11) > TREC(86, 0) THEN
	TREC(86, 0) = V8(I, 11)
	TREC(86, 1) = 0
	TREC(86, 2) = 0
	TRC$(86, 0) = B$(I)
	TRC$(86, 1) = VERSUS$(I)
	TRC$(86, 2) = B$(1 - I)
	TRC$(86, 3) = DATE$
END IF

IF V8(I, 11) < TREC(87, 0) THEN
	TREC(87, 0) = V8(I, 11)
	TREC(87, 1) = 0
	TREC(87, 2) = 0
	TRC$(87, 0) = B$(I)
	TRC$(87, 1) = VERSUS$(I)
	TRC$(87, 2) = B$(1 - I)
	TRC$(87, 3) = DATE$
END IF
	IF V8(I, 11) + V8(1 - I, 11) > TREC(88, 0) THEN
	TREC(88, 0) = V8(I, 11) + V8(1 - I, 11)
	TREC(88, 1) = V8(I, 11)
	TREC(88, 2) = V8(1 - I, 11)
	TRC$(88, 0) = B$(I)
	TRC$(88, 1) = VERSUS$(I)
	TRC$(88, 2) = B$(1 - I)
	TRC$(88, 3) = DATE$
END IF

IF V8(I, 11) + V8(1 - I, 11) < TREC(89, 0) THEN
	TREC(89, 0) = V8(I, 11) + V8(1 - I, 11)
	TREC(89, 1) = V8(I, 11)
	TREC(89, 2) = V8(1 - I, 11)
	TRC$(89, 0) = B$(I)
	TRC$(89, 1) = VERSUS$(I)
	TRC$(89, 2) = B$(1 - I)
	TRC$(89, 3) = DATE$
END IF

IF QR(I, 1, 11) > TREC(90, 0) THEN
	TREC(90, 0) = QR(I, 1, 11)
	TREC(90, 1) = 1
	TREC(90, 2) = 0
	TRC$(90, 0) = B$(I)
	TRC$(90, 1) = VERSUS$(I)
	TRC$(90, 2) = B$(1 - I)
	TRC$(90, 3) = DATE$
END IF

IF QR(I, 2, 11) > TREC(90, 0) THEN
	TREC(90, 0) = QR(I, 2, 11)
	TREC(90, 1) = 2
	TREC(90, 2) = 0
	TRC$(90, 0) = B$(I)
	TRC$(90, 1) = VERSUS$(I)
	TRC$(90, 2) = B$(1 - I)
	TRC$(90, 3) = DATE$
END IF

' ASSISTS
IF V8(I, 7) > TREC(96, 0) THEN
	TREC(96, 0) = V8(I, 7)
	TREC(96, 1) = 0
	TREC(96, 2) = 0
	TRC$(96, 0) = B$(I)
	TRC$(96, 1) = VERSUS$(I)
	TRC$(96, 2) = B$(1 - I)
	TRC$(96, 3) = DATE$
END IF

IF V8(I, 7) < TREC(97, 0) THEN
	TREC(97, 0) = V8(I, 7)
	TREC(97, 1) = 0
	TREC(97, 2) = 0
	TRC$(97, 0) = B$(I)
	TRC$(97, 1) = VERSUS$(I)
	TRC$(97, 2) = B$(1 - I)
	TRC$(97, 3) = DATE$

1 END IF

IF V8(I, 7) + V8(1 - I, 7) > TREC(98, 0) THEN
	TREC(98, 0) = V8(I, 7) + V8(1 - I, 7)
	TREC(98, 1) = V8(I, 7)
	TREC(98, 2) = V8(1 - I, 7)
	TRC$(98, 0) = B$(I)
	TRC$(98, 1) = VERSUS$(I)
	TRC$(98, 2) = B$(1 - I)
	TRC$(98, 3) = DATE$

2 END IF

IF V8(I, 7) + V8(1 - I, 7) < TREC(99, 0) THEN
	TREC(99, 0) = V8(I, 7) + V8(1 - I, 7)
	TREC(99, 1) = V8(I, 7)
	TREC(99, 2) = V8(1 - I, 7)
	TRC$(99, 0) = B$(I)
	TRC$(99, 1) = VERSUS$(I)
	TRC$(99, 2) = B$(1 - I)
	TRC$(99, 3) = DATE$

3 END IF

IF QR(I, 1, 7) > TREC(100, 0) THEN
	TREC(100, 0) = QR(I, 1, 7)
	TREC(100, 1) = 1
	TREC(100, 2) = 0
	TRC$(100, 0) = B$(I)
	TRC$(100, 1) = VERSUS$(I)
	TRC$(100, 2) = B$(1 - I)
	TRC$(100, 3) = DATE$

4 END IF

IF QR(I, 2, 7) > TREC(100, 0) THEN
	TREC(100, 0) = QR(I, 2, 7)
	TREC(100, 1) = 2
	TREC(100, 2) = 0
	TRC$(100, 0) = B$(I)
	TRC$(100, 1) = VERSUS$(I)
	TRC$(100, 2) = B$(1 - I)
	TRC$(100, 3) = DATE$
END IF

IF QR(I, 2, 7)  + QR(1 - I, 2, 7)> TREC(101, 0) THEN
	TREC(101, 0) = QR(I, 2, 7) + QR(1 - I, 2, 7)
	TREC(101, 1) = 2
	TREC(101, 2) = 0
	TRC$(101, 0) = B$(I)
	TRC$(101, 1) = VERSUS$(I)
	TRC$(101, 2) = B$(1 - I)
	TRC$(101, 3) = DATE$

5 END IF

' FOULS
IF V8(I, 6) > TREC(104, 0) THEN
	TREC(104, 0) = V8(I, 6)
	TREC(104, 1) = 0
	TREC(104, 2) = 0
	TRC$(104, 0) = B$(I)
	TRC$(104, 1) = VERSUS$(I)
	TRC$(104, 2) = B$(1 - I)
	TRC$(104, 3) = DATE$

10 END IF

IF V8(I, 6) < TREC(105, 0) THEN
	TREC(105, 0) = V8(I, 6)
	TREC(105, 1) = 0
	TREC(105, 2) = 0
	TRC$(105, 0) = B$(I)
	TRC$(105, 1) = VERSUS$(I)
	TRC$(105, 2) = B$(1 - I)
	TRC$(105, 3) = DATE$

11 END IF

IF V8(I, 6) + V8(1 - I, 6) > TREC(106, 0) THEN
	TREC(106, 0) = V8(I, 6) + V8(1 - I, 6)
	TREC(106, 1) = V8(I, 6)
	TREC(106, 2) = V8(1 - I, 6)
	TRC$(106, 0) = B$(I)
	TRC$(106, 1) = VERSUS$(I)
	TRC$(106, 2) = B$(1 - I)
	TRC$(106, 3) = DATE$

12 END IF

IF V8(I, 6) + V8(1 - I, 6) < TREC(107, 0) THEN
	TREC(107, 0) = V8(I, 6) + V8(1 - I, 6)
	TREC(107, 1) = V8(I, 6)
	TREC(107, 2) = V8(1 - I, 6)
	TRC$(107, 0) = B$(I)
	TRC$(107, 1) = VERSUS$(I)
	TRC$(107, 2) = B$(1 - I)
	TRC$(107, 3) = DATE$

13 END IF

IF QR(I, 1, 6) > TREC(108, 0) THEN
	TREC(108, 0) = QR(I, 1, 6)
	TREC(108, 1) = 1
	TREC(108, 2) = 0
	TRC$(108, 0) = B$(I)
	TRC$(108, 1) = VERSUS$(I)
	TRC$(108, 2) = B$(1 - I)
	TRC$(108, 3) = DATE$

14 END IF

IF QR(I, 2, 6) > TREC(108, 0) THEN
	TREC(108, 0) = QR(I, 2, 6)
	TREC(108, 1) = 2
	TREC(108, 2) = 0
	TRC$(108, 0) = B$(I)
	TRC$(108, 1) = VERSUS$(I)
	TRC$(108, 2) = B$(1 - I)
	TRC$(108, 3) = DATE$

15 END IF

IF QR(I, 1, 6) + QR(1 - I, 1, 6) > TREC(109, 0) THEN
	TREC(109, 0) = QR(I, 1, 6) + QR(1 - I, 1, 6)
	TREC(109, 1) = 1
	TREC(109, 2) = QR(I, 1, 6)
	TRC$(109, 0) = B$(I)
	TRC$(109, 1) = VERSUS$(I)
	TRC$(109, 2) = B$(1 - I)
	TRC$(109, 3) = DATE$

16 END IF

IF QR(I, 2, 6) + QR(1 - I, 2, 6) > TREC(109, 0) THEN
	TREC(109, 0) = QR(I, 2, 6) + QR(1 - I, 2, 6)
	TREC(109, 1) = 2
	TREC(109, 2) = QR(I, 2, 6)
	TRC$(109, 0) = B$(I)
	TRC$(109, 1) = VERSUS$(I)
	TRC$(109, 2) = B$(1 - I)
	TRC$(109, 3) = DATE$

17 END IF

' STEALS
IF V8(I, 9) > TREC(112, 0) THEN
	TREC(112, 0) = V8(I, 9)
	TREC(112, 1) = 0
	TREC(112, 2) = 0
	TRC$(112, 0) = B$(I)
	TRC$(112, 1) = VERSUS$(I)
	TRC$(112, 2) = B$(1 - I)
	TRC$(112, 3) = DATE$

20 END IF

IF V8(I, 9) + V8(1 - I, 9) > TREC(114, 0) THEN
	TREC(114, 0) = V8(I, 9) + V8(1 - I, 9)
	TREC(114, 1) = V8(I, 9)
	TREC(114, 2) = V8(1 - I, 9)
	TRC$(114, 0) = B$(I)
	TRC$(114, 1) = VERSUS$(I)
	TRC$(114, 2) = B$(1 - I)
	TRC$(114, 3) = DATE$

21 END IF

IF QR(I, 1, 9) > TREC(116, 0) THEN
	TREC(116, 0) = QR(I, 1, 9)
	TREC(116, 1) = 1
	TREC(116, 2) = 0
	TRC$(116, 0) = B$(I)
	TRC$(116, 1) = VERSUS$(I)
	TRC$(116, 2) = B$(1 - I)
	TRC$(116, 3) = DATE$
	END IF

IF QR(I, 2, 9) > TREC(116, 0) THEN
	TREC(116, 0) = QR(I, 2, 9)
	TREC(116, 1) = 2
	TREC(116, 2) = 0
	TRC$(116, 0) = B$(I)
	TRC$(116, 1) = VERSUS$(I)
	TRC$(116, 2) = B$(1 - I)
	TRC$(116, 3) = DATE$

23 END IF

' BLOCKS
IF V8(I, 8) > TREC(118, 0) THEN
	TREC(118, 0) = V8(I, 8)
	TREC(118, 1) = 0
	TREC(118, 2) = 0
	TRC$(118, 0) = B$(I)
	TRC$(118, 1) = VERSUS$(I)
	TRC$(118, 2) = B$(1 - I)
	TRC$(118, 3) = DATE$

25 END IF

IF V8(I, 8) + V8(1 - I, 8) > TREC(119, 0) THEN
	TREC(119, 0) = V8(I, 8) + V8(1 - I, 8)
	TREC(119, 1) = V8(I, 8)
	TREC(119, 2) = V8(1 - I, 8)
	TRC$(119, 0) = B$(I)
	TRC$(119, 1) = VERSUS$(I)
	TRC$(119, 2) = B$(1 - I)
	TRC$(119, 3) = DATE$

26 END IF

IF QR(I, 1, 8) > TREC(121, 0) THEN
	TREC(121, 0) = QR(I, 1, 8)
	TREC(121, 1) = 1
	TREC(121, 2) = 0
	TRC$(121, 0) = B$(I)
	TRC$(121, 1) = VERSUS$(I)
	TRC$(121, 2) = B$(1 - I)
	TRC$(121, 3) = DATE$

22 END IF

IF QR(I, 2, 8) > TREC(121, 0) THEN
	TREC(121, 0) = QR(I, 2, 8)
	TREC(121, 1) = 1
	TREC(121, 2) = 0
	TRC$(121, 0) = B$(I)
	TRC$(121, 1) = VERSUS$(I)
	TRC$(121, 2) = B$(1 - I)
	TRC$(121, 3) = DATE$
	END IF

' TURNOVERS
IF V8(I, 12) > TREC(122, 0) THEN
	TREC(122, 0) = V8(I, 12)
	TREC(122, 1) = 0
	TREC(122, 2) = 0
	TRC$(122, 0) = B$(I)
	TRC$(122, 1) = VERSUS$(I)
	TRC$(122, 2) = B$(1 - I)
	TRC$(122, 3) = DATE$

29 END IF

IF V8(I, 12) < TREC(123, 0) THEN
	TREC(123, 0) = V8(I, 12)
	TREC(123, 1) = 0
	TREC(123, 2) = 0
	TRC$(123, 0) = B$(I)
	TRC$(123, 1) = VERSUS$(I)
	TRC$(123, 2) = B$(1 - I)
	TRC$(123, 3) = DATE$

30 END IF
	IF V8(I, 12) + V8(1 - I, 12) > TREC(124, 0) THEN
	TREC(124, 0) = V8(I, 12) + V8(1 - I, 12)
	TREC(124, 1) = V8(I, 12)
	TREC(124, 2) = V8(1 - I, 12)
	TRC$(124, 0) = B$(I)
	TRC$(124, 1) = VERSUS$(I)
	TRC$(124, 2) = B$(1 - I)
	TRC$(124, 3) = DATE$

31 END IF

IF V8(I, 12) + V8(1 - I, 12) < TREC(125, 0) THEN
	TREC(125, 0) = V8(I, 12) + V8(1 - I, 12)
	TREC(125, 1) = V8(I, 12)
	TREC(125, 2) = V8(1 - I, 12)
	TRC$(125, 0) = B$(I)
	TRC$(125, 1) = VERSUS$(I)
	TRC$(125, 2) = B$(1 - I)
	TRC$(125, 3) = DATE$

32 END IF

NEXT

	OPEN P$(1) + "RECORDS.GAM" FOR OUTPUT AS #1
		FOR I = 0 TO 48
		FOR I1 = 0 TO 2
		WRITE #1, REC(I, I1)
		NEXT
		FOR I1 = 0 TO 4
		WRITE #1, RC$(I, I1)
		NEXT
		NEXT
		FOR I = 0 TO 125
		FOR I1 = 0 TO 2
		WRITE #1, TREC(I, I1)
		NEXT
		FOR I1 = 0 TO 3
		WRITE #1, TRC$(I, I1)
		NEXT
		NEXT
	CLOSE 1
END SUB

'$INCLUDE: 'KeyInput.BM'
'$INCLUDE: 'QPProEqu.BM'
