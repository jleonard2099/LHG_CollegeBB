   DECLARE SUB MAMenu (BYVAL Address%, SELECTION%, Start%, Count%, EXITCODE%, FileColr%, HiLiteColr%, Rows%, Columns%, Spacing%, Row%, Column%)
   DECLARE FUNCTION GetDrive% ()
   DECLARE FUNCTION EXIST% (FILENAME$)
   DECLARE SUB MMenuVert (BYVAL Address%, Choice%, Start%, SCANCODE%, NormClr%, HiLite%, NumRows%, Row%, Column%)
   DIM item$(3), D$(1), AR$(1), A$(14)
   DIM T%(100), G$(4), G%(4, 10), B$(26), B%(26, 11)
   DIM TR%(12), GR$(4), GR%(4, 10), BR$(26), BR%(26, 11)
   DIM H1(100), O1$(100), V1(100), L1$(100), WG1$(100), LG1$(100), P1(100)
   DIM H(100), O$(100), V(100), L$(100), WG$(100), LG$(100), P(100)
   DIM VV$(500), VV%(500), Q$(500), A%(17), APR%(1, 120), CRDR(120), SITER$(120)
   DIM APRD%(100, 1), CRDRD(100), SITERD$(100)
   DIM AP%(100, 1), CRD(100), SITE$(100)
   OPEN "DEV.BAS" FOR INPUT AS #1: FOR I = 0 TO 1: INPUT #1, D$(I): NEXT: CLOSE #1
   DRIVE% = GetDrive%
 DIM O%(100), P%(100), H$(100), L%(4)
 DIM Z2(14, 14), Z(15), Z1(15), A(14, 14), W0(15), W1(15)
 DIM ORD%(100), ORD$(100), TRD%(100), PRD%(100), HRD$(100)
 DIM ZRD2(14, 14), ZRD(15), ZRD1(15), ARD$(14), ARD(14, 14), W0RD(15), W1RD(15)

1  CLS : COLOR , 1: LOCATE 1, 1: PRINT TAB(80); : LOCATE , 26: COLOR 0
   PRINT "COURTSIDE COLLEGE BASKETBALL: MERGE"
   LOCATE 24, 1: PRINT TAB(80); : LOCATE , 1
   PRINT "(C) LANCE HAFFNER/SHANNON LYNN 1991"; TAB(70); LEFT$(TIME$, 5);
   LOCATE 4, 1: COLOR 1, 0

   item$(1) = "MERGE STATISTICAL FILES           "
   item$(2) = "ALIGN STATISTICAL FILES           "
   item$(3) = "EXIT TO MAIN MENU                 "

     SELECTION% = 1
     Count% = 3
     Start% = 1
     SCANCODE% = 3
     FileColr% = 31
     HiLiteColr% = 112
     Spacing% = 1
     Row% = 8
     Column% = 25
     CALL box0(7, 24, 11, 59, 2, 31)
     CALL ShowCursor
     MMenuVert VARPTR(item$(1)), SELECTION%, Start%, SCANCODE%, FileColr%, HiLiteColr%, Count%, Row%, Column%
     CALL HideCursor
     COLOR , 0
     RN = SELECTION%
     IF SCANCODE% = 27 THEN RN = 3
     IF RN = 1 THEN 14
     IF RN = 2 THEN RUN "ALIGN.EXE"
     IF DRIVE% >= 67 THEN RUN "HELLO.EXE 4"
     CLS
     PRINT "MAKE SURE PROGRAM DISK IS IN DRIVE"
5    I$ = INKEY$: IF I$ = "" THEN 5
     RUN "HELLO.EXE 4"


14 COLOR 12, 0: CLS : LOCATE 2, 5: PRINT "ENTER COMPLETE PATH FOR TEAM STATS TO MERGE"
23 COLOR 15: LOCATE 4, 5: PRINT "EXAMPLE - A:"
24 LOCATE , 5: PRINT "          C:\HAFFNER"
25 LOCATE , 5: PRINT "          C:\HAFFNER\1980"
26 LOCATE , 5: PRINT "          D:\BASKET"
27 FOR J = 10 TO 13: LOCATE J
28 PRINT "                                                            ": NEXT
35 COLOR 10: LOCATE 10, 5: LINE INPUT "ROAD STATS:     "; PR$
36 LOCATE , 5: LOCATE , 5: LINE INPUT "CURRENT STATS:  "; PC$
37 COLOR 14: LOCATE 13, 5: PRINT "ANY CHANGE (Y/N)"
38 I$ = INKEY$: IF I$ = "" THEN 38
39 IF UCASE$(I$) = "Y" THEN 27
   GOSUB 3056
   B$ = A$: GOSUB 6585
   Z$ = MID$(B$, 4, QQ) + "." + LEFT$(B$, 2)
   CLS
   LOCATE 10, 15: PRINT "ROAD STATS ARE ON DRIVE "; PR$
   LOCATE , 15: PRINT "MASTER STATS ARE ON DRIVE "; PC$
   LOCATE , 15: PRINT "TEAM TO MERGE STATS FOR IS "; A$
   LOCATE 14, 15: PRINT "ANY CHANGE (YN)"
60 I$ = INKEY$: IF I$ = "" THEN 60
   IF UCASE$(I$) = "Y" THEN 1
100 GOSUB 1000
111 IF NOT EXIST%(PR$ + "\" + Z$) THEN 900
120 OPEN PR$ + "\" + Z$ FOR INPUT AS #1
121 INPUT #1, B$
122 FOR I = 0 TO 13: INPUT #1, ARD$(I)
123 FOR J = 0 TO 13: INPUT #1, ARD(I, J): NEXT: INPUT #1, W0RD(I): INPUT #1, W1RD(I): NEXT
124 FOR L = 0 TO 15: INPUT #1, ZRD(L): NEXT
125 FOR L = 0 TO 15: INPUT #1, ZRD1(L): NEXT
130 CLOSE #1
180 GOTO 500
200 GOSUB 1100
210 IF NOT EXIST%(PC$ + "\" + Z$) THEN 900
220 OPEN PC$ + "\" + Z$ FOR INPUT AS #1
221 INPUT #1, B$
222 FOR I = 0 TO 13: INPUT #1, A$(I)
223 FOR J = 0 TO 13: INPUT #1, A(I, J): NEXT: INPUT #1, W0(I): INPUT #1, W1(I): NEXT
224 FOR L = 0 TO 15: INPUT #1, Z(L): NEXT
225 FOR L = 0 TO 15: INPUT #1, Z1(L): NEXT
230 CLOSE #1
280 GOTO 600
319 LOCATE 18, 20: COLOR 12: PRINT "MERGING STAT FILE AND SCHEDULE RESULTS . . . ."
324 FOR I = 0 TO 13: FOR J = 0 TO 12: A(I, J) = A(I, J) + ARD(I, J): NEXT J: W0(I) = W0(I) + W0RD(I): W1(I) = W1(I) + W1RD(I): GOSUB 350: NEXT I
325 FOR L = 0 TO 15: Z(L) = Z(L) + ZRD(L): Z1(L) = Z1(L) + ZRD1(L): NEXT
326 GOTO 420
350 IF A(I, 13) < ARD(I, 13) THEN A(I, 13) = ARD(I, 13) ELSE A(I, 13) = A(I, 13)
352 RETURN
420 OPEN PC$ + "\" + Z$ FOR OUTPUT AS #1
421 WRITE #1, B$
422 FOR I = 0 TO 13: WRITE #1, A$(I)
423 FOR J = 0 TO 13: WRITE #1, A(I, J): NEXT: WRITE #1, W0(I): WRITE #1, W1(I): NEXT
424 FOR L = 0 TO 15: WRITE #1, Z(L): NEXT
425 FOR L = 0 TO 15: WRITE #1, Z1(L): NEXT
460 CLOSE #1
495 GOTO 800
500 OPEN PR$ + "\" + Z$ + "S" FOR INPUT AS #1
501 INPUT #1, YR%
502 FOR I = 1 TO 100: INPUT #1, ORD%(I): NEXT I
503 FOR I = 1 TO 100: INPUT #1, ORD$(I): NEXT I
504 FOR I = 1 TO 100: INPUT #1, TRD%(I): NEXT I
505 FOR I = 1 TO 100: INPUT #1, HRD$(I): NEXT I
    FOR I = 1 TO 100
    FOR I1 = 0 TO 1: INPUT #1, APRD%(I, I1): NEXT: NEXT
    FOR I = 1 TO 100: INPUT #1, CRDRD(I): NEXT I
    FOR I = 1 TO 100: INPUT #1, SITERD$(I): NEXT I
506 CLOSE #1
595 GOTO 200
600 OPEN PR$ + "\" + Z$ + "S" FOR INPUT AS #1
601 INPUT #1, Y%
602 FOR I = 1 TO 100: INPUT #1, O%(I): NEXT I
603 FOR I = 1 TO 100: INPUT #1, O$(I): NEXT I
604 FOR I = 1 TO 100: INPUT #1, T%(I): NEXT I
605 FOR I = 1 TO 100: INPUT #1, H$(I): NEXT I
    FOR I = 1 TO 100
    FOR I1 = 0 TO 1: INPUT #1, AP%(I, I1): NEXT: NEXT
    FOR I = 1 TO 100: INPUT #1, CRD(I): NEXT I
    FOR I = 1 TO 100: INPUT #1, SITE$(I): NEXT I
606 CLOSE #1
650 GOTO 1200
700 FOR K = 1 TO YR%
701 Y% = Y% + 1
705 O%(Y%) = ORD%(K)
710 O$(Y%) = ORD$(K)
715 T%(Y%) = TRD%(K)
720 H$(Y%) = HRD$(K)
    AP%(Y%, 0) = APRD%(Y%, 0)
    AP%(Y%, 1) = APRD%(Y%, 1)
    CRD(Y%) = CRDRD(Y%)
    SITE$(Y%) = SITERD$(Y%)
750 NEXT
790 GOTO 319
800 OPEN PC$ + "\" + Z$ + "S" FOR OUTPUT AS #1
801 WRITE #1, Y%
805 FOR I = 1 TO 100: WRITE #1, O%(I): NEXT I
810 FOR I = 1 TO 100: WRITE #1, O$(I): NEXT I
815 FOR I = 1 TO 100: WRITE #1, T%(I): NEXT I
820 FOR I = 1 TO 100: WRITE #1, H$(I): NEXT I
    FOR I = 1 TO 100
    FOR I1 = 0 TO 1: WRITE #1, AP%(I, I1): NEXT: NEXT
    FOR I = 1 TO 100: WRITE #1, CRD(I): NEXT I
    FOR I = 1 TO 100: WRITE #1, SITE$(I): NEXT I
840 CLOSE #1
850 Y = 0
860 LOCATE 20, 20: COLOR 12: PRINT "RESULTS SUCCESSFULLY MERGED!!"
861 FOR J = 1 TO 5000: NEXT J
875 GOTO 950
900 CLS : LOCATE 2, 10: COLOR 7: PRINT "NON-EXISTANT PATH OR INCORRECT FILE NAME!!!!"
901 PRINT : LOCATE , 10: LINE INPUT "HIT ENTER TO RE-ENTER INFORMATION"; DUMMY$
902 GOTO 1
950 FOR J = 13 TO 23
951 LOCATE J
952 PRINT "                                                                 "
953 NEXT
985 GOTO 1
990 CLS : COLOR 15: PRINT "MAKE SURE LEAGUE UTILITIES DISK IS IN DRIVE"
991 LOCATE 23: PRINT "HIT ANY KEY TO CONTINUE"
992 I$ = INKEY$: IF I$ = "" THEN 992
993 RUN "HELLO.EXE 2"
1000 LOCATE 21, 5: COLOR 3: PRINT "MAKE SURE ROAD STATS ARE IN DRIVE "; : COLOR 14: PRINT PR$
1001 COLOR 3: LOCATE 23, 5: LINE INPUT "HIT ENTER TO CONTINUE ......"; DUMMY$
1002 FOR J = 21 TO 23
1003 LOCATE J
1004 PRINT "                                                                "
1005 NEXT
1006 RETURN

1100 LOCATE 21, 5: COLOR 3: PRINT "MAKE SURE CURRENT STATS ARE IN DRIVE "; : COLOR 14: PRINT PC$
     COLOR 3: LOCATE 23, 5: LINE INPUT "HIT ENTER TO CONTINUE ......"; DUMMY$
     FOR J = 21 TO 23
     LOCATE J
1104 PRINT "                                                                "
1105 NEXT
1106 RETURN

1200 SEQ = 0
1201 FOR K = 0 TO 13
1202 IF ARD$(K) = A$(K) THEN 1220 ELSE 1210
1210 SEQ = SEQ + 1
1220 NEXT
1260 IF SEQ = 0 THEN 700 ELSE 1270
1270 CLS : COLOR 14: LOCATE 5, 27: PRINT "PLAYERS NOT IN SEQUENCE !!"; DUMMY$
1275 COLOR 15: LOCATE 7, 20: PRINT "STATS WILL BE DISTORTED UNLESS THE ROAD"
1276 LOCATE , 19: PRINT "FILE LISTS THE PLAYERS IN THE SAME SEQUENCE"
1277 LOCATE , 24: PRINT "AS YOUR CURRENT PLAYER STAT FILE."
1278 LOCATE 11, 24: COLOR 12: PRINT "YOU MUST REALIGN ROAD STAT FILE OR"
1279 LOCATE , 31: PRINT "ENTER STATS MANUALLY."
1280 LOCATE 15, 29: COLOR 13: LINE INPUT "HIT ENTER TO GO TO MENU"; DUMMY$
1290 GOTO 5


3056 COLOR 15, 0: CLS
   JJ = 6
   SN = 1: LOCATE 6, 8: COLOR 15, 4
   PRINT " Ö"; STRING$(61, 196); "· "; : FOR II = 1 TO JJ: LOCATE 6 + II, 8
   PRINT " º"; STRING$(61, 32); "º "; : NEXT
   LOCATE 7 + JJ, 8
   PRINT " Ó"; STRING$(61, 196); "½ "; : LOCATE 7, 32
   LOCATE , 12: PRINT "ENTER DISK ID: ": PRINT
   LOCATE , 12: PRINT "THE DISK ID IS USUALLY THE LAST TWO DIGITS OF THE"
   LOCATE , 12: PRINT "SEASON DISK YOU ARE PLAYING FROM (IE. 89, 76, 67)."
   PRINT
   LOCATE , 12: PRINT "ESC TO RETURN TO MAIN MENU"
3057 I$ = INKEY$: IF I$ = "" THEN 3057
   IF I$ = CHR$(27) THEN Z$ = "END": CLEAR : GOTO 1
   IF I$ = CHR$(13) THEN GOSUB 1102: GOTO 3060
   LOCATE 7, 27: PRINT I$
   LOCATE 7, 28: LINE INPUT NY$
   NY$ = I$ + NY$
   COLOR 15, 0
   GOSUB 4105
   IF NY$ = "" THEN GOSUB 1102: GOTO 3060
   YN$ = NY$
   FOR I = 1 TO 500: VV$(I) = "": NEXT
   GOSUB 1101
3060 IF BO% = 1 THEN BO% = 0: GOTO 3056
3058 LOCATE 2, 33: COLOR T%(0), T%(1): PRINT A$
     COLOR 15, 4: LOCATE , 33: PRINT "ANY CHANGE (YN)";
     I$ = INKEY$: IF I$ = "" THEN 3058
   IF UCASE$(I$) = "Y" THEN 3056
   COLOR 15, 0
     RETURN

1101 OPEN D$(0) + "BASK." + YN$ FOR RANDOM AS #1 LEN = 655
     Y = LOF(1)
     FIELD #1, 15 AS Q$(0), 640 AS X$
     FOR I1 = 1 TO Y / 655
     GET #1, I1
     VV$(I1) = Q$(0): VV%(I1) = I1
    NEXT
    CLOSE 1
    NTMS = Y / 655
1102 SELECTION% = 1
     Count% = NTMS
     Start% = 1
     FileColr% = 79
     HiLiteColr% = 112
     Rows% = 20
     Columns% = 4
     Spacing% = 6
     Row% = 4
     Column% = 1
     COLOR , 4: CLS : LOCATE , 33: COLOR 14
     PRINT "TEAM SELECTION": COLOR 15
     LOCATE 25, 1: COLOR 14: PRINT "ESC"; : COLOR 15
     PRINT "-SELECT NEW ID  PGDN  PGUP  "; : COLOR 14
     PRINT "ENTER"; : COLOR 15: PRINT "-SELECTS TEAM";
     CALL ShowCursor
20   MAMenu VARPTR(VV$(1)), SELECTION%, Start%, Count%, EXITCODE%, FileColr%, HiLiteColr%, Rows%, Columns%, Spacing%, Row%, Column%
     CALL HideCursor
     IF EXITCODE% = 27 THEN BO% = 1: RETURN
     IF EXITCODE% = -71 THEN Start% = 1: EXITCODE% = 3: SELECTION% = 1: GOTO 20
     IF EXITCODE% = -79 THEN Start% = NTMS: EXITCODE% = 3: SELECTION% = NTMS: GOTO 20
     IF EXITCODE% = -73 THEN Start% = Start% - 80: IF Start% < 1 THEN Start% = 1
     IF EXITCODE% = -81 THEN Start% = Start% + 80: IF Start% > NTMS THEN Start% = NTMS
     IF EXITCODE% = -81 OR EXITCODE% = -73 THEN EXITCODE% = 3: SELECTION% = Start%: GOTO 20
     T1 = VV%(SELECTION%)
9000 OPEN D$(0) + "BASK." + YN$ FOR RANDOM AS #1 LEN = 655
FIELD #1, 15 AS Q$(0), 2 AS Q$(1), 2 AS Q$(2), 2 AS Q$(3), 2 AS Q$(4), 2 AS Q$(5), 2 AS Q$(6), 2 AS Q$(7), 2 AS Q$(8), 2 AS Q$(9), 2 AS Q$(10), 2 AS Q$(11), 2 AS Q$(12), 2 AS Q$(13), 2 AS Q$(14), 2 AS Q$(15), 2 AS Q$(16), 2 AS Q$(17), 2 AS Q$(18), 2 _
 AS Q$(19), 602 AS X$
FOR I = 0 TO 13
FIELD #1, 53 + I * 43 AS X$, 15 AS Q$(I * 15 + 20), 2 AS Q$(I * 15 + 21), 2 AS Q$(I * 15 + 22), 2 AS Q$(I * 15 + 23), 2 AS Q$(I * 15 + 24), 2 AS Q$(I * 15 + 25), 2 AS Q$(I * 15 + 26), 2 AS Q$(I * 15 + 27), 2 AS Q$(I * 15 + 28), 2 AS Q$(I * 15 + 29) _
, 2 AS Q$(I * 15 + 30), 2 AS Q$(I * 15 + 31), 2 AS Q$(I * 15 + 32), 2 AS Q$(I * 15 + 33), 2 AS Q$(I * 15 + 34), 655 - 53 - 43 - I * 43 AS X$
NEXT
GET #1, T1
   A$ = Q$(0)
9005 IF RIGHT$(A$, 1) = " " THEN A$ = LEFT$(A$, LEN(A$) - 1): GOTO 9005
     B$ = A$
     SP = CVI(Q$(1)): DA = CVI(Q$(2)): V1% = CVI(Q$(3)): V2% = CVI(Q$(4))
     FOR I = 0 TO 4: L%(I) = CVI(Q$(I + 5)): NEXT
     FOR I = 0 TO 9: T%(I) = CVI(Q$(I + 10)): NEXT
     CLOSE 1
     B$ = A$
     RETURN
6585 FOR XX = 4 TO 11: IF MID$(B$, XX, 1) = " " OR MID$(B$, XX, 1) = "." THEN MID$(B$, XX, 1) = "_"
     NEXT XX
     FOR XX = 12 TO 14: IF MID$(B$, XX, 2) = "ST" THEN MID$(B$, 9, 1) = "_": MID$(B$, 10, 2) = "ST"
     NEXT XX
     QQ = 8: FOR XX = 11 TO 4 STEP -1: IF MID$(B$, XX, 1) = "_" THEN QQ = XX - 4: GOTO 6615
     GOTO 6620
6615 NEXT XX
6620 RETURN
4105 IF UCASE$(LEFT$(D$(0), 1)) <> "A" AND UCASE$(LEFT$(D$(0), 1)) <> "B" THEN RETURN
     CLS : PRINT "MAKE SURE CORRECT TEAMS DISK IS IN DRIVE "; D$(0)
     LOCATE 23, 1: PRINT "PRESS ANY KEY TO CONTINUE"
4106 I$ = INKEY$: IF I$ = "" THEN 4106
     RETURN

