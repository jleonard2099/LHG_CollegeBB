'$INCLUDE: 'KeyInput.BI'
'$INCLUDE: 'QPProEqu.BI'

DECLARE SUB TITLE ()

DIM Q$(377), T%(34), B$(14), OP%(100), OP$(100), HP%(100), HP$(100)
DIM VV$(500), A$(15), A(15, 14), Z(15), Z1(15), W0(15), W1(15), AA$(15, 1), PS$(15), V%(500)
DIM D$(1), ITEM$(4), L%(6), T$(0), A1(13, 6), X1(13, 6)
DIM RS(13, 13), P$(13), DF(13), t1%(20)

OPEN "DEV.BAS" FOR INPUT AS #2: FOR I = 0 TO 1: INPUT #2, D$(I): NEXT
CLOSE #2

10 CALL TITLE
	ITEM$(1) = "VIEW/PRINT STATISTICAL COMPARISONS"
	ITEM$(2) = "RETURN TO COURTSIDE MENU          "
	SELECTION% = 1
	Count% = 2
	Start% = 1
	SCANCODE% = 2
	FileFGColr% = 15:FileBGColr% = 1
	HiLiteFGColr% = 0:HiLiteBGColr% = 7
	Spacing% = 1
	Row% = 9
	Column% = 24
CALL box0(8, 23, 11, 58, 2, 31)
	
_MouseShow "DEFAULT"
MMenuVert VARPTR(ITEM$(1)), SELECTION%, Start%, SCANCODE%, FileFGColr%, FileBGColr%, HiLiteFGColr%, HiLiteBGColr%, Count%, Row%, Column%
_MouseHide

	COLOR , 0
	I1 = SELECTION%
	IF SCANCODE% = 27 OR I1 = 2 THEN 1
	IF I1 = 1 THEN 40

1   RUN "HELLO.EXE 4"

40  COLOR 15, 0: CLS
	JJ = 7
	LOCATE 6, 8: COLOR 15, 4
	PRINT " Ö"; STRING$(61, 196); "· "; : FOR II = 1 TO JJ: LOCATE 6 + II, 8
	PRINT " º"; STRING$(61, 32); "º "; : NEXT
	LOCATE 7 + JJ, 8
	PRINT " Ó"; STRING$(61, 196); "½ "; : LOCATE 7, 32
	LOCATE , 12: PRINT "ENTER DISK ID: ": PRINT
	LOCATE , 12: PRINT "THE DISK ID IS USUALLY THE LAST TWO DIGITS OF THE"
	LOCATE , 12: PRINT "SEASON DISK YOU ARE PLAYING FROM (IE. 89, 76, 67)."
	LOCATE , 12: PRINT "HIT <ENTER> TO USE PREVIOUS ID"
	LOCATE 7, 27: INPUT NY$
	IF NY$ = "" THEN GOSUB 1102: GOTO 182
	YN$ = NY$
	FOR I = 1 TO 200: VV$(I) = "": NEXT

	GOSUB 1100

182 IF BO% = 1 THEN BO% = 0: GOTO 10

183 LOCATE 2, 33: COLOR 15, 0: COLOR T%(0), T%(1)
	PRINT B$(0): COLOR 15, 4
	LOCATE , 33: PRINT "ANY CHANGE (YN)";
	I$=GetKeyPress$
	IF UCASE$(I$) = "Y" THEN 40
	GOTO 170

1100 OPEN D$(0) + "BASK." + YN$ FOR RANDOM AS #1 LEN = 655
	Y = LOF(1)
	FIELD #1, 15 AS Q$(0), 640 AS X$
	FOR I1 = 1 TO Y / 655
	GET #1, I1
	VV$(I1) = Q$(0): V%(I1) = I1
	NEXT
CLOSE 1
	NTMS = Y / 655

1102 SELECTION% = 1
	Count% = NTMS
	Start% = 1
	FileFGColr% = 15:FileBGColr% = 4
	HiLiteFGColr% = 0:HiLiteBGColr% = 7
	Rows% = 20
	Columns% = 4
	Spacing% = 6
	Row% = 4
	Column% = 1
	COLOR , 4: CLS : LOCATE , 33: COLOR 14
	PRINT "TEAM SELECTION": COLOR 15
	LOCATE 25, 1: COLOR 14: PRINT "ESC"; : COLOR 15
	PRINT "-SELECT NEW ID  PGDN  PGUP  "; : COLOR 14
	PRINT "ENTER"; : COLOR 15: PRINT "-SELECTS TEAM";
	
_MouseShow "DEFAULT"
20   MAMenu VARPTR(VV$(1)), SELECTION%, Start%, Count%, EXITCODE%, FileFGColr%, FileBGColr%, HiLiteFGColr%, HiLiteBGColr%, Rows%, Columns%, Spacing%, Row%, Column%
_MouseHide

	IF EXITCODE% = 27 THEN BO% = 1: RETURN
	IF EXITCODE% = -71 THEN Start% = 1: EXITCODE% = 3: SELECTION% = 1: GOTO 20
	IF EXITCODE% = -79 THEN Start% = NTMS: EXITCODE% = 3: SELECTION% = NTMS: GOTO 20
	IF EXITCODE% = -73 THEN Start% = Start% - 80: IF Start% < 1 THEN Start% = 1
	IF EXITCODE% = -81 THEN Start% = Start% + 80: IF Start% > NTMS THEN Start% = NTMS
	IF EXITCODE% = -81 OR EXITCODE% = -73 THEN EXITCODE% = 3: SELECTION% = Start%: GOTO 20
	t1 = V%(SELECTION%)
OPEN D$(0) + "BASK." + YN$ FOR RANDOM AS #1 LEN = 655
FIELD #1, 15 AS Q$(0), 2 AS Q$(1), 2 AS Q$(2), 2 AS Q$(3), 2 AS Q$(4), 2 AS Q$(5), 2 AS Q$(6), 2 AS Q$(7), 2 AS Q$(8), 2 AS Q$(9), 2 AS Q$(10), 2 AS Q$(11), 2 AS Q$(12), 2 AS Q$(13), 2 AS Q$(14), 2 AS Q$(15), 2 AS Q$(16), 2 AS Q$(17), 2 AS Q$(18), 2 _
AS Q$(19), 602 AS X$
FOR I = 0 TO 13
FIELD #1, 53 + I * 43 AS X$, 15 AS Q$(I * 15 + 20), 2 AS Q$(I * 15 + 21), 2 AS Q$(I * 15 + 22), 2 AS Q$(I * 15 + 23), 2 AS Q$(I * 15 + 24), 2 AS Q$(I * 15 + 25), 2 AS Q$(I * 15 + 26), 2 AS Q$(I * 15 + 27), 2 AS Q$(I * 15 + 28), 2 AS Q$(I * 15 + 29) _
, 2 AS Q$(I * 15 + 30), 2 AS Q$(I * 15 + 31), 2 AS Q$(I * 15 + 32), 2 AS Q$(I * 15 + 33), 2 AS Q$(I * 15 + 34), 655 - 53 - 43 - I * 43 AS X$
NEXT
GET #1, t1
	B$(0) = Q$(0)

9005 IF RIGHT$(A$, 1) = " " THEN A$ = LEFT$(A$, LEN(A$) - 1): GOTO 9005
	B$ = A$
	SP = CVI(Q$(1)): DA = CVI(Q$(2)): V1% = CVI(Q$(3)): V2% = CVI(Q$(4))
	FOR I = 0 TO 4: L%(I) = CVI(Q$(I + 5)): NEXT
	FOR I = 0 TO 9: T%(I) = CVI(Q$(I + 10)): NEXT
	FOR I = 0 TO 13
	A$(I) = Q$(I * 15 + 20)

9007 IF RIGHT$(A$(I), 1) = " " THEN A$(I) = LEFT$(A$(I), LEN(A$(I)) - 1): GOTO 9007
	FOR I1 = 0 TO 6
	A1(I, I1) = CVI(Q$(I * 15 + I1 + 21))
	X1(I, I1) = CVI(Q$(I * 15 + I1 + 28))
	NEXT: NEXT
CLOSE 1

OPEN D$(0) + "COLBBTMS." + YN$ FOR RANDOM AS #1 LEN = 566
FIELD #1, 15 AS Q$(0), 40 AS Q$(1), 15 AS Q$(2), 4 AS Q$(3)
FOR I = 0 TO 13
FIELD #1, 74 + I * 32 AS X$, 2 AS Q$(I * 16 + 4), 2 AS Q$(I * 16 + 5), 2 AS Q$(I * 16 + 6), 2 AS Q$(I * 16 + 7), 2 AS Q$(I * 16 + 8), 2 AS Q$(I * 16 + 9), 2 AS Q$(I * 16 + 10), 2 AS Q$(I * 16 + 11), 2 AS Q$(I * 16 + 12), 2 AS Q$(I * 16 + 13), 2 AS  _
Q$(I * 16 + 14), 2 AS Q$(I * 16 + 15), 2 AS Q$(I * 16 + 16), 2 AS Q$(I * 16 + 17), 2 AS Q$(I * 16 + 18), 2 AS Q$(I * 16 + 19)
FIELD #1, 522 AS X$, 2 AS Q$(228), 2 AS Q$(229), 2 AS Q$(230), 2 AS Q$(231), 2 AS Q$(232), 2 AS Q$(233), 2 AS Q$(234), 2 AS Q$(235), 2 AS Q$(236), 2 AS Q$(237), 2 AS Q$(238), 2 AS Q$(239), 2 AS Q$(240), 2 AS Q$(241), 2 AS Q$(242), 2 AS Q$(243), 2 AS _
Q$(244), 2 AS Q$(245), 2 AS Q$(246), 2 AS Q$(247), 2 AS Q$(248), 2 AS Q$(249)
NEXT
GET #1, t1
	C$ = Q$(0)
	S$ = Q$(1)
	A1$ = Q$(2)
	ATT = CVL(Q$(3))
	  FOR I = 0 TO 13
	DF(I) = CVI(Q$(I * 16 + 4))
	P$(I) = Q$(I * 16 + 5)
	FOR I1 = 0 TO 13
	RS(I, I1) = CVI(Q$(I * 16 + I1 + 6))
	NEXT: NEXT
	FOR I = 0 TO 20
	t1%(I) = CVI(Q$(228 + I))
	NEXT
	CK = CVI(Q$(249))
CLOSE 1
IF CK <> 999 THEN
	C$ = "": S$ = "": A1$ = "": ATT = 0
	FOR I = 0 TO 13: DF(I) = 5: P$(I) = ""
	FOR I1 = 0 TO 13: RS(I, I1) = 0
	NEXT: NEXT
	FOR I = 0 TO 20: t1%(I) = 0: NEXT
END IF
	  B$ = A$

1486 IF RIGHT$(B$(0), 1) = " " THEN B$(0) = LEFT$(B$(0), LEN(B$(0)) - 1): GOTO 1486
	B$ = B$(0)
	FOR XX = 4 TO 11
	IF MID$(B$, XX, 1) = " " OR MID$(B$, XX, 1) = "." THEN MID$(B$, XX, 1) = "_"
	NEXT XX
	FOR XX = 12 TO 14: IF MID$(B$, XX, 2) = "ST" THEN MID$(B$, 9, 1) = "_": MID$(B$, 10, 2) = "ST"
	NEXT XX
	QQ = 8: FOR XX = 11 TO 4 STEP -1: IF MID$(B$, XX, 1) = "_" THEN QQ = XX - 4: GOTO 6615
	GOTO 6620

6615 NEXT XX

6620 Z$ = MID$(B$, 4, QQ) + "." + LEFT$(B$, 2)
	 IF NOT _FILEEXISTS(D$(1) + Z$) THEN 2060

120 OPEN D$(1) + Z$ FOR INPUT AS #1

122 INPUT #1, B$

123 FOR I = 0 TO 13: INPUT #1, A$(I)

124 FOR J = 0 TO 13: INPUT #1, A(I, J): NEXT: INPUT #1, W0(I): INPUT #1, W1(I): NEXT

125 FOR L = 0 TO 15: INPUT #1, Z(L): NEXT

126 FOR L = 0 TO 15: INPUT #1, Z1(L): NEXT

160 CLOSE #1
	GOSUB 9000

9100 HW = 0: HL = 0: AW = 0: AL = 0

9103 OPEN D$(1) + Z$ + "S" FOR INPUT AS #1

9105 INPUT #1, Y

9110 FOR J = 1 TO 100: INPUT #1, OP%(J): NEXT

9112 FOR J = 1 TO 100: INPUT #1, OP$(J): NEXT

9113 FOR J = 1 TO 100: INPUT #1, HP%(J): NEXT

9114 FOR J = 1 TO 100: INPUT #1, HP$(J): NEXT

9120 CLOSE #1

9130 LS = 0:WN = 0
	FOR I = 1 TO Y

9131 IF OP%(I) < HP%(I) THEN LS = LS + 1

9132 IF OP%(I) > HP%(I) THEN WN = WN + 1

9135 NEXT
	RETURN

170 COLOR 15, 0: CLS
	JJ = 4: GOSUB 9150: COLOR 7
	LOCATE , 30: PRINT "STATS TO "; : COLOR 15: PRINT "S"; : COLOR 7: PRINT "CREEN"
	LOCATE , 30: PRINT "STATS TO "; : COLOR 15: PRINT "P"; : COLOR 7: PRINT "RINTER"
8651 I$ = GetKeyPress$
	IF I$ = CHR$(27) THEN 10
	IF UCASE$(I$) <> "P" AND UCASE$(I$) <> "S" THEN 8651
	COLOR 14, 0
	IF UCASE$(I$) = "S" THEN 200
	IF UCASE$(I$) = "P" THEN 700

200 GOTO 2000

201 CLS : COLOR 9: LOCATE 3, 12: PRINT "STAT COMPARISONS FOR "; : COLOR 15: PRINT B$(0)

202 FOR I = 0 TO 13: COLOR 12
	LOCATE I + 5, 15
	PRINT USING "##"; I + 1;
	PRINT ". "; : COLOR 7: PRINT A$(I): NEXT

203 COLOR 12: LOCATE , 15: PRINT "15. "; : COLOR 3: PRINT "View Players In Sequence"

204 COLOR 12: LOCATE , 15: PRINT "16. "; : COLOR 3: PRINT "View Another Team"

206 COLOR 12: LOCATE , 15: PRINT "17. "; : COLOR 3: PRINT "Return To Main Menu"

219 COLOR 15: LOCATE 23, 15: INPUT "ENTER # TO VIEW "; B9

220 IF B9 < 1 OR B9 > 17 THEN GOTO 201

221 IF B9 >= 1 AND B9 <= 14 THEN I = B9 - 1: CLS : GOSUB 5000: GOTO 300

236 IF B9 = 15 THEN BI = 1: CLS : GOTO 260

237 IF B9 = 16 THEN GOTO 40

239 IF B9 = 17 THEN GOTO 1

260 GOSUB 5000

262 I = I + 1

263 FOR I = 0 TO 13

264 IF A$(I) = "XXX" OR A$(I) = "END" OR A$(I) = "" THEN 591

300 COLOR 11: LOCATE 2, 2: PRINT T$(0)

301 COLOR 15, 0: LOCATE 2, 14: PRINT STRING$(34, 177): COLOR 14: LOCATE 2, 14: PRINT A$(I); : PRINT " - "; : COLOR 11: PRINT PS$(I)

302 COLOR 12: LOCATE 5, 2: PRINT "ACTUAL  "

303 LOCATE 6, 2: PRINT "REPLAY  "; : COLOR 7, 0: PRINT STRING$(2, 177)
	LOCATE 7, 4: PRINT STRING$(8, 177)

305 COLOR 0, 11: LOCATE 4, 14: PRINT "  G ";

306 LOCATE , 18: PRINT " MIN ";

307 LOCATE , 23: PRINT " FGM ";

308 LOCATE , 28: PRINT " FGA ";

309 LOCATE , 33: PRINT " FG-PCT ";

310 LOCATE , 41: PRINT " FTM ";

311 LOCATE , 46: PRINT " FTA ";

312 LOCATE , 51: PRINT " FT-PCT ";

313 LOCATE , 59: PRINT " O.REB ";

314 LOCATE , 65: PRINT "  O.REB/G"
	COLOR 12, 0: LOCATE 10, 2: PRINT "ACTUAL  "
	LOCATE 11, 2: PRINT "REPLAY  "; : COLOR 7, 0: PRINT STRING$(2, 177)
	LOCATE 12, 4: PRINT STRING$(8, 177)

315 COLOR 0, 11: LOCATE 9, 14: PRINT " D.REB ";

316 LOCATE , 21: PRINT " D.REB/G ";

317 LOCATE , 30: PRINT " ASST ";

318 LOCATE , 36: PRINT " ASST/G ";

319 LOCATE , 44: PRINT " FOULS ";
	LOCATE , 51: PRINT " F/G ";
	LOCATE , 56: PRINT " TREB ";
	LOCATE , 62: PRINT " STL ";
	LOCATE , 67: PRINT " STL/G"
	COLOR 12, 0: LOCATE 15, 2: PRINT "ACTUAL  "
	LOCATE 16, 2: PRINT "REPLAY  "; : COLOR 7, 0: PRINT STRING$(2, 177)
	LOCATE 17, 4: PRINT STRING$(8, 177)
	COLOR 0, 11: LOCATE 14, 14: PRINT " BLK ";
	LOCATE , 19: PRINT " BLK/G ";
	LOCATE , 26: PRINT " 3-FGM ";
	LOCATE , 33: PRINT " 3-FGA ";
	LOCATE , 40: PRINT " 3-FG-PCT ";
	LOCATE , 50: PRINT "  RB/G ";
	LOCATE , 57: PRINT "  PTS";
	LOCATE , 62: PRINT " PTS/G ";
	LOCATE , 69: PRINT " MIN/G"

321 COLOR 1, 11: LOCATE 5, 14: PRINT USING "###"; X1(I, 0);
	LOCATE , 17: PRINT USING "#####"; RS(I, 1);
	LOCATE , 22: PRINT USING "#####"; RS(I, 3);
	LOCATE , 27: PRINT USING "#####"; RS(I, 2);
	IF RS(I, 2) = 0 THEN LOCATE , 32: PRINT "   --.- %";
	IF RS(I, 2) > 0 THEN LOCATE , 32: PRINT USING "#####.#"; (RS(I, 3) / RS(I, 2)) * 100; : PRINT " %";
	LOCATE , 40: PRINT USING "#####"; RS(I, 5);
	LOCATE , 45: PRINT USING "#####"; RS(I, 4);
	IF RS(I, 4) = 0 THEN LOCATE , 50: PRINT "   --.-"; : PRINT " %";
	IF RS(I, 4) > 0 THEN LOCATE , 50: PRINT USING "#####.#"; (RS(I, 5) / RS(I, 4)) * 100; : PRINT " %";
	LOCATE , 58: PRINT USING "#######"; RS(I, 6);
	IF RS(I, 0) = 0 OR RS(I, 6) = 0 THEN LOCATE , 65: PRINT "      0.0";
	IF RS(I, 0) > 0 AND RS(I, 6) = 0 THEN LOCATE , 65: PRINT "      0.0";
	IF RS(I, 0) > 0 AND RS(I, 6) > 0 THEN LOCATE , 65: PRINT USING "#######.#"; RS(I, 6) / RS(I, 0);
	COLOR 7, 0: PRINT STRING$(2, 177)
	COLOR 1, 11: LOCATE 10, 14: PRINT USING "######"; RS(I, 7) - RS(I, 6);
	IF RS(I, 0) = 0 OR RS(I, 7) - RS(I, 6) = 0 THEN LOCATE , 20: PRINT "      0.0";
	IF RS(I, 0) > 0 AND RS(I, 7) - RS(I, 6) = 0 THEN LOCATE , 20: PRINT "      0.0";
	IF RS(I, 0) > 0 AND RS(I, 7) - RS(I, 6) > 0 THEN LOCATE , 20: PRINT USING "#######.#"; (RS(I, 7) - RS(I, 6)) / RS(I, 0);
	LOCATE , 29: PRINT USING "######"; RS(I, 9);
	IF RS(I, 0) = 0 OR RS(I, 9) = 0 THEN LOCATE , 35: PRINT "     0.0";
	IF RS(I, 0) > 0 AND RS(I, 9) = 0 THEN LOCATE , 35: PRINT "     0.0";
	IF RS(I, 0) > 0 AND RS(I, 9) > 0 THEN LOCATE , 35: PRINT USING "######.#"; RS(I, 9) / RS(I, 0);
	LOCATE , 43: PRINT USING "#######"; RS(I, 8);
	IF RS(I, 0) = 0 OR RS(I, 8) = 0 THEN LOCATE , 50: PRINT "  0.0";
	IF RS(I, 0) > 0 AND RS(I, 8) = 0 THEN LOCATE , 50: PRINT "  0.0";
	IF RS(I, 0) > 0 AND RS(I, 8) > 0 THEN LOCATE , 50: PRINT USING "###.#"; RS(I, 8) / RS(I, 0);
	LOCATE , 55: PRINT USING "######"; RS(I, 7);
	LOCATE , 61: PRINT USING "#####"; RS(I, 11);

330 IF RS(I, 0) = 0 OR RS(I, 11) = 0 THEN LOCATE , 66: PRINT "    0.0";

331 IF RS(I, 0) > 0 AND RS(I, 11) = 0 THEN LOCATE , 66: PRINT "    0.0";

332 IF RS(I, 0) > 0 AND RS(I, 11) > 0 THEN LOCATE , 66: PRINT USING "#####.#"; RS(I, 11) / RS(I, 0);
	COLOR 7, 0: PRINT STRING$(2, 177)

335 COLOR 1, 11: LOCATE 15, 14: PRINT USING "####"; RS(I, 10);

337 IF RS(I, 0) = 0 OR RS(I, 10) = 0 THEN LOCATE , 18: PRINT "    0.0";

338 IF RS(I, 0) > 0 AND RS(I, 10) = 0 THEN LOCATE , 18: PRINT "    0.0";

339 IF RS(I, 0) > 0 AND RS(I, 12) > 0 THEN LOCATE , 18: PRINT USING "#####.#"; RS(I, 10) / RS(I, 0);

341 LOCATE , 25: PRINT USING "#######"; RS(I, 13);

344 LOCATE , 32: PRINT USING "#######"; RS(I, 12);

346 IF RS(I, 13) = 0 THEN LOCATE , 39: PRINT "     --.-"; : PRINT " %";

347 IF RS(I, 12) > 0 THEN LOCATE , 39: PRINT USING "#######.#"; (RS(I, 13) / RS(I, 12)) * 100; : PRINT " %";

351 LOCATE , 49: IF RS(I, 0) <> 0 THEN PRINT USING "   ##.#"; RS(I, 7) / RS(I, 0);

353 LOCATE , 56: PRINT USING "######"; (RS(I, 3) * 2) + RS(I, 5) + RS(I, 13);

357 IF RS(I, 0) = 0 THEN LOCATE , 62: PRINT "  --.-";

358 IF RS(I, 0) > 0 THEN LOCATE , 62: PRINT USING "####.#"; ((RS(I, 3) * 2) + RS(I, 5) + RS(I, 13)) / RS(I, 0);

367 IF RS(I, 0) = 0 THEN LOCATE , 68: PRINT "   --.-";

368 IF RS(I, 0) > 0 THEN LOCATE , 68: PRINT USING "#####.#"; RS(I, 1) / RS(I, 0);
	COLOR 7, 0: PRINT STRING$(2, 177)

400 COLOR 14, 11: LOCATE 6, 14: PRINT USING "###"; A(I, 0);
	IF A(I, 10) = 0 THEN LOCATE , 17: PRINT "    0";
	IF A(I, 10) > 0 THEN LOCATE , 17: PRINT USING "#####"; (A(I, 10) + 30) / 60;
	LOCATE , 22: PRINT USING "#####"; A(I, 2);
	LOCATE , 27: PRINT USING "#####"; A(I, 1);
	IF A(I, 2) = 0 THEN LOCATE , 32: PRINT "    0.0"; : PRINT "%";
	IF A(I, 2) > 0 THEN LOCATE , 32: PRINT USING "#####.#"; (A(I, 2) / A(I, 1)) * 100; : PRINT "%";
	LOCATE 6, 40: PRINT USING "#####"; A(I, 4);
	LOCATE 6, 45: PRINT USING "#####"; A(I, 3);
	IF A(I, 4) = 0 THEN LOCATE , 50: PRINT "    0.0"; : PRINT "%";
	IF A(I, 4) > 0 THEN LOCATE , 50: PRINT USING "#####.#"; A(I, 4) / A(I, 3) * 100; : PRINT "%";
	LOCATE , 58: PRINT USING "#######"; A(I, 12);
	IF A(I, 0) = 0 OR A(I, 12) = 0 THEN LOCATE , 65: PRINT "      0.0";
	IF A(I, 0) > 0 AND A(I, 12) = 0 THEN LOCATE , 65: PRINT "      0.0";
	IF A(I, 0) > 0 AND A(I, 12) > 0 THEN LOCATE , 65: PRINT USING "#######.#"; A(I, 12) / A(I, 0);
	COLOR 7, 0: PRINT STRING$(2, 177)
	LOCATE , 16: PRINT STRING$(60, 177)
	COLOR 14, 11: LOCATE 11, 14: PRINT USING "######"; A(I, 5) - A(I, 12);
	IF A(I, 0) = 0 OR (A(I, 5) - A(I, 12)) = 0 THEN LOCATE , 20: PRINT "      0.0";
	IF A(I, 0) > 0 AND (A(I, 5) - A(I, 12)) = 0 THEN LOCATE , 20: PRINT "      0.0";
	IF A(I, 0) > 0 AND (A(I, 5) - A(I, 12)) > 0 THEN LOCATE , 20: PRINT USING "#######.#"; (A(I, 5) - A(I, 12)) / A(I, 0);
	LOCATE , 29: PRINT USING "######"; A(I, 8);
	IF A(I, 0) = 0 OR A(I, 8) = 0 THEN LOCATE , 35: PRINT "     0.0";
	IF A(I, 0) > 0 AND A(I, 8) = 0 THEN LOCATE , 35: PRINT "     0.0";
	IF A(I, 0) > 0 AND A(I, 8) > 0 THEN LOCATE , 35: PRINT USING "######.#"; A(I, 8) / A(I, 0);
	LOCATE , 43: PRINT USING "#######"; A(I, 6);
	IF A(I, 0) = 0 OR A(I, 6) = 0 THEN LOCATE , 50: PRINT "  0.0";
	IF A(I, 0) > 0 AND A(I, 6) = 0 THEN LOCATE , 50: PRINT "  0.0";
	IF A(I, 0) > 0 AND A(I, 6) > 0 THEN LOCATE , 50: PRINT USING "###.#"; A(I, 6) / A(I, 0);

406 LOCATE , 55: PRINT USING "######"; A(I, 5);

408 LOCATE , 61: PRINT USING "#####"; A(I, 7);

410 IF A(I, 0) = 0 OR A(I, 7) = 0 THEN LOCATE , 66: PRINT "    0.0";

411 IF A(I, 0) > 0 AND A(I, 7) = 0 THEN LOCATE , 66: PRINT "    0.0";

412 IF A(I, 0) > 0 AND A(I, 7) > 0 THEN LOCATE , 66: PRINT USING "#####.#"; A(I, 7) / A(I, 0);
	COLOR 7, 0: PRINT STRING$(2, 177)
	LOCATE , 16: PRINT STRING$(59, 177)
	COLOR 14, 11: LOCATE 16, 14: PRINT USING "####"; A(I, 9);

417 IF A(I, 0) = 0 OR A(I, 9) = 0 THEN LOCATE , 18: PRINT "    0.0";

418 IF A(I, 0) > 0 AND A(I, 9) = 0 THEN LOCATE , 18: PRINT "    0.0";

419 IF A(I, 0) > 0 AND A(I, 9) > 0 THEN LOCATE , 18: PRINT USING "#####.#"; A(I, 9) / A(I, 0);

421 LOCATE , 25: PRINT USING "#######"; W0(I);

424 LOCATE , 32: PRINT USING "#######"; W1(I);

426 IF W0(I) = 0 THEN LOCATE , 39: PRINT "      0.0"; : PRINT "%";

427 IF W0(I) > 0 THEN LOCATE , 39: PRINT USING "#######.#"; W0(I) / W1(I) * 100; : PRINT "%";

431 LOCATE , 49: PRINT USING "#####.#"; A(I, 5) / A(I, 0);

433 LOCATE , 56: PRINT USING "######"; (A(I, 2) * 2) + A(I, 4) + W0(I);

437 IF (A(I, 2) * 2) + A(I, 4) + W0(I) = 0 THEN LOCATE , 62: PRINT "   0.0";

438 IF (A(I, 2) * 2) + A(I, 4) + W0(I) > 0 THEN LOCATE , 62: PRINT USING "####.#"; ((A(I, 2) * 2) + A(I, 4) + W0(I)) / A(I, 0);

440 IF A(I, 10) = 0 THEN LOCATE , 68: PRINT "    0.0";

441 IF A(I, 10) > 0 THEN LOCATE , 68: PRINT USING "#####.#"; ((A(I, 10) + 30) / 60) / A(I, 0);
	COLOR 7, 0: PRINT STRING$(2, 177)
	LOCATE , 16: PRINT STRING$(61, 177)

578 COLOR 15, 0: LOCATE 22: PRINT "HIT ENTER TO CONTINUE"

579 IF BI = 1 THEN 580 ELSE 581

580 LOCATE 22, 23: PRINT "OR ESC TO RETURN TO MENU"
581 I$ = GetKeyPress$

582 IF I$ = CHR$(0) THEN 591

583 IF I$ = CHR$(27) THEN 588

584 IF BI = 0 THEN 587

585 IF BI = 1 THEN 591

586 IF I < 14 THEN 591 ELSE 201

587 CLS : GOTO 201

588 BI = 0: GOTO 201

590 IF BI = 1 THEN 591 ELSE 201

591 NEXT I

592 IF BI = 1 THEN GOTO 201

1000 CLS : COLOR 15: PRINT "MAKE SURE LEAGUE UTILITIES DISK IS IN DRVE"

1001 LOCATE 23: PRINT "HIT ANY KEY TO CONTINUE"
1002 I$ = GetKeyPress$

1003 RUN "HELLO.EXE 3"

2060 COLOR 15, 0: CLS
	JJ = 4: GOSUB 9150: COLOR 15
	LOCATE , 30: PRINT "NO COMPILED STATS FOR TEAM": COLOR 7
8652 I$ = GetKeyPress$

2720 BO% = 1: RETURN

2000 CLS

2001 GOSUB 6000

2002 LOCATE 11, 31: PRINT "                  "

2009 COLOR 11: LOCATE 11, 33: PRINT B$(0)

2020 COLOR 15, 12

2021 COLOR 15, 2: LOCATE 5, 30: PRINT "              W - L ";
	LOCATE 6, 30: PRINT "  ACTUAL   ";
	LOCATE 7, 30: PRINT "  REPLAY   ";
	COLOR 15, 1: LOCATE 2, 3: PRINT "   OFFENSIVE STATS    "
	LOCATE 3, 3: PRINT "       ACTUAL   REPLAY"
	LOCATE 4, 3: PRINT " FGM   ";
	LOCATE 5, 3: PRINT " FGA   ";
	LOCATE 6, 3: PRINT " FG PCT";
	LOCATE 7, 3: PRINT " FTM   ";
	LOCATE 8, 3: PRINT " FTA   ";
	LOCATE 9, 3: PRINT " FT PCT";
	LOCATE 10, 3: PRINT " O.RB  ";
	LOCATE 11, 3: PRINT " D.RB  ";
	LOCATE 12, 3: PRINT " T.REB ";
	LOCATE 13, 3: PRINT " ASS'T ";
	LOCATE 14, 3: PRINT " FLS   ";
	LOCATE 15, 3: PRINT "  ST   ";
	LOCATE 16, 3: PRINT "  TO   ";
	LOCATE 17, 3: PRINT " BLK   ";
	LOCATE 18, 3: PRINT " 3-FGM ";
	LOCATE 19, 3: PRINT " 3-FGA ";
	LOCATE 20, 3: PRINT " 3-PCT ";
	COLOR 15, 12: LOCATE 2, 55: PRINT "   DEFENSIVE STATS   "
	LOCATE 3, 55: PRINT "       ACTUAL  REPLAY"
	LOCATE 4, 55: PRINT " FGM   ";
	LOCATE 5, 55: PRINT " FGA   ";
	LOCATE 6, 55: PRINT " FG PCT";
	LOCATE 7, 55: PRINT " FTM   ";
	LOCATE 8, 55: PRINT " FTA   ";
	LOCATE 9, 55: PRINT " FT PCT";
	LOCATE 10, 55: PRINT " O.RB  ";
	LOCATE 11, 55: PRINT " D.RB  ";
	LOCATE 12, 55: PRINT " T.REB ";
	LOCATE 13, 55: PRINT " ASS'T ";
	LOCATE 14, 55: PRINT " FLS   ";
	LOCATE 15, 55: PRINT "  ST   ";
	LOCATE 16, 55: PRINT "  TO   ";
	LOCATE 17, 55: PRINT " BLK   ";
	LOCATE 18, 55: PRINT " 3-FGM ";
	LOCATE 19, 55: PRINT " 3-FGA ";
	LOCATE 20, 55: PRINT " 3-PCT ";
	FOR I = 3 TO 21: LOCATE I, 25: COLOR 7, 0: PRINT STRING$(2, 177): NEXT
	FOR I = 3 TO 21: LOCATE I, 76: PRINT STRING$(2, 177): NEXT
	LOCATE 21, 5: PRINT STRING$(20, 177)
	LOCATE 21, 57: PRINT STRING$(20, 177)
	FOR I = 6 TO 8: LOCATE I, 50: PRINT STRING$(2, 177): NEXT
	LOCATE 8, 32: PRINT STRING$(18, 177)

2100 COLOR 3, 0: LOCATE 6, 41: PRINT USING "####"; T%(7);
	LOCATE 6, 45: PRINT USING "####"; T%(8); : PRINT " ";
	COLOR 14, 0: LOCATE 7, 41: PRINT USING "####"; WN;
	LOCATE 7, 45: PRINT USING "####"; LS; : PRINT " ";
	COLOR 3, 0: LOCATE 4, 10: PRINT USING "######"; t1%(1) / 100 * t1%(3);
	LOCATE 5, 10: PRINT USING "######"; t1%(1);

2110 IF t1%(1) = 0 THEN LOCATE 6, 10: PRINT "  .000";

2111 IF t1%(1) > 0 THEN LOCATE 6, 10: PRINT "  "; : PRINT USING ".###"; t1%(3) / 100;
	LOCATE 7, 10: PRINT USING "######"; t1%(5) / 100 * t1%(7);
	LOCATE 8, 10: PRINT USING "######"; t1%(5);

2120 IF t1%(5) = 0 THEN LOCATE 9, 10: PRINT "  .000";

2121 IF t1%(5) > 0 THEN LOCATE 9, 10: PRINT "  "; : PRINT USING ".###"; t1%(7) / 100;
	LOCATE 10, 10: PRINT USING "######"; .35 * t1%(9);
	LOCATE 11, 10: PRINT USING "######"; .65 * t1%(9);
	LOCATE 12, 10: PRINT USING "######"; t1%(9);
	LOCATE 13, 10: PRINT USING "######"; t1%(11);
	LOCATE 14, 10: PRINT USING "######"; t1%(13);
	LOCATE 15, 10: PRINT USING "######"; t1%(17);
	LOCATE 16, 10: PRINT USING "######"; t1%(15);
	LOCATE 17, 10: PRINT "   ---"
	LOCATE 18, 10: PRINT "   ---"
	LOCATE 19, 10: PRINT "   ---"
	LOCATE 20, 10: PRINT "   ---"
	COLOR 3, 0: LOCATE 4, 62: PRINT USING "######"; t1%(2) / 100 * t1%(4);
	LOCATE 5, 62: PRINT USING "######"; t1%(2);
	IF T%(2) = 0 THEN LOCATE 6, 62: PRINT "  .000";
	IF T%(2) > 0 THEN LOCATE 6, 62: PRINT "  "; : PRINT USING ".###"; t1%(4) / 100;
	LOCATE 7, 62: PRINT USING "######"; t1%(6) / 100 * t1%(8);
	LOCATE 8, 62: PRINT USING "######"; t1%(6);
	IF T%(6) = 0 THEN LOCATE 9, 62: PRINT "  .000";
	IF T%(6) > 0 THEN LOCATE 9, 62: PRINT "  "; : PRINT USING ".###"; t1%(8) / 100;
	LOCATE 10, 62: PRINT USING "######"; .35 * t1%(10);
	LOCATE 11, 62: PRINT USING "######"; .65 * t1%(10);
	LOCATE 12, 62: PRINT USING "######"; t1%(10);
	LOCATE 13, 62: PRINT USING "######"; t1%(12);
	LOCATE 14, 62: PRINT USING "######"; t1%(14);
	LOCATE 15, 62: PRINT USING "######"; t1%(18);
	LOCATE 16, 62: PRINT USING "######"; t1%(16);
	LOCATE 17, 62: PRINT "   ---"
	LOCATE 18, 62: PRINT USING "######"; t1%(19) * t1%(20) / 100;
	LOCATE 19, 62: PRINT USING "######"; t1%(19);
	IF T%(19) = 0 THEN LOCATE 20, 62: PRINT "  .000";
	IF T%(19) > 0 THEN LOCATE 20, 62: PRINT "  "; : PRINT USING ".###"; t1%(20) / 100;
	LOCATE 4, 16: PRINT USING "#########"; Z(2);
	LOCATE 5, 16: PRINT USING "#########"; Z(1);

2210 IF Z(1) = 0 THEN LOCATE 6, 16: PRINT "     .000";

2211 IF Z(1) > 0 THEN LOCATE 6, 16: PRINT "     "; : PRINT USING ".###"; (Z(2) / Z(1));
	LOCATE 7, 16: PRINT USING "#########"; Z(4);
	LOCATE 8, 16: PRINT USING "#########"; Z(3);

2220 IF Z(3) = 0 THEN LOCATE 9, 16: PRINT "     .000";

2221 IF Z(3) > 0 THEN LOCATE 9, 16: PRINT "     "; : PRINT USING ".###"; (Z(4) / Z(3));
	LOCATE 10, 16: PRINT USING "#########"; Z(12);
	LOCATE 11, 16: PRINT USING "#########"; Z(5) - Z(12) - Z(15);
	LOCATE 12, 16: PRINT USING "#########"; Z(5) - Z(15);
	LOCATE 13, 16: PRINT USING "#########"; Z(8);
	LOCATE 14, 16: PRINT USING "#########"; Z(6);
	LOCATE 15, 16: PRINT USING "#########"; Z(7);
	LOCATE 16, 16: PRINT USING "#########"; Z(11);
	LOCATE 17, 16: PRINT USING "#########"; Z(9);
	LOCATE 18, 16: PRINT USING "#########"; Z(13);
	LOCATE 19, 16: PRINT USING "#########"; Z(14);
	LOCATE 4, 68: PRINT USING "########"; Z1(2);
	LOCATE 5, 68: PRINT USING "########"; Z1(1);
	IF Z1(1) = 0 THEN LOCATE 6, 68: PRINT "    .000";
	IF Z1(1) > 0 THEN LOCATE 6, 68: PRINT "    "; : PRINT USING ".###"; (Z1(2) / Z1(1));
	LOCATE 7, 68: PRINT USING "########"; Z1(4);
	LOCATE 8, 68: PRINT USING "########"; Z1(3);
	IF Z1(3) = 0 THEN LOCATE 9, 68: PRINT "    .000";
	IF Z1(3) > 0 THEN LOCATE 9, 68: PRINT "    "; : PRINT USING ".###"; (Z1(4) / Z1(3));
	LOCATE 10, 68: PRINT USING "########"; Z1(12);
	LOCATE 11, 68: PRINT USING "########"; Z1(5) - Z1(12) - Z1(15);
	LOCATE 12, 68: PRINT USING "########"; Z1(5) - Z1(15);
	LOCATE 13, 68: PRINT USING "########"; Z1(8);
	LOCATE 14, 68: PRINT USING "########"; Z1(6);
	LOCATE 15, 68: PRINT USING "########"; Z1(7);
	LOCATE 16, 68: PRINT USING "########"; Z1(11);
	LOCATE 17, 68: PRINT USING "########"; Z1(9);
	LOCATE 18, 68: PRINT USING "########"; Z1(13);
	LOCATE 19, 68: PRINT USING "########"; Z1(14);
	IF Z1(13) = 0 THEN LOCATE 20, 68: PRINT "    .000";
	IF Z1(13) > 0 THEN LOCATE 20, 68: PRINT "    "; : PRINT USING ".###"; (Z1(13) / Z1(14));

2230 IF Z(13) = 0 THEN LOCATE 20, 16: PRINT "     .000";

2231 IF Z(13) > 0 THEN LOCATE 20, 16: PRINT "     "; : PRINT USING ".###"; (Z(13) / Z(14));

2800 LOCATE 23, 28: COLOR 15, 0: PRINT "HIT ANY KEY TO CONTINUE"
2801 I$ = GetKeyPress$

2900 GOTO 201

5000 FOR dc = 1 TO 19

5001 COLOR 15, 0: LOCATE dc

5002 PRINT STRING$(78, 177)

5003 NEXT

5004 RETURN

6000 FOR dc = 1 TO 22

6001 COLOR 15, 0: LOCATE dc

6002 PRINT STRING$(79, 177)

6003 NEXT

6004 RETURN

9000 FOR I = 0 TO 13
	IF P$(I) = "F " THEN PS$(I) = "FORWARD"
	IF P$(I) = "C " THEN PS$(I) = "CENTER"
	IF P$(I) = "G " THEN PS$(I) = "GUARD"
	IF P$(I) = "FC" THEN PS$(I) = "FORWARD/GUARD"
	IF P$(I) = "FG" THEN PS$(I) = "FORWARD/CENTER"
	IF P$(I) = "GF" THEN PS$(I) = "GUARD/FORWARD"
	IF P$(I) = "CF" THEN PS$(I) = "CENTER/FORWARD"
	NEXT

9150 LOCATE 8, 8: COLOR 14, 1
	PRINT " "; CHR$(201); STRING$(61, 205); CHR$(187); " ";
	FOR II = 1 TO JJ: LOCATE 8 + II, 8
	PRINT " º"; STRING$(61, 32); "º "; : NEXT
	LOCATE 9 + JJ, 8
	PRINT " "; CHR$(200); STRING$(61, 205); CHR$(188); " "; : LOCATE 10
	RETURN

SUB TITLE ()
	COLOR , 0: KEY OFF: CLS
	COLOR , 1: LOCATE 1, 1: PRINT TAB(80); : LOCATE , 23: COLOR 12
	PRINT "COURTSIDE COLLEGE BASKETBALL V4.0"
	LOCATE 24, 1: PRINT TAB(80); : LOCATE , 1
	PRINT "(C) LANCE HAFFNER/SHANNON LYNN 1987-1994"; TAB(70); LEFT$(TIME$, 5);
	LOCATE 3, 1: COLOR 2, 0
	COLOR 15: PRINT "        PROGRAMMED AND DEVELOPED BY LANCE HAFFNER AND SHANNON LYNN"
	  PRINT "     FOR TECHNICAL SUPPORT, CALL (615) 366-8088 OR SportGames@AOL.COM"
	COLOR 10
END SUB

'$INCLUDE: 'KeyInput.BM'
'$INCLUDE: 'QPProEqu.BM'
